ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB140:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <mpu6050.h>
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  46:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  47:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim2_ch2_ch4;
  48:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim2_up_ch3;
  49:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim3_ch2;
  50:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim3_ch1_trig;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** UART_HandleTypeDef huart1;
  53:Core/Src/main.c **** UART_HandleTypeDef huart2;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE BEGIN PV */
  56:Core/Src/main.c **** typedef struct
  57:Core/Src/main.c **** {
  58:Core/Src/main.c ****   uint8_t Error;
  59:Core/Src/main.c ****   uint8_t PreviousError;
  60:Core/Src/main.c ****   uint8_t P;
  61:Core/Src/main.c ****   uint8_t I;
  62:Core/Src/main.c ****   uint8_t D;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c ****   float Kp;
  65:Core/Src/main.c ****   float Ki;
  66:Core/Src/main.c ****   float Kd;
  67:Core/Src/main.c ****   float PID;
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   uint8_t M1; 
  70:Core/Src/main.c ****   uint8_t M2; 
  71:Core/Src/main.c ****   uint8_t M3; 
  72:Core/Src/main.c ****   uint8_t M4; 
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** }MotorControl;
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** mpu6050_t IMU; 
  77:Core/Src/main.c **** MotorControl motor = 
  78:Core/Src/main.c **** { 
  79:Core/Src/main.c ****   .Kp = 0.2, 
  80:Core/Src/main.c ****   .Ki = 0.00015, 
  81:Core/Src/main.c ****   .Kd = 3   
  82:Core/Src/main.c **** };
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** char Roll[30];
  85:Core/Src/main.c **** char Pitch[30];
  86:Core/Src/main.c **** uint16_t motorOutput[4];
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /* USER CODE END PV */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  93:Core/Src/main.c **** void SystemClock_Config(void);
  94:Core/Src/main.c **** static void MX_GPIO_Init(void);
  95:Core/Src/main.c **** static void MX_DMA_Init(void);
  96:Core/Src/main.c **** static void MX_I2C1_Init(void);
  97:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  98:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  99:Core/Src/main.c **** static void MX_TIM2_Init(void);
 100:Core/Src/main.c **** static void MX_TIM3_Init(void);
 101:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /* USER CODE END PFP */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 106:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** double PID_Control(MotorControl motor, double Desired_Angle ,double Angle)
 110:Core/Src/main.c **** {
 111:Core/Src/main.c ****   long startTime = HAL_GetTick();
 112:Core/Src/main.c ****   long currentTime = HAL_getTick(); 
 113:Core/Src/main.c ****   long elapsedTime = currentTime - startTime;
 114:Core/Src/main.c ****   motor.Error = Desired_Angle - Angle;
 115:Core/Src/main.c ****   motor.P = motor.Kp * motor.Error;
 116:Core/Src/main.c ****   motor.I += (motor.Ki*(motor.Error*elapsedTime));
 117:Core/Src/main.c ****   if(motor.I > 400) motor.I = 400;
 118:Core/Src/main.c ****   else if(motor.I < -400) motor.I = -400;
 119:Core/Src/main.c ****   motor.D = motor.Kd* ((motor.PreviousError - motor.Error)/elapsedTime);
 120:Core/Src/main.c ****   motor.PID = motor.P + motor.I + motor.D;
 121:Core/Src/main.c ****   return motor.PID;
 122:Core/Src/main.c **** }
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** void motorControl(int Throttle, double Roll, double Pitch, double Yaw , double PID)
 125:Core/Src/main.c **** {
 126:Core/Src/main.c ****   motor.M1 = 115 + Throttle - Roll - Pitch + Yaw; // CCW - Back left 
 127:Core/Src/main.c ****   motor.M2 = 115 + Throttle + Roll - Pitch - Yaw; // CW - Back right
 128:Core/Src/main.c ****   motor.M3 = 115 + Throttle + Roll + Pitch + Yaw; // CCW - Front right
 129:Core/Src/main.c ****   motor.M4 = 115 + Throttle + Roll - Pitch - Yaw; // CW - Front left
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   if (motor.M1 > 2000) motor.M1 = 2000;
 132:Core/Src/main.c ****   if (motor.M2 > 2000) motor.M2 = 2000;
 133:Core/Src/main.c ****   if (motor.M3 > 2000) motor.M3 = 2000;
 134:Core/Src/main.c ****   if (motor.M4 > 2000) motor.M4 = 2000;
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   // preven.motor cut-off
 137:Core/Src/main.c ****   if (motor.M1 < 1150) motor.M1 = 1150; 
 138:Core/Src/main.c ****   if (motor.M2 < 1150) motor.M2 = 1150;
 139:Core/Src/main.c ****   if (motor.M3 < 1150) motor.M3 = 1150;
 140:Core/Src/main.c ****   if (motor.M4 < 1150) motor.M4 = 1150;
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   TIM2->CCR2 = motor.M1 + PID;
 143:Core/Src/main.c ****   TIM2->CCR3 = motor.M2 + PID;
 144:Core/Src/main.c ****   TIM3->CCR1 = motor.M3 + PID;
 145:Core/Src/main.c ****   TIM3->CCR2 = motor.M4 + PID;
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_2);
 148:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_3);
 149:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_1);
 150:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_2);
 151:Core/Src/main.c **** }
 152:Core/Src/main.c **** 
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** /* USER CODE END 0 */
 155:Core/Src/main.c **** 
 156:Core/Src/main.c **** /**
 157:Core/Src/main.c ****   * @brief  The application entry point.
 158:Core/Src/main.c ****   * @retval int
 159:Core/Src/main.c ****   */
 160:Core/Src/main.c **** int main(void)
 161:Core/Src/main.c **** {
 162:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* USER CODE END 1 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 169:Core/Src/main.c ****   HAL_Init();
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* USER CODE END Init */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /* Configure the system clock */
 176:Core/Src/main.c ****   SystemClock_Config();
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /* USER CODE END SysInit */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* Initialize all configured peripherals */
 183:Core/Src/main.c ****   MX_GPIO_Init();
 184:Core/Src/main.c ****   MX_DMA_Init();
 185:Core/Src/main.c ****   MX_I2C1_Init();
 186:Core/Src/main.c ****   MX_USART1_UART_Init();
 187:Core/Src/main.c ****   MX_USART2_UART_Init();
 188:Core/Src/main.c ****   MX_TIM2_Init();
 189:Core/Src/main.c ****   MX_TIM3_Init();
 190:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 191:Core/Src/main.c ****   MPU6050_Init();
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   for(int callib=0; callib < 2000; callib++)
 194:Core/Src/main.c ****   {
 195:Core/Src/main.c ****       MPU6050_Read(&IMU);
 196:Core/Src/main.c ****       IMU.Gx_Callib+=IMU.Gx;
 197:Core/Src/main.c ****       IMU.Gy_Callib+=IMU.Gy;
 198:Core/Src/main.c ****       IMU.Gz_Callib+=IMU.Gz;
 199:Core/Src/main.c ****       HAL_Delay(1);
 200:Core/Src/main.c ****   }
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   IMU.Gx_Callib/=2000;
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 5


 203:Core/Src/main.c ****   IMU.Gy_Callib/=2000;
 204:Core/Src/main.c ****   IMU.Gz_Callib/=2000;
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   
 207:Core/Src/main.c ****   /* USER CODE END 2 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* Infinite loop */
 210:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 211:Core/Src/main.c ****   while (1)
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****     MPU6050_Read(&IMU);
 214:Core/Src/main.c ****     IMU.Gx -= IMU.Gx_Callib;
 215:Core/Src/main.c ****     IMU.Gy -= IMU.Gy_Callib;
 216:Core/Src/main.c ****     IMU.Gz -= IMU.Gz_Callib;
 217:Core/Src/main.c ****     /* USER CODE END WHILE */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 220:Core/Src/main.c ****     sprintf(Roll,"Roll: %.2f ",IMU.Roll);
 221:Core/Src/main.c ****     sprintf(Pitch,"Pitch: %.2f\n",IMU.Pitch);
 222:Core/Src/main.c ****     HAL_UART_Transmit_IT(&huart2, Roll, sizeof(Roll));
 223:Core/Src/main.c ****     HAL_UART_Transmit_IT(&huart2, Roll, sizeof(Roll));
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****     // motorControl(1500, IMU.Roll, IMU.Pitch, IMU.Gz);
 226:Core/Src/main.c ****     HAL_Delay(500);
 227:Core/Src/main.c ****    
 228:Core/Src/main.c ****   }
 229:Core/Src/main.c ****   /* USER CODE END 3 */
 230:Core/Src/main.c **** }
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** /**
 233:Core/Src/main.c ****   * @brief System Clock Configuration
 234:Core/Src/main.c ****   * @retval None
 235:Core/Src/main.c ****   */
 236:Core/Src/main.c **** void SystemClock_Config(void)
 237:Core/Src/main.c **** {
 238:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 239:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 242:Core/Src/main.c ****   */
 243:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 244:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 247:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 248:Core/Src/main.c ****   */
 249:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 250:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 251:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 252:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 253:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 254:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 180;
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 256:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 257:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 258:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 259:Core/Src/main.c ****   {
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 6


 260:Core/Src/main.c ****     Error_Handler();
 261:Core/Src/main.c ****   }
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /** Activate the Over-Drive mode
 264:Core/Src/main.c ****   */
 265:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 266:Core/Src/main.c ****   {
 267:Core/Src/main.c ****     Error_Handler();
 268:Core/Src/main.c ****   }
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 271:Core/Src/main.c ****   */
 272:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 273:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 274:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 275:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 276:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 277:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 280:Core/Src/main.c ****   {
 281:Core/Src/main.c ****     Error_Handler();
 282:Core/Src/main.c ****   }
 283:Core/Src/main.c **** }
 284:Core/Src/main.c **** 
 285:Core/Src/main.c **** /**
 286:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 287:Core/Src/main.c ****   * @param None
 288:Core/Src/main.c ****   * @retval None
 289:Core/Src/main.c ****   */
 290:Core/Src/main.c **** static void MX_I2C1_Init(void)
 291:Core/Src/main.c **** {
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 300:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 301:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 302:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 303:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 304:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 305:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 306:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 307:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 308:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 309:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 310:Core/Src/main.c ****   {
 311:Core/Src/main.c ****     Error_Handler();
 312:Core/Src/main.c ****   }
 313:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 316:Core/Src/main.c **** 
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 7


 317:Core/Src/main.c **** }
 318:Core/Src/main.c **** 
 319:Core/Src/main.c **** /**
 320:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 321:Core/Src/main.c ****   * @param None
 322:Core/Src/main.c ****   * @retval None
 323:Core/Src/main.c ****   */
 324:Core/Src/main.c **** static void MX_TIM2_Init(void)
 325:Core/Src/main.c **** {
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 332:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 333:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 338:Core/Src/main.c ****   htim2.Instance = TIM2;
 339:Core/Src/main.c ****   htim2.Init.Prescaler = 90-1;
 340:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 341:Core/Src/main.c ****   htim2.Init.Period = 20000-1;
 342:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 343:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 344:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 345:Core/Src/main.c ****   {
 346:Core/Src/main.c ****     Error_Handler();
 347:Core/Src/main.c ****   }
 348:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 349:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 350:Core/Src/main.c ****   {
 351:Core/Src/main.c ****     Error_Handler();
 352:Core/Src/main.c ****   }
 353:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 354:Core/Src/main.c ****   {
 355:Core/Src/main.c ****     Error_Handler();
 356:Core/Src/main.c ****   }
 357:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 358:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 359:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 360:Core/Src/main.c ****   {
 361:Core/Src/main.c ****     Error_Handler();
 362:Core/Src/main.c ****   }
 363:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 364:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 365:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 366:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 367:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 368:Core/Src/main.c ****   {
 369:Core/Src/main.c ****     Error_Handler();
 370:Core/Src/main.c ****   }
 371:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 372:Core/Src/main.c ****   {
 373:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 8


 374:Core/Src/main.c ****   }
 375:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 378:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** }
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** /**
 383:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 384:Core/Src/main.c ****   * @param None
 385:Core/Src/main.c ****   * @retval None
 386:Core/Src/main.c ****   */
 387:Core/Src/main.c **** static void MX_TIM3_Init(void)
 388:Core/Src/main.c **** {
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 395:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 396:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 397:Core/Src/main.c **** 
 398:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 401:Core/Src/main.c ****   htim3.Instance = TIM3;
 402:Core/Src/main.c ****   htim3.Init.Prescaler = 90-1;
 403:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 404:Core/Src/main.c ****   htim3.Init.Period = 20000-1;
 405:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 406:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 407:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 408:Core/Src/main.c ****   {
 409:Core/Src/main.c ****     Error_Handler();
 410:Core/Src/main.c ****   }
 411:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 412:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 413:Core/Src/main.c ****   {
 414:Core/Src/main.c ****     Error_Handler();
 415:Core/Src/main.c ****   }
 416:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 417:Core/Src/main.c ****   {
 418:Core/Src/main.c ****     Error_Handler();
 419:Core/Src/main.c ****   }
 420:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 421:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 422:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 423:Core/Src/main.c ****   {
 424:Core/Src/main.c ****     Error_Handler();
 425:Core/Src/main.c ****   }
 426:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 427:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 428:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 429:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 430:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 9


 431:Core/Src/main.c ****   {
 432:Core/Src/main.c ****     Error_Handler();
 433:Core/Src/main.c ****   }
 434:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 435:Core/Src/main.c ****   {
 436:Core/Src/main.c ****     Error_Handler();
 437:Core/Src/main.c ****   }
 438:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 439:Core/Src/main.c **** 
 440:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 441:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 442:Core/Src/main.c **** 
 443:Core/Src/main.c **** }
 444:Core/Src/main.c **** 
 445:Core/Src/main.c **** /**
 446:Core/Src/main.c ****   * @brief USART1 Initialization Function
 447:Core/Src/main.c ****   * @param None
 448:Core/Src/main.c ****   * @retval None
 449:Core/Src/main.c ****   */
 450:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 451:Core/Src/main.c **** {
 452:Core/Src/main.c **** 
 453:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 460:Core/Src/main.c ****   huart1.Instance = USART1;
 461:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 462:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 463:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 464:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 465:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 466:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 467:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 468:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 469:Core/Src/main.c ****   {
 470:Core/Src/main.c ****     Error_Handler();
 471:Core/Src/main.c ****   }
 472:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 473:Core/Src/main.c **** 
 474:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 475:Core/Src/main.c **** 
 476:Core/Src/main.c **** }
 477:Core/Src/main.c **** 
 478:Core/Src/main.c **** /**
 479:Core/Src/main.c ****   * @brief USART2 Initialization Function
 480:Core/Src/main.c ****   * @param None
 481:Core/Src/main.c ****   * @retval None
 482:Core/Src/main.c ****   */
 483:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 484:Core/Src/main.c **** {
 485:Core/Src/main.c **** 
 486:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 487:Core/Src/main.c **** 
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 10


 488:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 489:Core/Src/main.c **** 
 490:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 491:Core/Src/main.c **** 
 492:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 493:Core/Src/main.c ****   huart2.Instance = USART2;
 494:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 495:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 496:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 497:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 498:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 499:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 500:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 501:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 502:Core/Src/main.c ****   {
 503:Core/Src/main.c ****     Error_Handler();
 504:Core/Src/main.c ****   }
 505:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 506:Core/Src/main.c **** 
 507:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 508:Core/Src/main.c **** 
 509:Core/Src/main.c **** }
 510:Core/Src/main.c **** 
 511:Core/Src/main.c **** /**
 512:Core/Src/main.c ****   * Enable DMA controller clock
 513:Core/Src/main.c ****   */
 514:Core/Src/main.c **** static void MX_DMA_Init(void)
 515:Core/Src/main.c **** {
 516:Core/Src/main.c **** 
 517:Core/Src/main.c ****   /* DMA controller clock enable */
 518:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 519:Core/Src/main.c **** 
 520:Core/Src/main.c ****   /* DMA interrupt init */
 521:Core/Src/main.c ****   /* DMA1_Stream1_IRQn interrupt configuration */
 522:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 0, 0);
 523:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 524:Core/Src/main.c ****   /* DMA1_Stream4_IRQn interrupt configuration */
 525:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 0, 0);
 526:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 527:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 528:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 529:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 530:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 531:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 0, 0);
 532:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 533:Core/Src/main.c **** 
 534:Core/Src/main.c **** }
 535:Core/Src/main.c **** 
 536:Core/Src/main.c **** /**
 537:Core/Src/main.c ****   * @brief GPIO Initialization Function
 538:Core/Src/main.c ****   * @param None
 539:Core/Src/main.c ****   * @retval None
 540:Core/Src/main.c ****   */
 541:Core/Src/main.c **** static void MX_GPIO_Init(void)
 542:Core/Src/main.c **** {
  28              		.loc 1 542 1 view -0
  29              		.cfi_startproc
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 11


  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 84B0     		sub	sp, sp, #16
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
 543:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 544:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 545:Core/Src/main.c **** 
 546:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 547:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  36              		.loc 1 547 3 view .LVU1
  37              	.LBB4:
  38              		.loc 1 547 3 view .LVU2
  39 0002 0022     		movs	r2, #0
  40 0004 0092     		str	r2, [sp]
  41              		.loc 1 547 3 view .LVU3
  42 0006 154B     		ldr	r3, .L3
  43 0008 196B     		ldr	r1, [r3, #48]
  44 000a 41F00401 		orr	r1, r1, #4
  45 000e 1963     		str	r1, [r3, #48]
  46              		.loc 1 547 3 view .LVU4
  47 0010 196B     		ldr	r1, [r3, #48]
  48 0012 01F00401 		and	r1, r1, #4
  49 0016 0091     		str	r1, [sp]
  50              		.loc 1 547 3 view .LVU5
  51 0018 0099     		ldr	r1, [sp]
  52              	.LBE4:
  53              		.loc 1 547 3 view .LVU6
 548:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  54              		.loc 1 548 3 view .LVU7
  55              	.LBB5:
  56              		.loc 1 548 3 view .LVU8
  57 001a 0192     		str	r2, [sp, #4]
  58              		.loc 1 548 3 view .LVU9
  59 001c 196B     		ldr	r1, [r3, #48]
  60 001e 41F08001 		orr	r1, r1, #128
  61 0022 1963     		str	r1, [r3, #48]
  62              		.loc 1 548 3 view .LVU10
  63 0024 196B     		ldr	r1, [r3, #48]
  64 0026 01F08001 		and	r1, r1, #128
  65 002a 0191     		str	r1, [sp, #4]
  66              		.loc 1 548 3 view .LVU11
  67 002c 0199     		ldr	r1, [sp, #4]
  68              	.LBE5:
  69              		.loc 1 548 3 view .LVU12
 549:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  70              		.loc 1 549 3 view .LVU13
  71              	.LBB6:
  72              		.loc 1 549 3 view .LVU14
  73 002e 0292     		str	r2, [sp, #8]
  74              		.loc 1 549 3 view .LVU15
  75 0030 196B     		ldr	r1, [r3, #48]
  76 0032 41F00101 		orr	r1, r1, #1
  77 0036 1963     		str	r1, [r3, #48]
  78              		.loc 1 549 3 view .LVU16
  79 0038 196B     		ldr	r1, [r3, #48]
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 12


  80 003a 01F00101 		and	r1, r1, #1
  81 003e 0291     		str	r1, [sp, #8]
  82              		.loc 1 549 3 view .LVU17
  83 0040 0299     		ldr	r1, [sp, #8]
  84              	.LBE6:
  85              		.loc 1 549 3 view .LVU18
 550:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  86              		.loc 1 550 3 view .LVU19
  87              	.LBB7:
  88              		.loc 1 550 3 view .LVU20
  89 0042 0392     		str	r2, [sp, #12]
  90              		.loc 1 550 3 view .LVU21
  91 0044 1A6B     		ldr	r2, [r3, #48]
  92 0046 42F00202 		orr	r2, r2, #2
  93 004a 1A63     		str	r2, [r3, #48]
  94              		.loc 1 550 3 view .LVU22
  95 004c 1B6B     		ldr	r3, [r3, #48]
  96 004e 03F00203 		and	r3, r3, #2
  97 0052 0393     		str	r3, [sp, #12]
  98              		.loc 1 550 3 view .LVU23
  99 0054 039B     		ldr	r3, [sp, #12]
 100              	.LBE7:
 101              		.loc 1 550 3 view .LVU24
 551:Core/Src/main.c **** 
 552:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 553:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 554:Core/Src/main.c **** }
 102              		.loc 1 554 1 is_stmt 0 view .LVU25
 103 0056 04B0     		add	sp, sp, #16
 104              	.LCFI1:
 105              		.cfi_def_cfa_offset 0
 106              		@ sp needed
 107 0058 7047     		bx	lr
 108              	.L4:
 109 005a 00BF     		.align	2
 110              	.L3:
 111 005c 00380240 		.word	1073887232
 112              		.cfi_endproc
 113              	.LFE140:
 115              		.section	.text.MX_DMA_Init,"ax",%progbits
 116              		.align	1
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	MX_DMA_Init:
 122              	.LFB139:
 515:Core/Src/main.c **** 
 123              		.loc 1 515 1 is_stmt 1 view -0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 8
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127 0000 10B5     		push	{r4, lr}
 128              	.LCFI2:
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 4, -8
 131              		.cfi_offset 14, -4
 132 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 13


 133              	.LCFI3:
 134              		.cfi_def_cfa_offset 16
 518:Core/Src/main.c **** 
 135              		.loc 1 518 3 view .LVU27
 136              	.LBB8:
 518:Core/Src/main.c **** 
 137              		.loc 1 518 3 view .LVU28
 138 0004 0024     		movs	r4, #0
 139 0006 0194     		str	r4, [sp, #4]
 518:Core/Src/main.c **** 
 140              		.loc 1 518 3 view .LVU29
 141 0008 154B     		ldr	r3, .L7
 142 000a 1A6B     		ldr	r2, [r3, #48]
 143 000c 42F40012 		orr	r2, r2, #2097152
 144 0010 1A63     		str	r2, [r3, #48]
 518:Core/Src/main.c **** 
 145              		.loc 1 518 3 view .LVU30
 146 0012 1B6B     		ldr	r3, [r3, #48]
 147 0014 03F40013 		and	r3, r3, #2097152
 148 0018 0193     		str	r3, [sp, #4]
 518:Core/Src/main.c **** 
 149              		.loc 1 518 3 view .LVU31
 150 001a 019B     		ldr	r3, [sp, #4]
 151              	.LBE8:
 518:Core/Src/main.c **** 
 152              		.loc 1 518 3 view .LVU32
 522:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 153              		.loc 1 522 3 view .LVU33
 154 001c 2246     		mov	r2, r4
 155 001e 2146     		mov	r1, r4
 156 0020 0C20     		movs	r0, #12
 157 0022 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 158              	.LVL0:
 523:Core/Src/main.c ****   /* DMA1_Stream4_IRQn interrupt configuration */
 159              		.loc 1 523 3 view .LVU34
 160 0026 0C20     		movs	r0, #12
 161 0028 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 162              	.LVL1:
 525:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 163              		.loc 1 525 3 view .LVU35
 164 002c 2246     		mov	r2, r4
 165 002e 2146     		mov	r1, r4
 166 0030 0F20     		movs	r0, #15
 167 0032 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 168              	.LVL2:
 526:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 169              		.loc 1 526 3 view .LVU36
 170 0036 0F20     		movs	r0, #15
 171 0038 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 172              	.LVL3:
 528:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 173              		.loc 1 528 3 view .LVU37
 174 003c 2246     		mov	r2, r4
 175 003e 2146     		mov	r1, r4
 176 0040 1020     		movs	r0, #16
 177 0042 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 178              	.LVL4:
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 14


 529:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 179              		.loc 1 529 3 view .LVU38
 180 0046 1020     		movs	r0, #16
 181 0048 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 182              	.LVL5:
 531:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 183              		.loc 1 531 3 view .LVU39
 184 004c 2246     		mov	r2, r4
 185 004e 2146     		mov	r1, r4
 186 0050 1120     		movs	r0, #17
 187 0052 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 188              	.LVL6:
 532:Core/Src/main.c **** 
 189              		.loc 1 532 3 view .LVU40
 190 0056 1120     		movs	r0, #17
 191 0058 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 192              	.LVL7:
 534:Core/Src/main.c **** 
 193              		.loc 1 534 1 is_stmt 0 view .LVU41
 194 005c 02B0     		add	sp, sp, #8
 195              	.LCFI4:
 196              		.cfi_def_cfa_offset 8
 197              		@ sp needed
 198 005e 10BD     		pop	{r4, pc}
 199              	.L8:
 200              		.align	2
 201              	.L7:
 202 0060 00380240 		.word	1073887232
 203              		.cfi_endproc
 204              	.LFE139:
 206              		.global	__aeabi_dsub
 207              		.global	__aeabi_d2uiz
 208              		.global	__aeabi_f2d
 209              		.section	.text.PID_Control,"ax",%progbits
 210              		.align	1
 211              		.global	PID_Control
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 216              	PID_Control:
 217              	.LVL8:
 218              	.LFB130:
 110:Core/Src/main.c ****   long startTime = HAL_GetTick();
 219              		.loc 1 110 1 is_stmt 1 view -0
 220              		.cfi_startproc
 221              		@ args = 28, pretend = 16, frame = 8
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 110:Core/Src/main.c ****   long startTime = HAL_GetTick();
 223              		.loc 1 110 1 is_stmt 0 view .LVU43
 224 0000 84B0     		sub	sp, sp, #16
 225              	.LCFI5:
 226              		.cfi_def_cfa_offset 16
 227 0002 2DE9E043 		push	{r5, r6, r7, r8, r9, lr}
 228              	.LCFI6:
 229              		.cfi_def_cfa_offset 40
 230              		.cfi_offset 5, -40
 231              		.cfi_offset 6, -36
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 15


 232              		.cfi_offset 7, -32
 233              		.cfi_offset 8, -28
 234              		.cfi_offset 9, -24
 235              		.cfi_offset 14, -20
 236 0006 82B0     		sub	sp, sp, #8
 237              	.LCFI7:
 238              		.cfi_def_cfa_offset 48
 239 0008 08AD     		add	r5, sp, #32
 240 000a 85E80F00 		stm	r5, {r0, r1, r2, r3}
 241 000e 57EC106B 		vmov	r6, r7, d0
 242 0012 59EC118B 		vmov	r8, r9, d1
 111:Core/Src/main.c ****   long currentTime = HAL_getTick(); 
 243              		.loc 1 111 3 is_stmt 1 view .LVU44
 111:Core/Src/main.c ****   long currentTime = HAL_getTick(); 
 244              		.loc 1 111 20 is_stmt 0 view .LVU45
 245 0016 FFF7FEFF 		bl	HAL_GetTick
 246              	.LVL9:
 111:Core/Src/main.c ****   long currentTime = HAL_getTick(); 
 247              		.loc 1 111 20 view .LVU46
 248 001a 0546     		mov	r5, r0
 249              	.LVL10:
 112:Core/Src/main.c ****   long elapsedTime = currentTime - startTime;
 250              		.loc 1 112 3 is_stmt 1 view .LVU47
 112:Core/Src/main.c ****   long elapsedTime = currentTime - startTime;
 251              		.loc 1 112 22 is_stmt 0 view .LVU48
 252 001c FFF7FEFF 		bl	HAL_getTick
 253              	.LVL11:
 113:Core/Src/main.c ****   motor.Error = Desired_Angle - Angle;
 254              		.loc 1 113 3 is_stmt 1 view .LVU49
 113:Core/Src/main.c ****   motor.Error = Desired_Angle - Angle;
 255              		.loc 1 113 8 is_stmt 0 view .LVU50
 256 0020 451B     		subs	r5, r0, r5
 257              	.LVL12:
 114:Core/Src/main.c ****   motor.P = motor.Kp * motor.Error;
 258              		.loc 1 114 3 is_stmt 1 view .LVU51
 114:Core/Src/main.c ****   motor.P = motor.Kp * motor.Error;
 259              		.loc 1 114 31 is_stmt 0 view .LVU52
 260 0022 4246     		mov	r2, r8
 261 0024 4B46     		mov	r3, r9
 262 0026 3046     		mov	r0, r6
 263              	.LVL13:
 114:Core/Src/main.c ****   motor.P = motor.Kp * motor.Error;
 264              		.loc 1 114 31 view .LVU53
 265 0028 3946     		mov	r1, r7
 266 002a FFF7FEFF 		bl	__aeabi_dsub
 267              	.LVL14:
 114:Core/Src/main.c ****   motor.P = motor.Kp * motor.Error;
 268              		.loc 1 114 15 view .LVU54
 269 002e FFF7FEFF 		bl	__aeabi_d2uiz
 270              	.LVL15:
 271 0032 C1B2     		uxtb	r1, r0
 272 0034 8DF82010 		strb	r1, [sp, #32]
 115:Core/Src/main.c ****   motor.I += (motor.Ki*(motor.Error*elapsedTime));
 273              		.loc 1 115 3 is_stmt 1 view .LVU55
 115:Core/Src/main.c ****   motor.I += (motor.Ki*(motor.Error*elapsedTime));
 274              		.loc 1 115 22 is_stmt 0 view .LVU56
 275 0038 07EE901A 		vmov	s15, r1	@ int
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 16


 276 003c F8EEE77A 		vcvt.f32.s32	s15, s15
 277 0040 9DED0A7A 		vldr.32	s14, [sp, #40]
 278 0044 67EE877A 		vmul.f32	s15, s15, s14
 115:Core/Src/main.c ****   motor.I += (motor.Ki*(motor.Error*elapsedTime));
 279              		.loc 1 115 11 view .LVU57
 280 0048 FCEEE77A 		vcvt.u32.f32	s15, s15
 281 004c CDED017A 		vstr.32	s15, [sp, #4]	@ int
 282 0050 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 283 0054 8DF82230 		strb	r3, [sp, #34]
 116:Core/Src/main.c ****   if(motor.I > 400) motor.I = 400;
 284              		.loc 1 116 3 is_stmt 1 view .LVU58
 116:Core/Src/main.c ****   if(motor.I > 400) motor.I = 400;
 285              		.loc 1 116 8 is_stmt 0 view .LVU59
 286 0058 9DF82320 		ldrb	r2, [sp, #35]	@ zero_extendqisi2
 287 005c 07EE902A 		vmov	s15, r2	@ int
 116:Core/Src/main.c ****   if(motor.I > 400) motor.I = 400;
 288              		.loc 1 116 36 view .LVU60
 289 0060 05FB01F2 		mul	r2, r5, r1
 290 0064 07EE102A 		vmov	s14, r2	@ int
 116:Core/Src/main.c ****   if(motor.I > 400) motor.I = 400;
 291              		.loc 1 116 23 view .LVU61
 292 0068 B8EEC77A 		vcvt.f32.s32	s14, s14
 293 006c DDED0B6A 		vldr.32	s13, [sp, #44]
 294 0070 27EE267A 		vmul.f32	s14, s14, s13
 116:Core/Src/main.c ****   if(motor.I > 400) motor.I = 400;
 295              		.loc 1 116 11 view .LVU62
 296 0074 F8EEE77A 		vcvt.f32.s32	s15, s15
 297 0078 77EE877A 		vadd.f32	s15, s15, s14
 298 007c FCEEE77A 		vcvt.u32.f32	s15, s15
 299 0080 CDED017A 		vstr.32	s15, [sp, #4]	@ int
 300 0084 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
 301 0088 8DF82300 		strb	r0, [sp, #35]
 117:Core/Src/main.c ****   else if(motor.I < -400) motor.I = -400;
 302              		.loc 1 117 3 is_stmt 1 view .LVU63
 118:Core/Src/main.c ****   motor.D = motor.Kd* ((motor.PreviousError - motor.Error)/elapsedTime);
 303              		.loc 1 118 8 view .LVU64
 119:Core/Src/main.c ****   motor.PID = motor.P + motor.I + motor.D;
 304              		.loc 1 119 3 view .LVU65
 119:Core/Src/main.c ****   motor.PID = motor.P + motor.I + motor.D;
 305              		.loc 1 119 30 is_stmt 0 view .LVU66
 306 008c 9DF82120 		ldrb	r2, [sp, #33]	@ zero_extendqisi2
 119:Core/Src/main.c ****   motor.PID = motor.P + motor.I + motor.D;
 307              		.loc 1 119 45 view .LVU67
 308 0090 521A     		subs	r2, r2, r1
 119:Core/Src/main.c ****   motor.PID = motor.P + motor.I + motor.D;
 309              		.loc 1 119 59 view .LVU68
 310 0092 92FBF5F2 		sdiv	r2, r2, r5
 311 0096 07EE902A 		vmov	s15, r2	@ int
 119:Core/Src/main.c ****   motor.PID = motor.P + motor.I + motor.D;
 312              		.loc 1 119 21 view .LVU69
 313 009a F8EEE77A 		vcvt.f32.s32	s15, s15
 314 009e 9DED0C7A 		vldr.32	s14, [sp, #48]
 315 00a2 67EE877A 		vmul.f32	s15, s15, s14
 119:Core/Src/main.c ****   motor.PID = motor.P + motor.I + motor.D;
 316              		.loc 1 119 11 view .LVU70
 317 00a6 FCEEE77A 		vcvt.u32.f32	s15, s15
 318 00aa CDED017A 		vstr.32	s15, [sp, #4]	@ int
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 17


 319 00ae 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 320 00b2 8DF82420 		strb	r2, [sp, #36]
 120:Core/Src/main.c ****   return motor.PID;
 321              		.loc 1 120 3 is_stmt 1 view .LVU71
 120:Core/Src/main.c ****   return motor.PID;
 322              		.loc 1 120 23 is_stmt 0 view .LVU72
 323 00b6 0344     		add	r3, r3, r0
 120:Core/Src/main.c ****   return motor.PID;
 324              		.loc 1 120 33 view .LVU73
 325 00b8 1344     		add	r3, r3, r2
 120:Core/Src/main.c ****   return motor.PID;
 326              		.loc 1 120 13 view .LVU74
 327 00ba 07EE903A 		vmov	s15, r3	@ int
 328 00be F8EEE77A 		vcvt.f32.s32	s15, s15
 329 00c2 CDED0D7A 		vstr.32	s15, [sp, #52]
 121:Core/Src/main.c **** }
 330              		.loc 1 121 3 is_stmt 1 view .LVU75
 121:Core/Src/main.c **** }
 331              		.loc 1 121 15 is_stmt 0 view .LVU76
 332 00c6 17EE900A 		vmov	r0, s15
 333 00ca FFF7FEFF 		bl	__aeabi_f2d
 334              	.LVL16:
 122:Core/Src/main.c **** 
 335              		.loc 1 122 1 view .LVU77
 336 00ce 41EC100B 		vmov	d0, r0, r1
 337 00d2 02B0     		add	sp, sp, #8
 338              	.LCFI8:
 339              		.cfi_def_cfa_offset 40
 340              		@ sp needed
 341 00d4 BDE8E043 		pop	{r5, r6, r7, r8, r9, lr}
 342              	.LCFI9:
 343              		.cfi_restore 14
 344              		.cfi_restore 9
 345              		.cfi_restore 8
 346              		.cfi_restore 7
 347              		.cfi_restore 6
 348              		.cfi_restore 5
 349              		.cfi_def_cfa_offset 16
 350              	.LVL17:
 122:Core/Src/main.c **** 
 351              		.loc 1 122 1 view .LVU78
 352 00d8 04B0     		add	sp, sp, #16
 353              	.LCFI10:
 354              		.cfi_def_cfa_offset 0
 355 00da 7047     		bx	lr
 356              		.cfi_endproc
 357              	.LFE130:
 359              		.global	__aeabi_i2d
 360              		.global	__aeabi_dadd
 361              		.section	.text.motorControl,"ax",%progbits
 362              		.align	1
 363              		.global	motorControl
 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 368              	motorControl:
 369              	.LVL18:
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 18


 370              	.LFB131:
 125:Core/Src/main.c ****   motor.M1 = 115 + Throttle - Roll - Pitch + Yaw; // CCW - Back left 
 371              		.loc 1 125 1 is_stmt 1 view -0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 16
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 125:Core/Src/main.c ****   motor.M1 = 115 + Throttle - Roll - Pitch + Yaw; // CCW - Back left 
 375              		.loc 1 125 1 is_stmt 0 view .LVU80
 376 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 377              	.LCFI11:
 378              		.cfi_def_cfa_offset 36
 379              		.cfi_offset 4, -36
 380              		.cfi_offset 5, -32
 381              		.cfi_offset 6, -28
 382              		.cfi_offset 7, -24
 383              		.cfi_offset 8, -20
 384              		.cfi_offset 9, -16
 385              		.cfi_offset 10, -12
 386              		.cfi_offset 11, -8
 387              		.cfi_offset 14, -4
 388 0004 85B0     		sub	sp, sp, #20
 389              	.LCFI12:
 390              		.cfi_def_cfa_offset 56
 391 0006 59EC108B 		vmov	r8, r9, d0
 392 000a 57EC116B 		vmov	r6, r7, d1
 393 000e 5BEC12AB 		vmov	r10, fp, d2
 394 0012 8DED023B 		vstr.64	d3, [sp, #8]
 126:Core/Src/main.c ****   motor.M2 = 115 + Throttle + Roll - Pitch - Yaw; // CW - Back right
 395              		.loc 1 126 3 is_stmt 1 view .LVU81
 126:Core/Src/main.c ****   motor.M2 = 115 + Throttle + Roll - Pitch - Yaw; // CW - Back right
 396              		.loc 1 126 29 is_stmt 0 view .LVU82
 397 0016 7330     		adds	r0, r0, #115
 398              	.LVL19:
 126:Core/Src/main.c ****   motor.M2 = 115 + Throttle + Roll - Pitch - Yaw; // CW - Back right
 399              		.loc 1 126 29 view .LVU83
 400 0018 FFF7FEFF 		bl	__aeabi_i2d
 401              	.LVL20:
 126:Core/Src/main.c ****   motor.M2 = 115 + Throttle + Roll - Pitch - Yaw; // CW - Back right
 402              		.loc 1 126 29 view .LVU84
 403 001c 0246     		mov	r2, r0
 404 001e 0B46     		mov	r3, r1
 405 0020 CDE90023 		strd	r2, [sp]
 406 0024 4246     		mov	r2, r8
 407 0026 4B46     		mov	r3, r9
 408 0028 FFF7FEFF 		bl	__aeabi_dsub
 409              	.LVL21:
 126:Core/Src/main.c ****   motor.M2 = 115 + Throttle + Roll - Pitch - Yaw; // CW - Back right
 410              		.loc 1 126 36 view .LVU85
 411 002c 3246     		mov	r2, r6
 412 002e 3B46     		mov	r3, r7
 413 0030 FFF7FEFF 		bl	__aeabi_dsub
 414              	.LVL22:
 126:Core/Src/main.c ****   motor.M2 = 115 + Throttle + Roll - Pitch - Yaw; // CW - Back right
 415              		.loc 1 126 44 view .LVU86
 416 0034 5246     		mov	r2, r10
 417 0036 5B46     		mov	r3, fp
 418 0038 FFF7FEFF 		bl	__aeabi_dadd
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 19


 419              	.LVL23:
 126:Core/Src/main.c ****   motor.M2 = 115 + Throttle + Roll - Pitch - Yaw; // CW - Back right
 420              		.loc 1 126 12 view .LVU87
 421 003c 274C     		ldr	r4, .L13
 422 003e FFF7FEFF 		bl	__aeabi_d2uiz
 423              	.LVL24:
 424 0042 2076     		strb	r0, [r4, #24]
 127:Core/Src/main.c ****   motor.M3 = 115 + Throttle + Roll + Pitch + Yaw; // CCW - Front right
 425              		.loc 1 127 3 is_stmt 1 view .LVU88
 127:Core/Src/main.c ****   motor.M3 = 115 + Throttle + Roll + Pitch + Yaw; // CCW - Front right
 426              		.loc 1 127 29 is_stmt 0 view .LVU89
 427 0044 4246     		mov	r2, r8
 428 0046 4B46     		mov	r3, r9
 429 0048 DDE90001 		ldrd	r0, [sp]
 430 004c FFF7FEFF 		bl	__aeabi_dadd
 431              	.LVL25:
 432 0050 8046     		mov	r8, r0
 433              	.LVL26:
 127:Core/Src/main.c ****   motor.M3 = 115 + Throttle + Roll + Pitch + Yaw; // CCW - Front right
 434              		.loc 1 127 29 view .LVU90
 435 0052 8946     		mov	r9, r1
 127:Core/Src/main.c ****   motor.M3 = 115 + Throttle + Roll + Pitch + Yaw; // CCW - Front right
 436              		.loc 1 127 36 view .LVU91
 437 0054 3246     		mov	r2, r6
 438 0056 3B46     		mov	r3, r7
 439 0058 FFF7FEFF 		bl	__aeabi_dsub
 440              	.LVL27:
 127:Core/Src/main.c ****   motor.M3 = 115 + Throttle + Roll + Pitch + Yaw; // CCW - Front right
 441              		.loc 1 127 44 view .LVU92
 442 005c 5246     		mov	r2, r10
 443 005e 5B46     		mov	r3, fp
 444 0060 FFF7FEFF 		bl	__aeabi_dsub
 445              	.LVL28:
 127:Core/Src/main.c ****   motor.M3 = 115 + Throttle + Roll + Pitch + Yaw; // CCW - Front right
 446              		.loc 1 127 12 view .LVU93
 447 0064 FFF7FEFF 		bl	__aeabi_d2uiz
 448              	.LVL29:
 449 0068 C5B2     		uxtb	r5, r0
 450 006a 6576     		strb	r5, [r4, #25]
 128:Core/Src/main.c ****   motor.M4 = 115 + Throttle + Roll - Pitch - Yaw; // CW - Front left
 451              		.loc 1 128 3 is_stmt 1 view .LVU94
 128:Core/Src/main.c ****   motor.M4 = 115 + Throttle + Roll - Pitch - Yaw; // CW - Front left
 452              		.loc 1 128 36 is_stmt 0 view .LVU95
 453 006c 3246     		mov	r2, r6
 454 006e 3B46     		mov	r3, r7
 455 0070 4046     		mov	r0, r8
 456 0072 4946     		mov	r1, r9
 457 0074 FFF7FEFF 		bl	__aeabi_dadd
 458              	.LVL30:
 128:Core/Src/main.c ****   motor.M4 = 115 + Throttle + Roll - Pitch - Yaw; // CW - Front left
 459              		.loc 1 128 44 view .LVU96
 460 0078 5246     		mov	r2, r10
 461 007a 5B46     		mov	r3, fp
 462 007c FFF7FEFF 		bl	__aeabi_dadd
 463              	.LVL31:
 128:Core/Src/main.c ****   motor.M4 = 115 + Throttle + Roll - Pitch - Yaw; // CW - Front left
 464              		.loc 1 128 12 view .LVU97
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 20


 465 0080 FFF7FEFF 		bl	__aeabi_d2uiz
 466              	.LVL32:
 467 0084 A076     		strb	r0, [r4, #26]
 129:Core/Src/main.c **** 
 468              		.loc 1 129 3 is_stmt 1 view .LVU98
 129:Core/Src/main.c **** 
 469              		.loc 1 129 12 is_stmt 0 view .LVU99
 470 0086 E576     		strb	r5, [r4, #27]
 131:Core/Src/main.c ****   if (motor.M2 > 2000) motor.M2 = 2000;
 471              		.loc 1 131 3 is_stmt 1 view .LVU100
 132:Core/Src/main.c ****   if (motor.M3 > 2000) motor.M3 = 2000;
 472              		.loc 1 132 3 view .LVU101
 133:Core/Src/main.c ****   if (motor.M4 > 2000) motor.M4 = 2000;
 473              		.loc 1 133 3 view .LVU102
 134:Core/Src/main.c **** 
 474              		.loc 1 134 3 view .LVU103
 137:Core/Src/main.c ****   if (motor.M2 < 1150) motor.M2 = 1150;
 475              		.loc 1 137 3 view .LVU104
 137:Core/Src/main.c ****   if (motor.M2 < 1150) motor.M2 = 1150;
 476              		.loc 1 137 24 view .LVU105
 137:Core/Src/main.c ****   if (motor.M2 < 1150) motor.M2 = 1150;
 477              		.loc 1 137 33 is_stmt 0 view .LVU106
 478 0088 7E23     		movs	r3, #126
 479 008a 2376     		strb	r3, [r4, #24]
 138:Core/Src/main.c ****   if (motor.M3 < 1150) motor.M3 = 1150;
 480              		.loc 1 138 3 is_stmt 1 view .LVU107
 138:Core/Src/main.c ****   if (motor.M3 < 1150) motor.M3 = 1150;
 481              		.loc 1 138 24 view .LVU108
 138:Core/Src/main.c ****   if (motor.M3 < 1150) motor.M3 = 1150;
 482              		.loc 1 138 33 is_stmt 0 view .LVU109
 483 008c 6376     		strb	r3, [r4, #25]
 139:Core/Src/main.c ****   if (motor.M4 < 1150) motor.M4 = 1150;
 484              		.loc 1 139 3 is_stmt 1 view .LVU110
 139:Core/Src/main.c ****   if (motor.M4 < 1150) motor.M4 = 1150;
 485              		.loc 1 139 24 view .LVU111
 139:Core/Src/main.c ****   if (motor.M4 < 1150) motor.M4 = 1150;
 486              		.loc 1 139 33 is_stmt 0 view .LVU112
 487 008e A376     		strb	r3, [r4, #26]
 140:Core/Src/main.c **** 
 488              		.loc 1 140 3 is_stmt 1 view .LVU113
 140:Core/Src/main.c **** 
 489              		.loc 1 140 24 view .LVU114
 140:Core/Src/main.c **** 
 490              		.loc 1 140 33 is_stmt 0 view .LVU115
 491 0090 E376     		strb	r3, [r4, #27]
 142:Core/Src/main.c ****   TIM2->CCR3 = motor.M2 + PID;
 492              		.loc 1 142 3 is_stmt 1 view .LVU116
 142:Core/Src/main.c ****   TIM2->CCR3 = motor.M2 + PID;
 493              		.loc 1 142 25 is_stmt 0 view .LVU117
 494 0092 0022     		movs	r2, #0
 495 0094 124B     		ldr	r3, .L13+4
 496 0096 DDE90201 		ldrd	r0, [sp, #8]
 497 009a FFF7FEFF 		bl	__aeabi_dadd
 498              	.LVL33:
 142:Core/Src/main.c ****   TIM2->CCR3 = motor.M2 + PID;
 499              		.loc 1 142 14 view .LVU118
 500 009e FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 21


 501              	.LVL34:
 502 00a2 4FF08043 		mov	r3, #1073741824
 503 00a6 9863     		str	r0, [r3, #56]
 504              	.LVL35:
 143:Core/Src/main.c ****   TIM3->CCR1 = motor.M3 + PID;
 505              		.loc 1 143 3 is_stmt 1 view .LVU119
 143:Core/Src/main.c ****   TIM3->CCR1 = motor.M3 + PID;
 506              		.loc 1 143 14 is_stmt 0 view .LVU120
 507 00a8 D863     		str	r0, [r3, #60]
 144:Core/Src/main.c ****   TIM3->CCR2 = motor.M4 + PID;
 508              		.loc 1 144 3 is_stmt 1 view .LVU121
 144:Core/Src/main.c ****   TIM3->CCR2 = motor.M4 + PID;
 509              		.loc 1 144 14 is_stmt 0 view .LVU122
 510 00aa 03F58063 		add	r3, r3, #1024
 511 00ae 5863     		str	r0, [r3, #52]
 145:Core/Src/main.c **** 
 512              		.loc 1 145 3 is_stmt 1 view .LVU123
 145:Core/Src/main.c **** 
 513              		.loc 1 145 14 is_stmt 0 view .LVU124
 514 00b0 9863     		str	r0, [r3, #56]
 147:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_3);
 515              		.loc 1 147 3 is_stmt 1 view .LVU125
 516 00b2 0C4C     		ldr	r4, .L13+8
 517 00b4 0421     		movs	r1, #4
 518 00b6 2046     		mov	r0, r4
 519 00b8 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 520              	.LVL36:
 148:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_1);
 521              		.loc 1 148 3 view .LVU126
 522 00bc 0821     		movs	r1, #8
 523 00be 2046     		mov	r0, r4
 524 00c0 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 525              	.LVL37:
 149:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_2);
 526              		.loc 1 149 3 view .LVU127
 527 00c4 084C     		ldr	r4, .L13+12
 528 00c6 0021     		movs	r1, #0
 529 00c8 2046     		mov	r0, r4
 530 00ca FFF7FEFF 		bl	HAL_TIM_PWM_Start
 531              	.LVL38:
 150:Core/Src/main.c **** }
 532              		.loc 1 150 3 view .LVU128
 533 00ce 0421     		movs	r1, #4
 534 00d0 2046     		mov	r0, r4
 535 00d2 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 536              	.LVL39:
 151:Core/Src/main.c **** 
 537              		.loc 1 151 1 is_stmt 0 view .LVU129
 538 00d6 05B0     		add	sp, sp, #20
 539              	.LCFI13:
 540              		.cfi_def_cfa_offset 36
 541              		@ sp needed
 542 00d8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 543              	.LVL40:
 544              	.L14:
 151:Core/Src/main.c **** 
 545              		.loc 1 151 1 view .LVU130
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 22


 546              		.align	2
 547              	.L13:
 548 00dc 00000000 		.word	motor
 549 00e0 00805F40 		.word	1080000512
 550 00e4 00000000 		.word	htim2
 551 00e8 00000000 		.word	htim3
 552              		.cfi_endproc
 553              	.LFE131:
 555              		.section	.text.Error_Handler,"ax",%progbits
 556              		.align	1
 557              		.global	Error_Handler
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 562              	Error_Handler:
 563              	.LFB141:
 555:Core/Src/main.c **** 
 556:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 557:Core/Src/main.c **** 
 558:Core/Src/main.c **** /* USER CODE END 4 */
 559:Core/Src/main.c **** 
 560:Core/Src/main.c **** /**
 561:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 562:Core/Src/main.c ****   * @retval None
 563:Core/Src/main.c ****   */
 564:Core/Src/main.c **** void Error_Handler(void)
 565:Core/Src/main.c **** {
 564              		.loc 1 565 1 is_stmt 1 view -0
 565              		.cfi_startproc
 566              		@ Volatile: function does not return.
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 566:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 567:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 568:Core/Src/main.c ****   __disable_irq();
 570              		.loc 1 568 3 view .LVU132
 571              	.LBB9:
 572              	.LBI9:
 573              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 23


  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 24


  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 25


 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 574              		.loc 2 140 27 view .LVU133
 575              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 576              		.loc 2 142 3 view .LVU134
 577              		.syntax unified
 578              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 579 0000 72B6     		cpsid i
 580              	@ 0 "" 2
 581              		.thumb
 582              		.syntax unified
 583              	.L16:
 584              	.LBE10:
 585              	.LBE9:
 569:Core/Src/main.c ****   while (1)
 586              		.loc 1 569 3 discriminator 1 view .LVU135
 570:Core/Src/main.c ****   {
 571:Core/Src/main.c ****   }
 587              		.loc 1 571 3 discriminator 1 view .LVU136
 569:Core/Src/main.c ****   while (1)
 588              		.loc 1 569 9 discriminator 1 view .LVU137
 589 0002 FEE7     		b	.L16
 590              		.cfi_endproc
 591              	.LFE141:
 593              		.section	.text.MX_I2C1_Init,"ax",%progbits
 594              		.align	1
 595              		.syntax unified
 596              		.thumb
 597              		.thumb_func
 599              	MX_I2C1_Init:
 600              	.LFB134:
 291:Core/Src/main.c **** 
 601              		.loc 1 291 1 view -0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 0
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605 0000 08B5     		push	{r3, lr}
 606              	.LCFI14:
 607              		.cfi_def_cfa_offset 8
 608              		.cfi_offset 3, -8
 609              		.cfi_offset 14, -4
 300:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 610              		.loc 1 300 3 view .LVU139
 300:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 611              		.loc 1 300 18 is_stmt 0 view .LVU140
 612 0002 0A48     		ldr	r0, .L21
 613 0004 0A4B     		ldr	r3, .L21+4
 614 0006 0360     		str	r3, [r0]
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 26


 301:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 615              		.loc 1 301 3 is_stmt 1 view .LVU141
 301:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 616              		.loc 1 301 25 is_stmt 0 view .LVU142
 617 0008 0A4B     		ldr	r3, .L21+8
 618 000a 4360     		str	r3, [r0, #4]
 302:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 619              		.loc 1 302 3 is_stmt 1 view .LVU143
 302:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 620              		.loc 1 302 24 is_stmt 0 view .LVU144
 621 000c 0023     		movs	r3, #0
 622 000e 8360     		str	r3, [r0, #8]
 303:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 623              		.loc 1 303 3 is_stmt 1 view .LVU145
 303:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 624              		.loc 1 303 26 is_stmt 0 view .LVU146
 625 0010 C360     		str	r3, [r0, #12]
 304:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 626              		.loc 1 304 3 is_stmt 1 view .LVU147
 304:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 627              		.loc 1 304 29 is_stmt 0 view .LVU148
 628 0012 4FF48042 		mov	r2, #16384
 629 0016 0261     		str	r2, [r0, #16]
 305:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 630              		.loc 1 305 3 is_stmt 1 view .LVU149
 305:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 631              		.loc 1 305 30 is_stmt 0 view .LVU150
 632 0018 4361     		str	r3, [r0, #20]
 306:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 633              		.loc 1 306 3 is_stmt 1 view .LVU151
 306:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 634              		.loc 1 306 26 is_stmt 0 view .LVU152
 635 001a 8361     		str	r3, [r0, #24]
 307:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 636              		.loc 1 307 3 is_stmt 1 view .LVU153
 307:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 637              		.loc 1 307 30 is_stmt 0 view .LVU154
 638 001c C361     		str	r3, [r0, #28]
 308:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 639              		.loc 1 308 3 is_stmt 1 view .LVU155
 308:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 640              		.loc 1 308 28 is_stmt 0 view .LVU156
 641 001e 0362     		str	r3, [r0, #32]
 309:Core/Src/main.c ****   {
 642              		.loc 1 309 3 is_stmt 1 view .LVU157
 309:Core/Src/main.c ****   {
 643              		.loc 1 309 7 is_stmt 0 view .LVU158
 644 0020 FFF7FEFF 		bl	HAL_I2C_Init
 645              	.LVL41:
 309:Core/Src/main.c ****   {
 646              		.loc 1 309 6 view .LVU159
 647 0024 00B9     		cbnz	r0, .L20
 317:Core/Src/main.c **** 
 648              		.loc 1 317 1 view .LVU160
 649 0026 08BD     		pop	{r3, pc}
 650              	.L20:
 311:Core/Src/main.c ****   }
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 27


 651              		.loc 1 311 5 is_stmt 1 view .LVU161
 652 0028 FFF7FEFF 		bl	Error_Handler
 653              	.LVL42:
 654              	.L22:
 655              		.align	2
 656              	.L21:
 657 002c 00000000 		.word	hi2c1
 658 0030 00540040 		.word	1073763328
 659 0034 A0860100 		.word	100000
 660              		.cfi_endproc
 661              	.LFE134:
 663              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 664              		.align	1
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 669              	MX_USART1_UART_Init:
 670              	.LFB137:
 451:Core/Src/main.c **** 
 671              		.loc 1 451 1 view -0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675 0000 08B5     		push	{r3, lr}
 676              	.LCFI15:
 677              		.cfi_def_cfa_offset 8
 678              		.cfi_offset 3, -8
 679              		.cfi_offset 14, -4
 460:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 680              		.loc 1 460 3 view .LVU163
 460:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 681              		.loc 1 460 19 is_stmt 0 view .LVU164
 682 0002 0A48     		ldr	r0, .L27
 683 0004 0A4B     		ldr	r3, .L27+4
 684 0006 0360     		str	r3, [r0]
 461:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 685              		.loc 1 461 3 is_stmt 1 view .LVU165
 461:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 686              		.loc 1 461 24 is_stmt 0 view .LVU166
 687 0008 4FF4E133 		mov	r3, #115200
 688 000c 4360     		str	r3, [r0, #4]
 462:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 689              		.loc 1 462 3 is_stmt 1 view .LVU167
 462:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 690              		.loc 1 462 26 is_stmt 0 view .LVU168
 691 000e 0023     		movs	r3, #0
 692 0010 8360     		str	r3, [r0, #8]
 463:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 693              		.loc 1 463 3 is_stmt 1 view .LVU169
 463:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 694              		.loc 1 463 24 is_stmt 0 view .LVU170
 695 0012 C360     		str	r3, [r0, #12]
 464:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 696              		.loc 1 464 3 is_stmt 1 view .LVU171
 464:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 697              		.loc 1 464 22 is_stmt 0 view .LVU172
 698 0014 0361     		str	r3, [r0, #16]
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 28


 465:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 699              		.loc 1 465 3 is_stmt 1 view .LVU173
 465:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 700              		.loc 1 465 20 is_stmt 0 view .LVU174
 701 0016 0C22     		movs	r2, #12
 702 0018 4261     		str	r2, [r0, #20]
 466:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 703              		.loc 1 466 3 is_stmt 1 view .LVU175
 466:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 704              		.loc 1 466 25 is_stmt 0 view .LVU176
 705 001a 8361     		str	r3, [r0, #24]
 467:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 706              		.loc 1 467 3 is_stmt 1 view .LVU177
 467:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 707              		.loc 1 467 28 is_stmt 0 view .LVU178
 708 001c C361     		str	r3, [r0, #28]
 468:Core/Src/main.c ****   {
 709              		.loc 1 468 3 is_stmt 1 view .LVU179
 468:Core/Src/main.c ****   {
 710              		.loc 1 468 7 is_stmt 0 view .LVU180
 711 001e FFF7FEFF 		bl	HAL_UART_Init
 712              	.LVL43:
 468:Core/Src/main.c ****   {
 713              		.loc 1 468 6 view .LVU181
 714 0022 00B9     		cbnz	r0, .L26
 476:Core/Src/main.c **** 
 715              		.loc 1 476 1 view .LVU182
 716 0024 08BD     		pop	{r3, pc}
 717              	.L26:
 470:Core/Src/main.c ****   }
 718              		.loc 1 470 5 is_stmt 1 view .LVU183
 719 0026 FFF7FEFF 		bl	Error_Handler
 720              	.LVL44:
 721              	.L28:
 722 002a 00BF     		.align	2
 723              	.L27:
 724 002c 00000000 		.word	huart1
 725 0030 00100140 		.word	1073811456
 726              		.cfi_endproc
 727              	.LFE137:
 729              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 730              		.align	1
 731              		.syntax unified
 732              		.thumb
 733              		.thumb_func
 735              	MX_USART2_UART_Init:
 736              	.LFB138:
 484:Core/Src/main.c **** 
 737              		.loc 1 484 1 view -0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
 740              		@ frame_needed = 0, uses_anonymous_args = 0
 741 0000 08B5     		push	{r3, lr}
 742              	.LCFI16:
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 3, -8
 745              		.cfi_offset 14, -4
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 29


 493:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 746              		.loc 1 493 3 view .LVU185
 493:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 747              		.loc 1 493 19 is_stmt 0 view .LVU186
 748 0002 0A48     		ldr	r0, .L33
 749 0004 0A4B     		ldr	r3, .L33+4
 750 0006 0360     		str	r3, [r0]
 494:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 751              		.loc 1 494 3 is_stmt 1 view .LVU187
 494:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 752              		.loc 1 494 24 is_stmt 0 view .LVU188
 753 0008 4FF4E133 		mov	r3, #115200
 754 000c 4360     		str	r3, [r0, #4]
 495:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 755              		.loc 1 495 3 is_stmt 1 view .LVU189
 495:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 756              		.loc 1 495 26 is_stmt 0 view .LVU190
 757 000e 0023     		movs	r3, #0
 758 0010 8360     		str	r3, [r0, #8]
 496:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 759              		.loc 1 496 3 is_stmt 1 view .LVU191
 496:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 760              		.loc 1 496 24 is_stmt 0 view .LVU192
 761 0012 C360     		str	r3, [r0, #12]
 497:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 762              		.loc 1 497 3 is_stmt 1 view .LVU193
 497:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 763              		.loc 1 497 22 is_stmt 0 view .LVU194
 764 0014 0361     		str	r3, [r0, #16]
 498:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 765              		.loc 1 498 3 is_stmt 1 view .LVU195
 498:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 766              		.loc 1 498 20 is_stmt 0 view .LVU196
 767 0016 0C22     		movs	r2, #12
 768 0018 4261     		str	r2, [r0, #20]
 499:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 769              		.loc 1 499 3 is_stmt 1 view .LVU197
 499:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 770              		.loc 1 499 25 is_stmt 0 view .LVU198
 771 001a 8361     		str	r3, [r0, #24]
 500:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 772              		.loc 1 500 3 is_stmt 1 view .LVU199
 500:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 773              		.loc 1 500 28 is_stmt 0 view .LVU200
 774 001c C361     		str	r3, [r0, #28]
 501:Core/Src/main.c ****   {
 775              		.loc 1 501 3 is_stmt 1 view .LVU201
 501:Core/Src/main.c ****   {
 776              		.loc 1 501 7 is_stmt 0 view .LVU202
 777 001e FFF7FEFF 		bl	HAL_UART_Init
 778              	.LVL45:
 501:Core/Src/main.c ****   {
 779              		.loc 1 501 6 view .LVU203
 780 0022 00B9     		cbnz	r0, .L32
 509:Core/Src/main.c **** 
 781              		.loc 1 509 1 view .LVU204
 782 0024 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 30


 783              	.L32:
 503:Core/Src/main.c ****   }
 784              		.loc 1 503 5 is_stmt 1 view .LVU205
 785 0026 FFF7FEFF 		bl	Error_Handler
 786              	.LVL46:
 787              	.L34:
 788 002a 00BF     		.align	2
 789              	.L33:
 790 002c 00000000 		.word	huart2
 791 0030 00440040 		.word	1073759232
 792              		.cfi_endproc
 793              	.LFE138:
 795              		.section	.text.MX_TIM2_Init,"ax",%progbits
 796              		.align	1
 797              		.syntax unified
 798              		.thumb
 799              		.thumb_func
 801              	MX_TIM2_Init:
 802              	.LFB135:
 325:Core/Src/main.c **** 
 803              		.loc 1 325 1 view -0
 804              		.cfi_startproc
 805              		@ args = 0, pretend = 0, frame = 56
 806              		@ frame_needed = 0, uses_anonymous_args = 0
 807 0000 00B5     		push	{lr}
 808              	.LCFI17:
 809              		.cfi_def_cfa_offset 4
 810              		.cfi_offset 14, -4
 811 0002 8FB0     		sub	sp, sp, #60
 812              	.LCFI18:
 813              		.cfi_def_cfa_offset 64
 331:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 814              		.loc 1 331 3 view .LVU207
 331:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 815              		.loc 1 331 26 is_stmt 0 view .LVU208
 816 0004 0023     		movs	r3, #0
 817 0006 0A93     		str	r3, [sp, #40]
 818 0008 0B93     		str	r3, [sp, #44]
 819 000a 0C93     		str	r3, [sp, #48]
 820 000c 0D93     		str	r3, [sp, #52]
 332:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 821              		.loc 1 332 3 is_stmt 1 view .LVU209
 332:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 822              		.loc 1 332 27 is_stmt 0 view .LVU210
 823 000e 0893     		str	r3, [sp, #32]
 824 0010 0993     		str	r3, [sp, #36]
 333:Core/Src/main.c **** 
 825              		.loc 1 333 3 is_stmt 1 view .LVU211
 333:Core/Src/main.c **** 
 826              		.loc 1 333 22 is_stmt 0 view .LVU212
 827 0012 0193     		str	r3, [sp, #4]
 828 0014 0293     		str	r3, [sp, #8]
 829 0016 0393     		str	r3, [sp, #12]
 830 0018 0493     		str	r3, [sp, #16]
 831 001a 0593     		str	r3, [sp, #20]
 832 001c 0693     		str	r3, [sp, #24]
 833 001e 0793     		str	r3, [sp, #28]
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 31


 338:Core/Src/main.c ****   htim2.Init.Prescaler = 90-1;
 834              		.loc 1 338 3 is_stmt 1 view .LVU213
 338:Core/Src/main.c ****   htim2.Init.Prescaler = 90-1;
 835              		.loc 1 338 18 is_stmt 0 view .LVU214
 836 0020 2348     		ldr	r0, .L49
 837 0022 4FF08042 		mov	r2, #1073741824
 838 0026 0260     		str	r2, [r0]
 339:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 839              		.loc 1 339 3 is_stmt 1 view .LVU215
 339:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 840              		.loc 1 339 24 is_stmt 0 view .LVU216
 841 0028 5922     		movs	r2, #89
 842 002a 4260     		str	r2, [r0, #4]
 340:Core/Src/main.c ****   htim2.Init.Period = 20000-1;
 843              		.loc 1 340 3 is_stmt 1 view .LVU217
 340:Core/Src/main.c ****   htim2.Init.Period = 20000-1;
 844              		.loc 1 340 26 is_stmt 0 view .LVU218
 845 002c 8360     		str	r3, [r0, #8]
 341:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 846              		.loc 1 341 3 is_stmt 1 view .LVU219
 341:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 847              		.loc 1 341 21 is_stmt 0 view .LVU220
 848 002e 44F61F62 		movw	r2, #19999
 849 0032 C260     		str	r2, [r0, #12]
 342:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 850              		.loc 1 342 3 is_stmt 1 view .LVU221
 342:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 851              		.loc 1 342 28 is_stmt 0 view .LVU222
 852 0034 0361     		str	r3, [r0, #16]
 343:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 853              		.loc 1 343 3 is_stmt 1 view .LVU223
 343:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 854              		.loc 1 343 32 is_stmt 0 view .LVU224
 855 0036 8361     		str	r3, [r0, #24]
 344:Core/Src/main.c ****   {
 856              		.loc 1 344 3 is_stmt 1 view .LVU225
 344:Core/Src/main.c ****   {
 857              		.loc 1 344 7 is_stmt 0 view .LVU226
 858 0038 FFF7FEFF 		bl	HAL_TIM_Base_Init
 859              	.LVL47:
 344:Core/Src/main.c ****   {
 860              		.loc 1 344 6 view .LVU227
 861 003c 60BB     		cbnz	r0, .L43
 348:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 862              		.loc 1 348 3 is_stmt 1 view .LVU228
 348:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 863              		.loc 1 348 34 is_stmt 0 view .LVU229
 864 003e 4FF48053 		mov	r3, #4096
 865 0042 0A93     		str	r3, [sp, #40]
 349:Core/Src/main.c ****   {
 866              		.loc 1 349 3 is_stmt 1 view .LVU230
 349:Core/Src/main.c ****   {
 867              		.loc 1 349 7 is_stmt 0 view .LVU231
 868 0044 0AA9     		add	r1, sp, #40
 869 0046 1A48     		ldr	r0, .L49
 870 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 871              	.LVL48:
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 32


 349:Core/Src/main.c ****   {
 872              		.loc 1 349 6 view .LVU232
 873 004c 30BB     		cbnz	r0, .L44
 353:Core/Src/main.c ****   {
 874              		.loc 1 353 3 is_stmt 1 view .LVU233
 353:Core/Src/main.c ****   {
 875              		.loc 1 353 7 is_stmt 0 view .LVU234
 876 004e 1848     		ldr	r0, .L49
 877 0050 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 878              	.LVL49:
 353:Core/Src/main.c ****   {
 879              		.loc 1 353 6 view .LVU235
 880 0054 20BB     		cbnz	r0, .L45
 357:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 881              		.loc 1 357 3 is_stmt 1 view .LVU236
 357:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 882              		.loc 1 357 37 is_stmt 0 view .LVU237
 883 0056 0023     		movs	r3, #0
 884 0058 0893     		str	r3, [sp, #32]
 358:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 885              		.loc 1 358 3 is_stmt 1 view .LVU238
 358:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 886              		.loc 1 358 33 is_stmt 0 view .LVU239
 887 005a 0993     		str	r3, [sp, #36]
 359:Core/Src/main.c ****   {
 888              		.loc 1 359 3 is_stmt 1 view .LVU240
 359:Core/Src/main.c ****   {
 889              		.loc 1 359 7 is_stmt 0 view .LVU241
 890 005c 08A9     		add	r1, sp, #32
 891 005e 1448     		ldr	r0, .L49
 892 0060 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 893              	.LVL50:
 359:Core/Src/main.c ****   {
 894              		.loc 1 359 6 view .LVU242
 895 0064 F0B9     		cbnz	r0, .L46
 363:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 896              		.loc 1 363 3 is_stmt 1 view .LVU243
 363:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 897              		.loc 1 363 20 is_stmt 0 view .LVU244
 898 0066 6023     		movs	r3, #96
 899 0068 0193     		str	r3, [sp, #4]
 364:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 900              		.loc 1 364 3 is_stmt 1 view .LVU245
 364:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 901              		.loc 1 364 19 is_stmt 0 view .LVU246
 902 006a 0023     		movs	r3, #0
 903 006c 0293     		str	r3, [sp, #8]
 365:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 904              		.loc 1 365 3 is_stmt 1 view .LVU247
 365:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 905              		.loc 1 365 24 is_stmt 0 view .LVU248
 906 006e 0393     		str	r3, [sp, #12]
 366:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 907              		.loc 1 366 3 is_stmt 1 view .LVU249
 366:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 908              		.loc 1 366 24 is_stmt 0 view .LVU250
 909 0070 0593     		str	r3, [sp, #20]
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 33


 367:Core/Src/main.c ****   {
 910              		.loc 1 367 3 is_stmt 1 view .LVU251
 367:Core/Src/main.c ****   {
 911              		.loc 1 367 7 is_stmt 0 view .LVU252
 912 0072 0422     		movs	r2, #4
 913 0074 0DEB0201 		add	r1, sp, r2
 914 0078 0D48     		ldr	r0, .L49
 915 007a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 916              	.LVL51:
 367:Core/Src/main.c ****   {
 917              		.loc 1 367 6 view .LVU253
 918 007e 98B9     		cbnz	r0, .L47
 371:Core/Src/main.c ****   {
 919              		.loc 1 371 3 is_stmt 1 view .LVU254
 371:Core/Src/main.c ****   {
 920              		.loc 1 371 7 is_stmt 0 view .LVU255
 921 0080 0822     		movs	r2, #8
 922 0082 01A9     		add	r1, sp, #4
 923 0084 0A48     		ldr	r0, .L49
 924 0086 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 925              	.LVL52:
 371:Core/Src/main.c ****   {
 926              		.loc 1 371 6 view .LVU256
 927 008a 78B9     		cbnz	r0, .L48
 378:Core/Src/main.c **** 
 928              		.loc 1 378 3 is_stmt 1 view .LVU257
 929 008c 0848     		ldr	r0, .L49
 930 008e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 931              	.LVL53:
 380:Core/Src/main.c **** 
 932              		.loc 1 380 1 is_stmt 0 view .LVU258
 933 0092 0FB0     		add	sp, sp, #60
 934              	.LCFI19:
 935              		.cfi_remember_state
 936              		.cfi_def_cfa_offset 4
 937              		@ sp needed
 938 0094 5DF804FB 		ldr	pc, [sp], #4
 939              	.L43:
 940              	.LCFI20:
 941              		.cfi_restore_state
 346:Core/Src/main.c ****   }
 942              		.loc 1 346 5 is_stmt 1 view .LVU259
 943 0098 FFF7FEFF 		bl	Error_Handler
 944              	.LVL54:
 945              	.L44:
 351:Core/Src/main.c ****   }
 946              		.loc 1 351 5 view .LVU260
 947 009c FFF7FEFF 		bl	Error_Handler
 948              	.LVL55:
 949              	.L45:
 355:Core/Src/main.c ****   }
 950              		.loc 1 355 5 view .LVU261
 951 00a0 FFF7FEFF 		bl	Error_Handler
 952              	.LVL56:
 953              	.L46:
 361:Core/Src/main.c ****   }
 954              		.loc 1 361 5 view .LVU262
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 34


 955 00a4 FFF7FEFF 		bl	Error_Handler
 956              	.LVL57:
 957              	.L47:
 369:Core/Src/main.c ****   }
 958              		.loc 1 369 5 view .LVU263
 959 00a8 FFF7FEFF 		bl	Error_Handler
 960              	.LVL58:
 961              	.L48:
 373:Core/Src/main.c ****   }
 962              		.loc 1 373 5 view .LVU264
 963 00ac FFF7FEFF 		bl	Error_Handler
 964              	.LVL59:
 965              	.L50:
 966              		.align	2
 967              	.L49:
 968 00b0 00000000 		.word	htim2
 969              		.cfi_endproc
 970              	.LFE135:
 972              		.section	.text.MX_TIM3_Init,"ax",%progbits
 973              		.align	1
 974              		.syntax unified
 975              		.thumb
 976              		.thumb_func
 978              	MX_TIM3_Init:
 979              	.LFB136:
 388:Core/Src/main.c **** 
 980              		.loc 1 388 1 view -0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 56
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984 0000 00B5     		push	{lr}
 985              	.LCFI21:
 986              		.cfi_def_cfa_offset 4
 987              		.cfi_offset 14, -4
 988 0002 8FB0     		sub	sp, sp, #60
 989              	.LCFI22:
 990              		.cfi_def_cfa_offset 64
 394:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 991              		.loc 1 394 3 view .LVU266
 394:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 992              		.loc 1 394 26 is_stmt 0 view .LVU267
 993 0004 0023     		movs	r3, #0
 994 0006 0A93     		str	r3, [sp, #40]
 995 0008 0B93     		str	r3, [sp, #44]
 996 000a 0C93     		str	r3, [sp, #48]
 997 000c 0D93     		str	r3, [sp, #52]
 395:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 998              		.loc 1 395 3 is_stmt 1 view .LVU268
 395:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 999              		.loc 1 395 27 is_stmt 0 view .LVU269
 1000 000e 0893     		str	r3, [sp, #32]
 1001 0010 0993     		str	r3, [sp, #36]
 396:Core/Src/main.c **** 
 1002              		.loc 1 396 3 is_stmt 1 view .LVU270
 396:Core/Src/main.c **** 
 1003              		.loc 1 396 22 is_stmt 0 view .LVU271
 1004 0012 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 35


 1005 0014 0293     		str	r3, [sp, #8]
 1006 0016 0393     		str	r3, [sp, #12]
 1007 0018 0493     		str	r3, [sp, #16]
 1008 001a 0593     		str	r3, [sp, #20]
 1009 001c 0693     		str	r3, [sp, #24]
 1010 001e 0793     		str	r3, [sp, #28]
 401:Core/Src/main.c ****   htim3.Init.Prescaler = 90-1;
 1011              		.loc 1 401 3 is_stmt 1 view .LVU272
 401:Core/Src/main.c ****   htim3.Init.Prescaler = 90-1;
 1012              		.loc 1 401 18 is_stmt 0 view .LVU273
 1013 0020 2248     		ldr	r0, .L65
 1014 0022 234A     		ldr	r2, .L65+4
 1015 0024 0260     		str	r2, [r0]
 402:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1016              		.loc 1 402 3 is_stmt 1 view .LVU274
 402:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1017              		.loc 1 402 24 is_stmt 0 view .LVU275
 1018 0026 5922     		movs	r2, #89
 1019 0028 4260     		str	r2, [r0, #4]
 403:Core/Src/main.c ****   htim3.Init.Period = 20000-1;
 1020              		.loc 1 403 3 is_stmt 1 view .LVU276
 403:Core/Src/main.c ****   htim3.Init.Period = 20000-1;
 1021              		.loc 1 403 26 is_stmt 0 view .LVU277
 1022 002a 8360     		str	r3, [r0, #8]
 404:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1023              		.loc 1 404 3 is_stmt 1 view .LVU278
 404:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1024              		.loc 1 404 21 is_stmt 0 view .LVU279
 1025 002c 44F61F62 		movw	r2, #19999
 1026 0030 C260     		str	r2, [r0, #12]
 405:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1027              		.loc 1 405 3 is_stmt 1 view .LVU280
 405:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1028              		.loc 1 405 28 is_stmt 0 view .LVU281
 1029 0032 0361     		str	r3, [r0, #16]
 406:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1030              		.loc 1 406 3 is_stmt 1 view .LVU282
 406:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1031              		.loc 1 406 32 is_stmt 0 view .LVU283
 1032 0034 8361     		str	r3, [r0, #24]
 407:Core/Src/main.c ****   {
 1033              		.loc 1 407 3 is_stmt 1 view .LVU284
 407:Core/Src/main.c ****   {
 1034              		.loc 1 407 7 is_stmt 0 view .LVU285
 1035 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1036              	.LVL60:
 407:Core/Src/main.c ****   {
 1037              		.loc 1 407 6 view .LVU286
 1038 003a 58BB     		cbnz	r0, .L59
 411:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1039              		.loc 1 411 3 is_stmt 1 view .LVU287
 411:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1040              		.loc 1 411 34 is_stmt 0 view .LVU288
 1041 003c 4FF48053 		mov	r3, #4096
 1042 0040 0A93     		str	r3, [sp, #40]
 412:Core/Src/main.c ****   {
 1043              		.loc 1 412 3 is_stmt 1 view .LVU289
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 36


 412:Core/Src/main.c ****   {
 1044              		.loc 1 412 7 is_stmt 0 view .LVU290
 1045 0042 0AA9     		add	r1, sp, #40
 1046 0044 1948     		ldr	r0, .L65
 1047 0046 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1048              	.LVL61:
 412:Core/Src/main.c ****   {
 1049              		.loc 1 412 6 view .LVU291
 1050 004a 28BB     		cbnz	r0, .L60
 416:Core/Src/main.c ****   {
 1051              		.loc 1 416 3 is_stmt 1 view .LVU292
 416:Core/Src/main.c ****   {
 1052              		.loc 1 416 7 is_stmt 0 view .LVU293
 1053 004c 1748     		ldr	r0, .L65
 1054 004e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1055              	.LVL62:
 416:Core/Src/main.c ****   {
 1056              		.loc 1 416 6 view .LVU294
 1057 0052 18BB     		cbnz	r0, .L61
 420:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1058              		.loc 1 420 3 is_stmt 1 view .LVU295
 420:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1059              		.loc 1 420 37 is_stmt 0 view .LVU296
 1060 0054 0023     		movs	r3, #0
 1061 0056 0893     		str	r3, [sp, #32]
 421:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1062              		.loc 1 421 3 is_stmt 1 view .LVU297
 421:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1063              		.loc 1 421 33 is_stmt 0 view .LVU298
 1064 0058 0993     		str	r3, [sp, #36]
 422:Core/Src/main.c ****   {
 1065              		.loc 1 422 3 is_stmt 1 view .LVU299
 422:Core/Src/main.c ****   {
 1066              		.loc 1 422 7 is_stmt 0 view .LVU300
 1067 005a 08A9     		add	r1, sp, #32
 1068 005c 1348     		ldr	r0, .L65
 1069 005e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1070              	.LVL63:
 422:Core/Src/main.c ****   {
 1071              		.loc 1 422 6 view .LVU301
 1072 0062 E8B9     		cbnz	r0, .L62
 426:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1073              		.loc 1 426 3 is_stmt 1 view .LVU302
 426:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1074              		.loc 1 426 20 is_stmt 0 view .LVU303
 1075 0064 6023     		movs	r3, #96
 1076 0066 0193     		str	r3, [sp, #4]
 427:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1077              		.loc 1 427 3 is_stmt 1 view .LVU304
 427:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1078              		.loc 1 427 19 is_stmt 0 view .LVU305
 1079 0068 0022     		movs	r2, #0
 1080 006a 0292     		str	r2, [sp, #8]
 428:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1081              		.loc 1 428 3 is_stmt 1 view .LVU306
 428:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1082              		.loc 1 428 24 is_stmt 0 view .LVU307
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 37


 1083 006c 0392     		str	r2, [sp, #12]
 429:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1084              		.loc 1 429 3 is_stmt 1 view .LVU308
 429:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1085              		.loc 1 429 24 is_stmt 0 view .LVU309
 1086 006e 0592     		str	r2, [sp, #20]
 430:Core/Src/main.c ****   {
 1087              		.loc 1 430 3 is_stmt 1 view .LVU310
 430:Core/Src/main.c ****   {
 1088              		.loc 1 430 7 is_stmt 0 view .LVU311
 1089 0070 01A9     		add	r1, sp, #4
 1090 0072 0E48     		ldr	r0, .L65
 1091 0074 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1092              	.LVL64:
 430:Core/Src/main.c ****   {
 1093              		.loc 1 430 6 view .LVU312
 1094 0078 A0B9     		cbnz	r0, .L63
 434:Core/Src/main.c ****   {
 1095              		.loc 1 434 3 is_stmt 1 view .LVU313
 434:Core/Src/main.c ****   {
 1096              		.loc 1 434 7 is_stmt 0 view .LVU314
 1097 007a 0422     		movs	r2, #4
 1098 007c 0DEB0201 		add	r1, sp, r2
 1099 0080 0A48     		ldr	r0, .L65
 1100 0082 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1101              	.LVL65:
 434:Core/Src/main.c ****   {
 1102              		.loc 1 434 6 view .LVU315
 1103 0086 78B9     		cbnz	r0, .L64
 441:Core/Src/main.c **** 
 1104              		.loc 1 441 3 is_stmt 1 view .LVU316
 1105 0088 0848     		ldr	r0, .L65
 1106 008a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1107              	.LVL66:
 443:Core/Src/main.c **** 
 1108              		.loc 1 443 1 is_stmt 0 view .LVU317
 1109 008e 0FB0     		add	sp, sp, #60
 1110              	.LCFI23:
 1111              		.cfi_remember_state
 1112              		.cfi_def_cfa_offset 4
 1113              		@ sp needed
 1114 0090 5DF804FB 		ldr	pc, [sp], #4
 1115              	.L59:
 1116              	.LCFI24:
 1117              		.cfi_restore_state
 409:Core/Src/main.c ****   }
 1118              		.loc 1 409 5 is_stmt 1 view .LVU318
 1119 0094 FFF7FEFF 		bl	Error_Handler
 1120              	.LVL67:
 1121              	.L60:
 414:Core/Src/main.c ****   }
 1122              		.loc 1 414 5 view .LVU319
 1123 0098 FFF7FEFF 		bl	Error_Handler
 1124              	.LVL68:
 1125              	.L61:
 418:Core/Src/main.c ****   }
 1126              		.loc 1 418 5 view .LVU320
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 38


 1127 009c FFF7FEFF 		bl	Error_Handler
 1128              	.LVL69:
 1129              	.L62:
 424:Core/Src/main.c ****   }
 1130              		.loc 1 424 5 view .LVU321
 1131 00a0 FFF7FEFF 		bl	Error_Handler
 1132              	.LVL70:
 1133              	.L63:
 432:Core/Src/main.c ****   }
 1134              		.loc 1 432 5 view .LVU322
 1135 00a4 FFF7FEFF 		bl	Error_Handler
 1136              	.LVL71:
 1137              	.L64:
 436:Core/Src/main.c ****   }
 1138              		.loc 1 436 5 view .LVU323
 1139 00a8 FFF7FEFF 		bl	Error_Handler
 1140              	.LVL72:
 1141              	.L66:
 1142              		.align	2
 1143              	.L65:
 1144 00ac 00000000 		.word	htim3
 1145 00b0 00040040 		.word	1073742848
 1146              		.cfi_endproc
 1147              	.LFE136:
 1149              		.section	.text.SystemClock_Config,"ax",%progbits
 1150              		.align	1
 1151              		.global	SystemClock_Config
 1152              		.syntax unified
 1153              		.thumb
 1154              		.thumb_func
 1156              	SystemClock_Config:
 1157              	.LFB133:
 237:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1158              		.loc 1 237 1 view -0
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 80
 1161              		@ frame_needed = 0, uses_anonymous_args = 0
 1162 0000 00B5     		push	{lr}
 1163              	.LCFI25:
 1164              		.cfi_def_cfa_offset 4
 1165              		.cfi_offset 14, -4
 1166 0002 95B0     		sub	sp, sp, #84
 1167              	.LCFI26:
 1168              		.cfi_def_cfa_offset 88
 238:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1169              		.loc 1 238 3 view .LVU325
 238:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1170              		.loc 1 238 22 is_stmt 0 view .LVU326
 1171 0004 3422     		movs	r2, #52
 1172 0006 0021     		movs	r1, #0
 1173 0008 07A8     		add	r0, sp, #28
 1174 000a FFF7FEFF 		bl	memset
 1175              	.LVL73:
 239:Core/Src/main.c **** 
 1176              		.loc 1 239 3 is_stmt 1 view .LVU327
 239:Core/Src/main.c **** 
 1177              		.loc 1 239 22 is_stmt 0 view .LVU328
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 39


 1178 000e 0023     		movs	r3, #0
 1179 0010 0293     		str	r3, [sp, #8]
 1180 0012 0393     		str	r3, [sp, #12]
 1181 0014 0493     		str	r3, [sp, #16]
 1182 0016 0593     		str	r3, [sp, #20]
 1183 0018 0693     		str	r3, [sp, #24]
 243:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1184              		.loc 1 243 3 is_stmt 1 view .LVU329
 1185              	.LBB11:
 243:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1186              		.loc 1 243 3 view .LVU330
 1187 001a 0093     		str	r3, [sp]
 243:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1188              		.loc 1 243 3 view .LVU331
 1189 001c 234A     		ldr	r2, .L75
 1190 001e 116C     		ldr	r1, [r2, #64]
 1191 0020 41F08051 		orr	r1, r1, #268435456
 1192 0024 1164     		str	r1, [r2, #64]
 243:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1193              		.loc 1 243 3 view .LVU332
 1194 0026 126C     		ldr	r2, [r2, #64]
 1195 0028 02F08052 		and	r2, r2, #268435456
 1196 002c 0092     		str	r2, [sp]
 243:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1197              		.loc 1 243 3 view .LVU333
 1198 002e 009A     		ldr	r2, [sp]
 1199              	.LBE11:
 243:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1200              		.loc 1 243 3 view .LVU334
 244:Core/Src/main.c **** 
 1201              		.loc 1 244 3 view .LVU335
 1202              	.LBB12:
 244:Core/Src/main.c **** 
 1203              		.loc 1 244 3 view .LVU336
 1204 0030 0193     		str	r3, [sp, #4]
 244:Core/Src/main.c **** 
 1205              		.loc 1 244 3 view .LVU337
 1206 0032 1F4B     		ldr	r3, .L75+4
 1207 0034 1A68     		ldr	r2, [r3]
 1208 0036 42F44042 		orr	r2, r2, #49152
 1209 003a 1A60     		str	r2, [r3]
 244:Core/Src/main.c **** 
 1210              		.loc 1 244 3 view .LVU338
 1211 003c 1B68     		ldr	r3, [r3]
 1212 003e 03F44043 		and	r3, r3, #49152
 1213 0042 0193     		str	r3, [sp, #4]
 244:Core/Src/main.c **** 
 1214              		.loc 1 244 3 view .LVU339
 1215 0044 019B     		ldr	r3, [sp, #4]
 1216              	.LBE12:
 244:Core/Src/main.c **** 
 1217              		.loc 1 244 3 view .LVU340
 249:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1218              		.loc 1 249 3 view .LVU341
 249:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1219              		.loc 1 249 36 is_stmt 0 view .LVU342
 1220 0046 0123     		movs	r3, #1
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 40


 1221 0048 0793     		str	r3, [sp, #28]
 250:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1222              		.loc 1 250 3 is_stmt 1 view .LVU343
 250:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1223              		.loc 1 250 30 is_stmt 0 view .LVU344
 1224 004a 4FF48033 		mov	r3, #65536
 1225 004e 0893     		str	r3, [sp, #32]
 251:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1226              		.loc 1 251 3 is_stmt 1 view .LVU345
 251:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1227              		.loc 1 251 34 is_stmt 0 view .LVU346
 1228 0050 0223     		movs	r3, #2
 1229 0052 0D93     		str	r3, [sp, #52]
 252:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1230              		.loc 1 252 3 is_stmt 1 view .LVU347
 252:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1231              		.loc 1 252 35 is_stmt 0 view .LVU348
 1232 0054 4FF48002 		mov	r2, #4194304
 1233 0058 0E92     		str	r2, [sp, #56]
 253:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 180;
 1234              		.loc 1 253 3 is_stmt 1 view .LVU349
 253:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 180;
 1235              		.loc 1 253 30 is_stmt 0 view .LVU350
 1236 005a 0422     		movs	r2, #4
 1237 005c 0F92     		str	r2, [sp, #60]
 254:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1238              		.loc 1 254 3 is_stmt 1 view .LVU351
 254:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1239              		.loc 1 254 30 is_stmt 0 view .LVU352
 1240 005e B422     		movs	r2, #180
 1241 0060 1092     		str	r2, [sp, #64]
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1242              		.loc 1 255 3 is_stmt 1 view .LVU353
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1243              		.loc 1 255 30 is_stmt 0 view .LVU354
 1244 0062 1193     		str	r3, [sp, #68]
 256:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1245              		.loc 1 256 3 is_stmt 1 view .LVU355
 256:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1246              		.loc 1 256 30 is_stmt 0 view .LVU356
 1247 0064 1293     		str	r3, [sp, #72]
 257:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1248              		.loc 1 257 3 is_stmt 1 view .LVU357
 257:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1249              		.loc 1 257 30 is_stmt 0 view .LVU358
 1250 0066 1393     		str	r3, [sp, #76]
 258:Core/Src/main.c ****   {
 1251              		.loc 1 258 3 is_stmt 1 view .LVU359
 258:Core/Src/main.c ****   {
 1252              		.loc 1 258 7 is_stmt 0 view .LVU360
 1253 0068 07A8     		add	r0, sp, #28
 1254 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 1255              	.LVL74:
 258:Core/Src/main.c ****   {
 1256              		.loc 1 258 6 view .LVU361
 1257 006e B0B9     		cbnz	r0, .L72
 265:Core/Src/main.c ****   {
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 41


 1258              		.loc 1 265 3 is_stmt 1 view .LVU362
 265:Core/Src/main.c ****   {
 1259              		.loc 1 265 7 is_stmt 0 view .LVU363
 1260 0070 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 1261              	.LVL75:
 265:Core/Src/main.c ****   {
 1262              		.loc 1 265 6 view .LVU364
 1263 0074 A8B9     		cbnz	r0, .L73
 272:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1264              		.loc 1 272 3 is_stmt 1 view .LVU365
 272:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1265              		.loc 1 272 31 is_stmt 0 view .LVU366
 1266 0076 0F23     		movs	r3, #15
 1267 0078 0293     		str	r3, [sp, #8]
 274:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1268              		.loc 1 274 3 is_stmt 1 view .LVU367
 274:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1269              		.loc 1 274 34 is_stmt 0 view .LVU368
 1270 007a 0223     		movs	r3, #2
 1271 007c 0393     		str	r3, [sp, #12]
 275:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1272              		.loc 1 275 3 is_stmt 1 view .LVU369
 275:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1273              		.loc 1 275 35 is_stmt 0 view .LVU370
 1274 007e 0023     		movs	r3, #0
 1275 0080 0493     		str	r3, [sp, #16]
 276:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1276              		.loc 1 276 3 is_stmt 1 view .LVU371
 276:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1277              		.loc 1 276 36 is_stmt 0 view .LVU372
 1278 0082 4FF4A053 		mov	r3, #5120
 1279 0086 0593     		str	r3, [sp, #20]
 277:Core/Src/main.c **** 
 1280              		.loc 1 277 3 is_stmt 1 view .LVU373
 277:Core/Src/main.c **** 
 1281              		.loc 1 277 36 is_stmt 0 view .LVU374
 1282 0088 4FF48053 		mov	r3, #4096
 1283 008c 0693     		str	r3, [sp, #24]
 279:Core/Src/main.c ****   {
 1284              		.loc 1 279 3 is_stmt 1 view .LVU375
 279:Core/Src/main.c ****   {
 1285              		.loc 1 279 7 is_stmt 0 view .LVU376
 1286 008e 0521     		movs	r1, #5
 1287 0090 02A8     		add	r0, sp, #8
 1288 0092 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1289              	.LVL76:
 279:Core/Src/main.c ****   {
 1290              		.loc 1 279 6 view .LVU377
 1291 0096 30B9     		cbnz	r0, .L74
 283:Core/Src/main.c **** 
 1292              		.loc 1 283 1 view .LVU378
 1293 0098 15B0     		add	sp, sp, #84
 1294              	.LCFI27:
 1295              		.cfi_remember_state
 1296              		.cfi_def_cfa_offset 4
 1297              		@ sp needed
 1298 009a 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 42


 1299              	.L72:
 1300              	.LCFI28:
 1301              		.cfi_restore_state
 260:Core/Src/main.c ****   }
 1302              		.loc 1 260 5 is_stmt 1 view .LVU379
 1303 009e FFF7FEFF 		bl	Error_Handler
 1304              	.LVL77:
 1305              	.L73:
 267:Core/Src/main.c ****   }
 1306              		.loc 1 267 5 view .LVU380
 1307 00a2 FFF7FEFF 		bl	Error_Handler
 1308              	.LVL78:
 1309              	.L74:
 281:Core/Src/main.c ****   }
 1310              		.loc 1 281 5 view .LVU381
 1311 00a6 FFF7FEFF 		bl	Error_Handler
 1312              	.LVL79:
 1313              	.L76:
 1314 00aa 00BF     		.align	2
 1315              	.L75:
 1316 00ac 00380240 		.word	1073887232
 1317 00b0 00700040 		.word	1073770496
 1318              		.cfi_endproc
 1319              	.LFE133:
 1321              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1322              		.align	2
 1323              	.LC0:
 1324 0000 526F6C6C 		.ascii	"Roll: %.2f \000"
 1324      3A20252E 
 1324      32662000 
 1325              		.align	2
 1326              	.LC1:
 1327 000c 50697463 		.ascii	"Pitch: %.2f\012\000"
 1327      683A2025 
 1327      2E32660A 
 1327      00
 1328              		.section	.text.main,"ax",%progbits
 1329              		.align	1
 1330              		.global	main
 1331              		.syntax unified
 1332              		.thumb
 1333              		.thumb_func
 1335              	main:
 1336              	.LFB132:
 161:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1337              		.loc 1 161 1 view -0
 1338              		.cfi_startproc
 1339              		@ args = 0, pretend = 0, frame = 0
 1340              		@ frame_needed = 0, uses_anonymous_args = 0
 1341 0000 38B5     		push	{r3, r4, r5, lr}
 1342              	.LCFI29:
 1343              		.cfi_def_cfa_offset 16
 1344              		.cfi_offset 3, -16
 1345              		.cfi_offset 4, -12
 1346              		.cfi_offset 5, -8
 1347              		.cfi_offset 14, -4
 169:Core/Src/main.c **** 
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 43


 1348              		.loc 1 169 3 view .LVU383
 1349 0002 FFF7FEFF 		bl	HAL_Init
 1350              	.LVL80:
 176:Core/Src/main.c **** 
 1351              		.loc 1 176 3 view .LVU384
 1352 0006 FFF7FEFF 		bl	SystemClock_Config
 1353              	.LVL81:
 183:Core/Src/main.c ****   MX_DMA_Init();
 1354              		.loc 1 183 3 view .LVU385
 1355 000a FFF7FEFF 		bl	MX_GPIO_Init
 1356              	.LVL82:
 184:Core/Src/main.c ****   MX_I2C1_Init();
 1357              		.loc 1 184 3 view .LVU386
 1358 000e FFF7FEFF 		bl	MX_DMA_Init
 1359              	.LVL83:
 185:Core/Src/main.c ****   MX_USART1_UART_Init();
 1360              		.loc 1 185 3 view .LVU387
 1361 0012 FFF7FEFF 		bl	MX_I2C1_Init
 1362              	.LVL84:
 186:Core/Src/main.c ****   MX_USART2_UART_Init();
 1363              		.loc 1 186 3 view .LVU388
 1364 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 1365              	.LVL85:
 187:Core/Src/main.c ****   MX_TIM2_Init();
 1366              		.loc 1 187 3 view .LVU389
 1367 001a FFF7FEFF 		bl	MX_USART2_UART_Init
 1368              	.LVL86:
 188:Core/Src/main.c ****   MX_TIM3_Init();
 1369              		.loc 1 188 3 view .LVU390
 1370 001e FFF7FEFF 		bl	MX_TIM2_Init
 1371              	.LVL87:
 189:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1372              		.loc 1 189 3 view .LVU391
 1373 0022 FFF7FEFF 		bl	MX_TIM3_Init
 1374              	.LVL88:
 191:Core/Src/main.c **** 
 1375              		.loc 1 191 3 view .LVU392
 1376 0026 FFF7FEFF 		bl	MPU6050_Init
 1377              	.LVL89:
 193:Core/Src/main.c ****   {
 1378              		.loc 1 193 3 view .LVU393
 1379              	.LBB13:
 193:Core/Src/main.c ****   {
 1380              		.loc 1 193 7 view .LVU394
 193:Core/Src/main.c ****   {
 1381              		.loc 1 193 11 is_stmt 0 view .LVU395
 1382 002a 0025     		movs	r5, #0
 193:Core/Src/main.c ****   {
 1383              		.loc 1 193 3 view .LVU396
 1384 002c 1FE0     		b	.L78
 1385              	.LVL90:
 1386              	.L79:
 195:Core/Src/main.c ****       IMU.Gx_Callib+=IMU.Gx;
 1387              		.loc 1 195 7 is_stmt 1 discriminator 3 view .LVU397
 1388 002e 3B4C     		ldr	r4, .L82
 1389 0030 2046     		mov	r0, r4
 1390 0032 FFF7FEFF 		bl	MPU6050_Read
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 44


 1391              	.LVL91:
 196:Core/Src/main.c ****       IMU.Gy_Callib+=IMU.Gy;
 1392              		.loc 1 196 7 discriminator 3 view .LVU398
 196:Core/Src/main.c ****       IMU.Gy_Callib+=IMU.Gy;
 1393              		.loc 1 196 10 is_stmt 0 discriminator 3 view .LVU399
 1394 0036 D4ED037A 		vldr.32	s15, [r4, #12]
 196:Core/Src/main.c ****       IMU.Gy_Callib+=IMU.Gy;
 1395              		.loc 1 196 25 discriminator 3 view .LVU400
 1396 003a 94ED007A 		vldr.32	s14, [r4]
 196:Core/Src/main.c ****       IMU.Gy_Callib+=IMU.Gy;
 1397              		.loc 1 196 20 discriminator 3 view .LVU401
 1398 003e 77EE877A 		vadd.f32	s15, s15, s14
 1399 0042 C4ED037A 		vstr.32	s15, [r4, #12]
 197:Core/Src/main.c ****       IMU.Gz_Callib+=IMU.Gz;
 1400              		.loc 1 197 7 is_stmt 1 discriminator 3 view .LVU402
 197:Core/Src/main.c ****       IMU.Gz_Callib+=IMU.Gz;
 1401              		.loc 1 197 10 is_stmt 0 discriminator 3 view .LVU403
 1402 0046 D4ED047A 		vldr.32	s15, [r4, #16]
 197:Core/Src/main.c ****       IMU.Gz_Callib+=IMU.Gz;
 1403              		.loc 1 197 25 discriminator 3 view .LVU404
 1404 004a 94ED017A 		vldr.32	s14, [r4, #4]
 197:Core/Src/main.c ****       IMU.Gz_Callib+=IMU.Gz;
 1405              		.loc 1 197 20 discriminator 3 view .LVU405
 1406 004e 77EE877A 		vadd.f32	s15, s15, s14
 1407 0052 C4ED047A 		vstr.32	s15, [r4, #16]
 198:Core/Src/main.c ****       HAL_Delay(1);
 1408              		.loc 1 198 7 is_stmt 1 discriminator 3 view .LVU406
 198:Core/Src/main.c ****       HAL_Delay(1);
 1409              		.loc 1 198 10 is_stmt 0 discriminator 3 view .LVU407
 1410 0056 D4ED057A 		vldr.32	s15, [r4, #20]
 198:Core/Src/main.c ****       HAL_Delay(1);
 1411              		.loc 1 198 25 discriminator 3 view .LVU408
 1412 005a 94ED027A 		vldr.32	s14, [r4, #8]
 198:Core/Src/main.c ****       HAL_Delay(1);
 1413              		.loc 1 198 20 discriminator 3 view .LVU409
 1414 005e 77EE877A 		vadd.f32	s15, s15, s14
 1415 0062 C4ED057A 		vstr.32	s15, [r4, #20]
 199:Core/Src/main.c ****   }
 1416              		.loc 1 199 7 is_stmt 1 discriminator 3 view .LVU410
 1417 0066 0120     		movs	r0, #1
 1418 0068 FFF7FEFF 		bl	HAL_Delay
 1419              	.LVL92:
 193:Core/Src/main.c ****   {
 1420              		.loc 1 193 42 discriminator 3 view .LVU411
 1421 006c 0135     		adds	r5, r5, #1
 1422              	.LVL93:
 1423              	.L78:
 193:Core/Src/main.c ****   {
 1424              		.loc 1 193 28 discriminator 1 view .LVU412
 1425 006e B5F5FA6F 		cmp	r5, #2000
 1426 0072 DCDB     		blt	.L79
 1427              	.LBE13:
 202:Core/Src/main.c ****   IMU.Gy_Callib/=2000;
 1428              		.loc 1 202 3 view .LVU413
 202:Core/Src/main.c ****   IMU.Gy_Callib/=2000;
 1429              		.loc 1 202 6 is_stmt 0 view .LVU414
 1430 0074 294B     		ldr	r3, .L82
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 45


 1431 0076 D3ED036A 		vldr.32	s13, [r3, #12]
 202:Core/Src/main.c ****   IMU.Gy_Callib/=2000;
 1432              		.loc 1 202 16 view .LVU415
 1433 007a DFED297A 		vldr.32	s15, .L82+4
 1434 007e 86EEA77A 		vdiv.f32	s14, s13, s15
 1435 0082 83ED037A 		vstr.32	s14, [r3, #12]
 203:Core/Src/main.c ****   IMU.Gz_Callib/=2000;
 1436              		.loc 1 203 3 is_stmt 1 view .LVU416
 203:Core/Src/main.c ****   IMU.Gz_Callib/=2000;
 1437              		.loc 1 203 6 is_stmt 0 view .LVU417
 1438 0086 D3ED046A 		vldr.32	s13, [r3, #16]
 203:Core/Src/main.c ****   IMU.Gz_Callib/=2000;
 1439              		.loc 1 203 16 view .LVU418
 1440 008a 86EEA77A 		vdiv.f32	s14, s13, s15
 1441 008e 83ED047A 		vstr.32	s14, [r3, #16]
 204:Core/Src/main.c **** 
 1442              		.loc 1 204 3 is_stmt 1 view .LVU419
 204:Core/Src/main.c **** 
 1443              		.loc 1 204 6 is_stmt 0 view .LVU420
 1444 0092 D3ED056A 		vldr.32	s13, [r3, #20]
 204:Core/Src/main.c **** 
 1445              		.loc 1 204 16 view .LVU421
 1446 0096 86EEA77A 		vdiv.f32	s14, s13, s15
 1447 009a 83ED057A 		vstr.32	s14, [r3, #20]
 1448              	.LVL94:
 1449              	.L80:
 211:Core/Src/main.c ****   {
 1450              		.loc 1 211 3 is_stmt 1 discriminator 1 view .LVU422
 1451              	.LBB14:
 213:Core/Src/main.c ****     IMU.Gx -= IMU.Gx_Callib;
 1452              		.loc 1 213 5 discriminator 1 view .LVU423
 1453 009e 1F4C     		ldr	r4, .L82
 1454 00a0 2046     		mov	r0, r4
 1455 00a2 FFF7FEFF 		bl	MPU6050_Read
 1456              	.LVL95:
 214:Core/Src/main.c ****     IMU.Gy -= IMU.Gy_Callib;
 1457              		.loc 1 214 5 discriminator 1 view .LVU424
 214:Core/Src/main.c ****     IMU.Gy -= IMU.Gy_Callib;
 1458              		.loc 1 214 8 is_stmt 0 discriminator 1 view .LVU425
 1459 00a6 D4ED007A 		vldr.32	s15, [r4]
 214:Core/Src/main.c ****     IMU.Gy -= IMU.Gy_Callib;
 1460              		.loc 1 214 18 discriminator 1 view .LVU426
 1461 00aa 94ED037A 		vldr.32	s14, [r4, #12]
 214:Core/Src/main.c ****     IMU.Gy -= IMU.Gy_Callib;
 1462              		.loc 1 214 12 discriminator 1 view .LVU427
 1463 00ae 77EEC77A 		vsub.f32	s15, s15, s14
 1464 00b2 C4ED007A 		vstr.32	s15, [r4]
 215:Core/Src/main.c ****     IMU.Gz -= IMU.Gz_Callib;
 1465              		.loc 1 215 5 is_stmt 1 discriminator 1 view .LVU428
 215:Core/Src/main.c ****     IMU.Gz -= IMU.Gz_Callib;
 1466              		.loc 1 215 8 is_stmt 0 discriminator 1 view .LVU429
 1467 00b6 D4ED017A 		vldr.32	s15, [r4, #4]
 215:Core/Src/main.c ****     IMU.Gz -= IMU.Gz_Callib;
 1468              		.loc 1 215 18 discriminator 1 view .LVU430
 1469 00ba 94ED047A 		vldr.32	s14, [r4, #16]
 215:Core/Src/main.c ****     IMU.Gz -= IMU.Gz_Callib;
 1470              		.loc 1 215 12 discriminator 1 view .LVU431
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 46


 1471 00be 77EEC77A 		vsub.f32	s15, s15, s14
 1472 00c2 C4ED017A 		vstr.32	s15, [r4, #4]
 216:Core/Src/main.c ****     /* USER CODE END WHILE */
 1473              		.loc 1 216 5 is_stmt 1 discriminator 1 view .LVU432
 216:Core/Src/main.c ****     /* USER CODE END WHILE */
 1474              		.loc 1 216 8 is_stmt 0 discriminator 1 view .LVU433
 1475 00c6 D4ED027A 		vldr.32	s15, [r4, #8]
 216:Core/Src/main.c ****     /* USER CODE END WHILE */
 1476              		.loc 1 216 18 discriminator 1 view .LVU434
 1477 00ca 94ED057A 		vldr.32	s14, [r4, #20]
 216:Core/Src/main.c ****     /* USER CODE END WHILE */
 1478              		.loc 1 216 12 discriminator 1 view .LVU435
 1479 00ce 77EEC77A 		vsub.f32	s15, s15, s14
 1480 00d2 C4ED027A 		vstr.32	s15, [r4, #8]
 220:Core/Src/main.c ****     sprintf(Pitch,"Pitch: %.2f\n",IMU.Pitch);
 1481              		.loc 1 220 5 is_stmt 1 discriminator 1 view .LVU436
 1482 00d6 206B     		ldr	r0, [r4, #48]	@ float
 1483 00d8 FFF7FEFF 		bl	__aeabi_f2d
 1484              	.LVL96:
 1485 00dc 0246     		mov	r2, r0
 1486 00de 0B46     		mov	r3, r1
 1487 00e0 104D     		ldr	r5, .L82+8
 1488 00e2 1149     		ldr	r1, .L82+12
 1489 00e4 2846     		mov	r0, r5
 1490 00e6 FFF7FEFF 		bl	sprintf
 1491              	.LVL97:
 221:Core/Src/main.c ****     HAL_UART_Transmit_IT(&huart2, Roll, sizeof(Roll));
 1492              		.loc 1 221 5 discriminator 1 view .LVU437
 1493 00ea 606B     		ldr	r0, [r4, #52]	@ float
 1494 00ec FFF7FEFF 		bl	__aeabi_f2d
 1495              	.LVL98:
 1496 00f0 0246     		mov	r2, r0
 1497 00f2 0B46     		mov	r3, r1
 1498 00f4 0D49     		ldr	r1, .L82+16
 1499 00f6 0E48     		ldr	r0, .L82+20
 1500 00f8 FFF7FEFF 		bl	sprintf
 1501              	.LVL99:
 222:Core/Src/main.c ****     HAL_UART_Transmit_IT(&huart2, Roll, sizeof(Roll));
 1502              		.loc 1 222 5 discriminator 1 view .LVU438
 1503 00fc 0D4C     		ldr	r4, .L82+24
 1504 00fe 1E22     		movs	r2, #30
 1505 0100 2946     		mov	r1, r5
 1506 0102 2046     		mov	r0, r4
 1507 0104 FFF7FEFF 		bl	HAL_UART_Transmit_IT
 1508              	.LVL100:
 223:Core/Src/main.c **** 
 1509              		.loc 1 223 5 discriminator 1 view .LVU439
 1510 0108 1E22     		movs	r2, #30
 1511 010a 2946     		mov	r1, r5
 1512 010c 2046     		mov	r0, r4
 1513 010e FFF7FEFF 		bl	HAL_UART_Transmit_IT
 1514              	.LVL101:
 226:Core/Src/main.c ****    
 1515              		.loc 1 226 5 discriminator 1 view .LVU440
 1516 0112 4FF4FA70 		mov	r0, #500
 1517 0116 FFF7FEFF 		bl	HAL_Delay
 1518              	.LVL102:
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 47


 1519              	.LBE14:
 211:Core/Src/main.c ****   {
 1520              		.loc 1 211 9 discriminator 1 view .LVU441
 1521 011a C0E7     		b	.L80
 1522              	.L83:
 1523              		.align	2
 1524              	.L82:
 1525 011c 00000000 		.word	IMU
 1526 0120 0000FA44 		.word	1157234688
 1527 0124 00000000 		.word	Roll
 1528 0128 00000000 		.word	.LC0
 1529 012c 0C000000 		.word	.LC1
 1530 0130 00000000 		.word	Pitch
 1531 0134 00000000 		.word	huart2
 1532              		.cfi_endproc
 1533              	.LFE132:
 1535              		.global	motorOutput
 1536              		.section	.bss.motorOutput,"aw",%nobits
 1537              		.align	2
 1540              	motorOutput:
 1541 0000 00000000 		.space	8
 1541      00000000 
 1542              		.global	Pitch
 1543              		.section	.bss.Pitch,"aw",%nobits
 1544              		.align	2
 1547              	Pitch:
 1548 0000 00000000 		.space	30
 1548      00000000 
 1548      00000000 
 1548      00000000 
 1548      00000000 
 1549              		.global	Roll
 1550              		.section	.bss.Roll,"aw",%nobits
 1551              		.align	2
 1554              	Roll:
 1555 0000 00000000 		.space	30
 1555      00000000 
 1555      00000000 
 1555      00000000 
 1555      00000000 
 1556              		.global	motor
 1557              		.section	.data.motor,"aw"
 1558              		.align	2
 1561              	motor:
 1562 0000 00000000 		.space	8
 1562      00000000 
 1563 0008 CDCC4C3E 		.word	1045220557
 1564 000c 52491D39 		.word	958220626
 1565 0010 00004040 		.word	1077936128
 1566 0014 00000000 		.space	8
 1566      00000000 
 1567              		.global	IMU
 1568              		.section	.bss.IMU,"aw",%nobits
 1569              		.align	2
 1572              	IMU:
 1573 0000 00000000 		.space	64
 1573      00000000 
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 48


 1573      00000000 
 1573      00000000 
 1573      00000000 
 1574              		.global	huart2
 1575              		.section	.bss.huart2,"aw",%nobits
 1576              		.align	2
 1579              	huart2:
 1580 0000 00000000 		.space	68
 1580      00000000 
 1580      00000000 
 1580      00000000 
 1580      00000000 
 1581              		.global	huart1
 1582              		.section	.bss.huart1,"aw",%nobits
 1583              		.align	2
 1586              	huart1:
 1587 0000 00000000 		.space	68
 1587      00000000 
 1587      00000000 
 1587      00000000 
 1587      00000000 
 1588              		.global	hdma_tim3_ch1_trig
 1589              		.section	.bss.hdma_tim3_ch1_trig,"aw",%nobits
 1590              		.align	2
 1593              	hdma_tim3_ch1_trig:
 1594 0000 00000000 		.space	96
 1594      00000000 
 1594      00000000 
 1594      00000000 
 1594      00000000 
 1595              		.global	hdma_tim3_ch2
 1596              		.section	.bss.hdma_tim3_ch2,"aw",%nobits
 1597              		.align	2
 1600              	hdma_tim3_ch2:
 1601 0000 00000000 		.space	96
 1601      00000000 
 1601      00000000 
 1601      00000000 
 1601      00000000 
 1602              		.global	hdma_tim2_up_ch3
 1603              		.section	.bss.hdma_tim2_up_ch3,"aw",%nobits
 1604              		.align	2
 1607              	hdma_tim2_up_ch3:
 1608 0000 00000000 		.space	96
 1608      00000000 
 1608      00000000 
 1608      00000000 
 1608      00000000 
 1609              		.global	hdma_tim2_ch2_ch4
 1610              		.section	.bss.hdma_tim2_ch2_ch4,"aw",%nobits
 1611              		.align	2
 1614              	hdma_tim2_ch2_ch4:
 1615 0000 00000000 		.space	96
 1615      00000000 
 1615      00000000 
 1615      00000000 
 1615      00000000 
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 49


 1616              		.global	htim3
 1617              		.section	.bss.htim3,"aw",%nobits
 1618              		.align	2
 1621              	htim3:
 1622 0000 00000000 		.space	72
 1622      00000000 
 1622      00000000 
 1622      00000000 
 1622      00000000 
 1623              		.global	htim2
 1624              		.section	.bss.htim2,"aw",%nobits
 1625              		.align	2
 1628              	htim2:
 1629 0000 00000000 		.space	72
 1629      00000000 
 1629      00000000 
 1629      00000000 
 1629      00000000 
 1630              		.global	hi2c1
 1631              		.section	.bss.hi2c1,"aw",%nobits
 1632              		.align	2
 1635              	hi2c1:
 1636 0000 00000000 		.space	84
 1636      00000000 
 1636      00000000 
 1636      00000000 
 1636      00000000 
 1637              		.text
 1638              	.Letext0:
 1639              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1640              		.file 4 "c:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.2 mpacbti-rel1\\arm-none-eab
 1641              		.file 5 "c:\\program files (x86)\\arm gnu toolchain arm-none-eabi\\12.2 mpacbti-rel1\\arm-none-eab
 1642              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1643              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1644              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1645              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1646              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1647              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1648              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1649              		.file 13 "Core/Inc/mpu6050.h"
 1650              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1651              		.file 15 "Core/Inc/main.h"
 1652              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1653              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1654              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h"
 1655              		.file 19 "<built-in>"
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 50


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:111    .text.MX_GPIO_Init:0000005c $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:116    .text.MX_DMA_Init:00000000 $t
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:121    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:202    .text.MX_DMA_Init:00000060 $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:210    .text.PID_Control:00000000 $t
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:216    .text.PID_Control:00000000 PID_Control
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:362    .text.motorControl:00000000 $t
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:368    .text.motorControl:00000000 motorControl
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:548    .text.motorControl:000000dc $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1561   .data.motor:00000000 motor
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1628   .bss.htim2:00000000 htim2
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1621   .bss.htim3:00000000 htim3
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:556    .text.Error_Handler:00000000 $t
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:562    .text.Error_Handler:00000000 Error_Handler
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:594    .text.MX_I2C1_Init:00000000 $t
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:599    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:657    .text.MX_I2C1_Init:0000002c $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1635   .bss.hi2c1:00000000 hi2c1
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:664    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:669    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:724    .text.MX_USART1_UART_Init:0000002c $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1586   .bss.huart1:00000000 huart1
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:730    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:735    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:790    .text.MX_USART2_UART_Init:0000002c $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1579   .bss.huart2:00000000 huart2
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:796    .text.MX_TIM2_Init:00000000 $t
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:801    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:968    .text.MX_TIM2_Init:000000b0 $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:973    .text.MX_TIM3_Init:00000000 $t
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:978    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1144   .text.MX_TIM3_Init:000000ac $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1150   .text.SystemClock_Config:00000000 $t
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1156   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1316   .text.SystemClock_Config:000000ac $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1322   .rodata.main.str1.4:00000000 $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1329   .text.main:00000000 $t
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1335   .text.main:00000000 main
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1525   .text.main:0000011c $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1572   .bss.IMU:00000000 IMU
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1554   .bss.Roll:00000000 Roll
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1547   .bss.Pitch:00000000 Pitch
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1540   .bss.motorOutput:00000000 motorOutput
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1537   .bss.motorOutput:00000000 $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1544   .bss.Pitch:00000000 $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1551   .bss.Roll:00000000 $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1558   .data.motor:00000000 $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1569   .bss.IMU:00000000 $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1576   .bss.huart2:00000000 $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1583   .bss.huart1:00000000 $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1593   .bss.hdma_tim3_ch1_trig:00000000 hdma_tim3_ch1_trig
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1590   .bss.hdma_tim3_ch1_trig:00000000 $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1600   .bss.hdma_tim3_ch2:00000000 hdma_tim3_ch2
ARM GAS  C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s 			page 51


C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1597   .bss.hdma_tim3_ch2:00000000 $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1607   .bss.hdma_tim2_up_ch3:00000000 hdma_tim2_up_ch3
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1604   .bss.hdma_tim2_up_ch3:00000000 $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1614   .bss.hdma_tim2_ch2_ch4:00000000 hdma_tim2_ch2_ch4
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1611   .bss.hdma_tim2_ch2_ch4:00000000 $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1618   .bss.htim3:00000000 $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1625   .bss.htim2:00000000 $d
C:\Users\pc\AppData\Local\Temp\ccjBGNSV.s:1632   .bss.hi2c1:00000000 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_dsub
__aeabi_d2uiz
__aeabi_f2d
HAL_GetTick
HAL_getTick
__aeabi_i2d
__aeabi_dadd
HAL_TIM_PWM_Start
HAL_I2C_Init
HAL_UART_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
MPU6050_Init
MPU6050_Read
HAL_Delay
sprintf
HAL_UART_Transmit_IT

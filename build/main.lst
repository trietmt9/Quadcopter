ARM GAS  /tmp/ccFuSgnh.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB141:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <mpu6050.h>
  25:Core/Src/main.c **** #include <kalman_filter.h>
  26:Core/Src/main.c **** #include <bmp180_for_stm32_hal.h>
  27:Core/Src/main.c **** #include <HMC5883L.h>
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccFuSgnh.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  47:Core/Src/main.c **** DMA_HandleTypeDef hdma_i2c1_rx;
  48:Core/Src/main.c **** DMA_HandleTypeDef hdma_i2c1_tx;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  51:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  52:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim2_up_ch3;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** UART_HandleTypeDef huart1;
  55:Core/Src/main.c **** UART_HandleTypeDef huart2;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE BEGIN PV */
  58:Core/Src/main.c **** typedef struct
  59:Core/Src/main.c **** {
  60:Core/Src/main.c ****   int8_t Error;
  61:Core/Src/main.c ****   int8_t PreviousError;
  62:Core/Src/main.c ****   int8_t P;
  63:Core/Src/main.c ****   int8_t I;
  64:Core/Src/main.c ****   int8_t D;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c ****   float Kp;
  67:Core/Src/main.c ****   float Ki;
  68:Core/Src/main.c ****   float Kd;
  69:Core/Src/main.c ****   float PID;
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   uint16_t Roll_M;
  72:Core/Src/main.c ****   uint16_t Pitch_M;
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   uint16_t M1; 
  75:Core/Src/main.c ****   uint16_t M2; 
  76:Core/Src/main.c ****   uint16_t M3; 
  77:Core/Src/main.c ****   uint16_t M4; 
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** }MotorControl;
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** mpu6050_t IMU; 
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** MotorControl motor = 
  84:Core/Src/main.c **** { 
  85:Core/Src/main.c ****   .Kp = 8, 
  86:Core/Src/main.c ****   .Ki = 15, 
  87:Core/Src/main.c ****   .Kd = 1 
  88:Core/Src/main.c **** };
ARM GAS  /tmp/ccFuSgnh.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** kalman_t Kalman =
  91:Core/Src/main.c **** {
  92:Core/Src/main.c ****   .Q_theta = 0.003f,
  93:Core/Src/main.c ****   .Q_theta_dot = 0.001f,
  94:Core/Src/main.c ****   .R = 0.01f
  95:Core/Src/main.c **** };
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** double KalmanX;
  99:Core/Src/main.c **** double KalmanY;
 100:Core/Src/main.c **** float Roll_Input;
 101:Core/Src/main.c **** float Pitch_Input;
 102:Core/Src/main.c **** uint16_t Throttle_Input = 100;
 103:Core/Src/main.c **** float Yaw_Input = 0;
 104:Core/Src/main.c **** char Roll[30];
 105:Core/Src/main.c **** char Pitch[30];
 106:Core/Src/main.c **** char elapsedTimer[30];
 107:Core/Src/main.c **** uint32_t last_time;
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /* USER CODE END PV */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 114:Core/Src/main.c **** void SystemClock_Config(void);
 115:Core/Src/main.c **** static void MX_GPIO_Init(void);
 116:Core/Src/main.c **** static void MX_DMA_Init(void);
 117:Core/Src/main.c **** static void MX_I2C1_Init(void);
 118:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
 119:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
 120:Core/Src/main.c **** static void MX_TIM2_Init(void);
 121:Core/Src/main.c **** static void MX_TIM3_Init(void);
 122:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** /* USER CODE END PFP */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 127:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** double PID_Control(double Desired_Angle ,double Angle, float dt)
 131:Core/Src/main.c **** {
 132:Core/Src/main.c ****   /* PID calculation */
 133:Core/Src/main.c ****   motor.Error = Desired_Angle - Angle;
 134:Core/Src/main.c ****   motor.P =  motor.Error;
 135:Core/Src/main.c ****   motor.I += (motor.Error*dt);
 136:Core/Src/main.c ****   /* prevent I term saturation*/
 137:Core/Src/main.c ****   if(motor.I > 400) motor.I = 400;
 138:Core/Src/main.c ****   else if(motor.I < -400) motor.I = -400;
 139:Core/Src/main.c ****   motor.D = ((motor.PreviousError - motor.Error)/dt);
 140:Core/Src/main.c ****   motor.PID = motor.Kp*motor.P + motor.Ki*motor.I + motor.Kd*motor.D;
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   return motor.PID;
 143:Core/Src/main.c **** }
 144:Core/Src/main.c **** 
 145:Core/Src/main.c **** void motorControl(int Throttle, double Roll, double Pitch, double Yaw)
ARM GAS  /tmp/ccFuSgnh.s 			page 4


 146:Core/Src/main.c **** {
 147:Core/Src/main.c ****   motor.M1 = 1100 + Throttle - Roll - Pitch + Yaw; // CCW - Front left   - D3 
 148:Core/Src/main.c ****   motor.M2 = 1100 + Throttle + Roll - Pitch - Yaw; // CW  - Back right   - D6 
 149:Core/Src/main.c ****   motor.M3 = 1100 + Throttle + Roll + Pitch + Yaw; // CCW - Front right  - D5 
 150:Core/Src/main.c ****   motor.M4 = 1100 + Throttle + Roll - Pitch - Yaw; // CW  - Back left    - D4  
 151:Core/Src/main.c ****  
 152:Core/Src/main.c ****   if (motor.M1 > 1500) motor.M1 = 1500;
 153:Core/Src/main.c ****   if (motor.M2 > 1500) motor.M2 = 1500;
 154:Core/Src/main.c ****   if (motor.M3 > 1500) motor.M3 = 1500;
 155:Core/Src/main.c ****   if (motor.M4 > 1500) motor.M4 = 1500;
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   // prevent.motor cut-off
 158:Core/Src/main.c ****   if (motor.M1 < 1150) motor.M1 = 1150; 
 159:Core/Src/main.c ****   if (motor.M2 < 1150) motor.M2 = 1150;
 160:Core/Src/main.c ****   if (motor.M3 < 1150) motor.M3 = 1150;
 161:Core/Src/main.c ****   if (motor.M4 < 1150) motor.M4 = 1150;
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   TIM2->CCR2 = motor.M1; // PB3  - D3 
 164:Core/Src/main.c ****   TIM2->CCR3 = motor.M2; // PB10 - D6
 165:Core/Src/main.c ****   TIM3->CCR1 = motor.M3; // PB4  - D5  
 166:Core/Src/main.c ****   TIM3->CCR2 = motor.M4; // PB5  - D4 
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_2);
 169:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_3);
 170:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_1);
 171:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_2);
 172:Core/Src/main.c **** }
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *hi2c)
 175:Core/Src/main.c **** {
 176:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
 177:Core/Src/main.c ****   UNUSED(hi2c);
 178:Core/Src/main.c ****   if(hi2c->Instance == I2C1)
 179:Core/Src/main.c ****   {
 180:Core/Src/main.c ****     MPU6050_Calculate(&IMU);
 181:Core/Src/main.c ****     sprintf(Roll,"Roll_Input: %.2f\n\r",KalmanY);
 182:Core/Src/main.c ****     sprintf(Pitch,"Pitch_Input: %.2f\n\r",KalmanX);
 183:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, Roll, sizeof(Roll),100);
 184:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, Pitch, sizeof(Pitch),100);
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** }
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** /* USER CODE END 0 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** /**
 192:Core/Src/main.c ****   * @brief  The application entry point.
 193:Core/Src/main.c ****   * @retval int
 194:Core/Src/main.c ****   */
 195:Core/Src/main.c **** int main(void)
 196:Core/Src/main.c **** {
 197:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* USER CODE END 1 */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 202:Core/Src/main.c **** 
ARM GAS  /tmp/ccFuSgnh.s 			page 5


 203:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 204:Core/Src/main.c ****   HAL_Init();
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE END Init */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* Configure the system clock */
 211:Core/Src/main.c ****   SystemClock_Config();
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE END SysInit */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* Initialize all configured peripherals */
 218:Core/Src/main.c ****   MX_GPIO_Init();
 219:Core/Src/main.c ****   MX_DMA_Init();
 220:Core/Src/main.c ****   MX_I2C1_Init();
 221:Core/Src/main.c ****   MX_USART1_UART_Init();
 222:Core/Src/main.c ****   MX_USART2_UART_Init();
 223:Core/Src/main.c ****   MX_TIM2_Init();
 224:Core/Src/main.c ****   MX_TIM3_Init();
 225:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 226:Core/Src/main.c ****   MPU6050_Init();
 227:Core/Src/main.c ****   BMP180_Init(&hi2c1);
 228:Core/Src/main.c **** 	BMP180_SetOversampling(BMP180_ULTRA);
 229:Core/Src/main.c ****   BMP180_UpdateCalibrationData();
 230:Core/Src/main.c ****   
 231:Core/Src/main.c ****   for(int callib=0; callib < 2000; callib++)
 232:Core/Src/main.c ****   {
 233:Core/Src/main.c ****       MPU6050_Read(&IMU);
 234:Core/Src/main.c ****       IMU.Gx_Callib+=IMU.Gx;
 235:Core/Src/main.c ****       IMU.Gy_Callib+=IMU.Gy;
 236:Core/Src/main.c ****       IMU.Gz_Callib+=IMU.Gz;
 237:Core/Src/main.c ****       HAL_Delay(1);
 238:Core/Src/main.c ****   }
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   IMU.Gx_Callib/=2000;
 241:Core/Src/main.c ****   IMU.Gy_Callib/=2000;
 242:Core/Src/main.c ****   IMU.Gz_Callib/=2000;
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   
 245:Core/Src/main.c ****   /* USER CODE END 2 */
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   /* Infinite loop */
 248:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 249:Core/Src/main.c ****   while (1)
 250:Core/Src/main.c ****   {
 251:Core/Src/main.c ****     uint32_t current_time = HAL_GetTick();
 252:Core/Src/main.c ****     float dt =(float)(current_time - last_time) / 1.0;
 253:Core/Src/main.c ****     MPU6050_Read(&IMU);
 254:Core/Src/main.c ****     IMU.Gx -= IMU.Gx_Callib;
 255:Core/Src/main.c ****     IMU.Gy -= IMU.Gy_Callib;
 256:Core/Src/main.c ****     IMU.Gz -= IMU.Gz_Callib;
 257:Core/Src/main.c ****     /* USER CODE END WHILE */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
ARM GAS  /tmp/ccFuSgnh.s 			page 6


 260:Core/Src/main.c ****     KalmanY  = Kalman_Filter(&Kalman, IMU.Gx, IMU.Roll, dt);
 261:Core/Src/main.c ****     KalmanX = Kalman_Filter(&Kalman, IMU.Gy, IMU.Pitch, dt);
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****     // Roll_Input  = PID_Control(0, KalmanX, dt);
 264:Core/Src/main.c ****     // Pitch_Input = PID_Control(0, KalmanY, dt);
 265:Core/Src/main.c ****  
 266:Core/Src/main.c ****     // motorControl(Throttle_Input, Roll_Input, Pitch_Input, Yaw_Input);
 267:Core/Src/main.c ****     last_time = current_time;
 268:Core/Src/main.c ****     /**
 269:Core/Src/main.c ****     * sprintf(Pitch,"Pitch: %.2f\n",KalmanPitch);
 270:Core/Src/main.c ****     * HAL_UART_Transmit(&huart2, Pitch, sizeof(Pitch),100);
 271:Core/Src/main.c ****     **/
 272:Core/Src/main.c ****     // sprintf(Roll,"Timer: %.2f\n",dt);
 273:Core/Src/main.c ****     // HAL_UART_Transmit(&huart2, Roll, sizeof(Roll),100);
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****     HAL_Delay(300);   
 276:Core/Src/main.c ****   }
 277:Core/Src/main.c ****   /* USER CODE END 3 */
 278:Core/Src/main.c **** }
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** /**
 281:Core/Src/main.c ****   * @brief System Clock Configuration
 282:Core/Src/main.c ****   * @retval None
 283:Core/Src/main.c ****   */
 284:Core/Src/main.c **** void SystemClock_Config(void)
 285:Core/Src/main.c **** {
 286:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 287:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 290:Core/Src/main.c ****   */
 291:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 292:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 295:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 296:Core/Src/main.c ****   */
 297:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 298:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 299:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 300:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 301:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 302:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 180;
 303:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 304:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 305:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 306:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 307:Core/Src/main.c ****   {
 308:Core/Src/main.c ****     Error_Handler();
 309:Core/Src/main.c ****   }
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /** Activate the Over-Drive mode
 312:Core/Src/main.c ****   */
 313:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 314:Core/Src/main.c ****   {
 315:Core/Src/main.c ****     Error_Handler();
 316:Core/Src/main.c ****   }
ARM GAS  /tmp/ccFuSgnh.s 			page 7


 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 319:Core/Src/main.c ****   */
 320:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 321:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 322:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 323:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 324:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 325:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 328:Core/Src/main.c ****   {
 329:Core/Src/main.c ****     Error_Handler();
 330:Core/Src/main.c ****   }
 331:Core/Src/main.c **** }
 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** /**
 334:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 335:Core/Src/main.c ****   * @param None
 336:Core/Src/main.c ****   * @retval None
 337:Core/Src/main.c ****   */
 338:Core/Src/main.c **** static void MX_I2C1_Init(void)
 339:Core/Src/main.c **** {
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 348:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 349:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 350:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 351:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 352:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 353:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 354:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 355:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 356:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 357:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 358:Core/Src/main.c ****   {
 359:Core/Src/main.c ****     Error_Handler();
 360:Core/Src/main.c ****   }
 361:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 362:Core/Src/main.c **** 
 363:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 364:Core/Src/main.c **** 
 365:Core/Src/main.c **** }
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** /**
 368:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 369:Core/Src/main.c ****   * @param None
 370:Core/Src/main.c ****   * @retval None
 371:Core/Src/main.c ****   */
 372:Core/Src/main.c **** static void MX_TIM2_Init(void)
 373:Core/Src/main.c **** {
ARM GAS  /tmp/ccFuSgnh.s 			page 8


 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 380:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 381:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 386:Core/Src/main.c ****   htim2.Instance = TIM2;
 387:Core/Src/main.c ****   htim2.Init.Prescaler = 90-1;
 388:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 389:Core/Src/main.c ****   htim2.Init.Period = 20000-1;
 390:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 391:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 392:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 393:Core/Src/main.c ****   {
 394:Core/Src/main.c ****     Error_Handler();
 395:Core/Src/main.c ****   }
 396:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 397:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 398:Core/Src/main.c ****   {
 399:Core/Src/main.c ****     Error_Handler();
 400:Core/Src/main.c ****   }
 401:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 402:Core/Src/main.c ****   {
 403:Core/Src/main.c ****     Error_Handler();
 404:Core/Src/main.c ****   }
 405:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 406:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 407:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 408:Core/Src/main.c ****   {
 409:Core/Src/main.c ****     Error_Handler();
 410:Core/Src/main.c ****   }
 411:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 412:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 413:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 414:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 415:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 416:Core/Src/main.c ****   {
 417:Core/Src/main.c ****     Error_Handler();
 418:Core/Src/main.c ****   }
 419:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 420:Core/Src/main.c **** 
 421:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 422:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 423:Core/Src/main.c **** 
 424:Core/Src/main.c **** }
 425:Core/Src/main.c **** 
 426:Core/Src/main.c **** /**
 427:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 428:Core/Src/main.c ****   * @param None
 429:Core/Src/main.c ****   * @retval None
 430:Core/Src/main.c ****   */
ARM GAS  /tmp/ccFuSgnh.s 			page 9


 431:Core/Src/main.c **** static void MX_TIM3_Init(void)
 432:Core/Src/main.c **** {
 433:Core/Src/main.c **** 
 434:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 435:Core/Src/main.c **** 
 436:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 439:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 440:Core/Src/main.c **** 
 441:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 444:Core/Src/main.c ****   htim3.Instance = TIM3;
 445:Core/Src/main.c ****   htim3.Init.Prescaler = 90-1;
 446:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 447:Core/Src/main.c ****   htim3.Init.Period = 20000-1;
 448:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 449:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 450:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 451:Core/Src/main.c ****   {
 452:Core/Src/main.c ****     Error_Handler();
 453:Core/Src/main.c ****   }
 454:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 455:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 456:Core/Src/main.c ****   {
 457:Core/Src/main.c ****     Error_Handler();
 458:Core/Src/main.c ****   }
 459:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 460:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 461:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 462:Core/Src/main.c ****   {
 463:Core/Src/main.c ****     Error_Handler();
 464:Core/Src/main.c ****   }
 465:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 468:Core/Src/main.c **** 
 469:Core/Src/main.c **** }
 470:Core/Src/main.c **** 
 471:Core/Src/main.c **** /**
 472:Core/Src/main.c ****   * @brief USART1 Initialization Function
 473:Core/Src/main.c ****   * @param None
 474:Core/Src/main.c ****   * @retval None
 475:Core/Src/main.c ****   */
 476:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 477:Core/Src/main.c **** {
 478:Core/Src/main.c **** 
 479:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 480:Core/Src/main.c **** 
 481:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 482:Core/Src/main.c **** 
 483:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 484:Core/Src/main.c **** 
 485:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 486:Core/Src/main.c ****   huart1.Instance = USART1;
 487:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
ARM GAS  /tmp/ccFuSgnh.s 			page 10


 488:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 489:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 490:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 491:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 492:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 493:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 494:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 495:Core/Src/main.c ****   {
 496:Core/Src/main.c ****     Error_Handler();
 497:Core/Src/main.c ****   }
 498:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 499:Core/Src/main.c **** 
 500:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 501:Core/Src/main.c **** 
 502:Core/Src/main.c **** }
 503:Core/Src/main.c **** 
 504:Core/Src/main.c **** /**
 505:Core/Src/main.c ****   * @brief USART2 Initialization Function
 506:Core/Src/main.c ****   * @param None
 507:Core/Src/main.c ****   * @retval None
 508:Core/Src/main.c ****   */
 509:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 510:Core/Src/main.c **** {
 511:Core/Src/main.c **** 
 512:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 513:Core/Src/main.c **** 
 514:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 515:Core/Src/main.c **** 
 516:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 517:Core/Src/main.c **** 
 518:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 519:Core/Src/main.c ****   huart2.Instance = USART2;
 520:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 521:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 522:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 523:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 524:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 525:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 526:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 527:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 528:Core/Src/main.c ****   {
 529:Core/Src/main.c ****     Error_Handler();
 530:Core/Src/main.c ****   }
 531:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 532:Core/Src/main.c **** 
 533:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 534:Core/Src/main.c **** 
 535:Core/Src/main.c **** }
 536:Core/Src/main.c **** 
 537:Core/Src/main.c **** /**
 538:Core/Src/main.c ****   * Enable DMA controller clock
 539:Core/Src/main.c ****   */
 540:Core/Src/main.c **** static void MX_DMA_Init(void)
 541:Core/Src/main.c **** {
 542:Core/Src/main.c **** 
 543:Core/Src/main.c ****   /* DMA controller clock enable */
 544:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
ARM GAS  /tmp/ccFuSgnh.s 			page 11


 545:Core/Src/main.c **** 
 546:Core/Src/main.c ****   /* DMA interrupt init */
 547:Core/Src/main.c ****   /* DMA1_Stream0_IRQn interrupt configuration */
 548:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 549:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 550:Core/Src/main.c ****   /* DMA1_Stream1_IRQn interrupt configuration */
 551:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 0, 0);
 552:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 553:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 554:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 0, 0);
 555:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 556:Core/Src/main.c **** 
 557:Core/Src/main.c **** }
 558:Core/Src/main.c **** 
 559:Core/Src/main.c **** /**
 560:Core/Src/main.c ****   * @brief GPIO Initialization Function
 561:Core/Src/main.c ****   * @param None
 562:Core/Src/main.c ****   * @retval None
 563:Core/Src/main.c ****   */
 564:Core/Src/main.c **** static void MX_GPIO_Init(void)
 565:Core/Src/main.c **** {
  28              		.loc 1 565 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 84B0     		sub	sp, sp, #16
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
 566:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 567:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 568:Core/Src/main.c **** 
 569:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 570:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  36              		.loc 1 570 3 view .LVU1
  37              	.LBB4:
  38              		.loc 1 570 3 view .LVU2
  39 0002 0022     		movs	r2, #0
  40 0004 0092     		str	r2, [sp]
  41              		.loc 1 570 3 view .LVU3
  42 0006 154B     		ldr	r3, .L3
  43 0008 196B     		ldr	r1, [r3, #48]
  44 000a 41F00401 		orr	r1, r1, #4
  45 000e 1963     		str	r1, [r3, #48]
  46              		.loc 1 570 3 view .LVU4
  47 0010 196B     		ldr	r1, [r3, #48]
  48 0012 01F00401 		and	r1, r1, #4
  49 0016 0091     		str	r1, [sp]
  50              		.loc 1 570 3 view .LVU5
  51 0018 0099     		ldr	r1, [sp]
  52              	.LBE4:
  53              		.loc 1 570 3 view .LVU6
 571:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  54              		.loc 1 571 3 view .LVU7
  55              	.LBB5:
  56              		.loc 1 571 3 view .LVU8
  57 001a 0192     		str	r2, [sp, #4]
ARM GAS  /tmp/ccFuSgnh.s 			page 12


  58              		.loc 1 571 3 view .LVU9
  59 001c 196B     		ldr	r1, [r3, #48]
  60 001e 41F08001 		orr	r1, r1, #128
  61 0022 1963     		str	r1, [r3, #48]
  62              		.loc 1 571 3 view .LVU10
  63 0024 196B     		ldr	r1, [r3, #48]
  64 0026 01F08001 		and	r1, r1, #128
  65 002a 0191     		str	r1, [sp, #4]
  66              		.loc 1 571 3 view .LVU11
  67 002c 0199     		ldr	r1, [sp, #4]
  68              	.LBE5:
  69              		.loc 1 571 3 view .LVU12
 572:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  70              		.loc 1 572 3 view .LVU13
  71              	.LBB6:
  72              		.loc 1 572 3 view .LVU14
  73 002e 0292     		str	r2, [sp, #8]
  74              		.loc 1 572 3 view .LVU15
  75 0030 196B     		ldr	r1, [r3, #48]
  76 0032 41F00101 		orr	r1, r1, #1
  77 0036 1963     		str	r1, [r3, #48]
  78              		.loc 1 572 3 view .LVU16
  79 0038 196B     		ldr	r1, [r3, #48]
  80 003a 01F00101 		and	r1, r1, #1
  81 003e 0291     		str	r1, [sp, #8]
  82              		.loc 1 572 3 view .LVU17
  83 0040 0299     		ldr	r1, [sp, #8]
  84              	.LBE6:
  85              		.loc 1 572 3 view .LVU18
 573:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  86              		.loc 1 573 3 view .LVU19
  87              	.LBB7:
  88              		.loc 1 573 3 view .LVU20
  89 0042 0392     		str	r2, [sp, #12]
  90              		.loc 1 573 3 view .LVU21
  91 0044 1A6B     		ldr	r2, [r3, #48]
  92 0046 42F00202 		orr	r2, r2, #2
  93 004a 1A63     		str	r2, [r3, #48]
  94              		.loc 1 573 3 view .LVU22
  95 004c 1B6B     		ldr	r3, [r3, #48]
  96 004e 03F00203 		and	r3, r3, #2
  97 0052 0393     		str	r3, [sp, #12]
  98              		.loc 1 573 3 view .LVU23
  99 0054 039B     		ldr	r3, [sp, #12]
 100              	.LBE7:
 101              		.loc 1 573 3 view .LVU24
 574:Core/Src/main.c **** 
 575:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 576:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 577:Core/Src/main.c **** }
 102              		.loc 1 577 1 is_stmt 0 view .LVU25
 103 0056 04B0     		add	sp, sp, #16
 104              	.LCFI1:
 105              		.cfi_def_cfa_offset 0
 106              		@ sp needed
 107 0058 7047     		bx	lr
 108              	.L4:
ARM GAS  /tmp/ccFuSgnh.s 			page 13


 109 005a 00BF     		.align	2
 110              	.L3:
 111 005c 00380240 		.word	1073887232
 112              		.cfi_endproc
 113              	.LFE141:
 115              		.section	.text.MX_DMA_Init,"ax",%progbits
 116              		.align	1
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	MX_DMA_Init:
 122              	.LFB140:
 541:Core/Src/main.c **** 
 123              		.loc 1 541 1 is_stmt 1 view -0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 8
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127 0000 10B5     		push	{r4, lr}
 128              	.LCFI2:
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 4, -8
 131              		.cfi_offset 14, -4
 132 0002 82B0     		sub	sp, sp, #8
 133              	.LCFI3:
 134              		.cfi_def_cfa_offset 16
 544:Core/Src/main.c **** 
 135              		.loc 1 544 3 view .LVU27
 136              	.LBB8:
 544:Core/Src/main.c **** 
 137              		.loc 1 544 3 view .LVU28
 138 0004 0024     		movs	r4, #0
 139 0006 0194     		str	r4, [sp, #4]
 544:Core/Src/main.c **** 
 140              		.loc 1 544 3 view .LVU29
 141 0008 114B     		ldr	r3, .L7
 142 000a 1A6B     		ldr	r2, [r3, #48]
 143 000c 42F40012 		orr	r2, r2, #2097152
 144 0010 1A63     		str	r2, [r3, #48]
 544:Core/Src/main.c **** 
 145              		.loc 1 544 3 view .LVU30
 146 0012 1B6B     		ldr	r3, [r3, #48]
 147 0014 03F40013 		and	r3, r3, #2097152
 148 0018 0193     		str	r3, [sp, #4]
 544:Core/Src/main.c **** 
 149              		.loc 1 544 3 view .LVU31
 150 001a 019B     		ldr	r3, [sp, #4]
 151              	.LBE8:
 544:Core/Src/main.c **** 
 152              		.loc 1 544 3 view .LVU32
 548:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 153              		.loc 1 548 3 view .LVU33
 154 001c 2246     		mov	r2, r4
 155 001e 2146     		mov	r1, r4
 156 0020 0B20     		movs	r0, #11
 157 0022 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 158              	.LVL0:
 549:Core/Src/main.c ****   /* DMA1_Stream1_IRQn interrupt configuration */
ARM GAS  /tmp/ccFuSgnh.s 			page 14


 159              		.loc 1 549 3 view .LVU34
 160 0026 0B20     		movs	r0, #11
 161 0028 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 162              	.LVL1:
 551:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 163              		.loc 1 551 3 view .LVU35
 164 002c 2246     		mov	r2, r4
 165 002e 2146     		mov	r1, r4
 166 0030 0C20     		movs	r0, #12
 167 0032 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 168              	.LVL2:
 552:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 169              		.loc 1 552 3 view .LVU36
 170 0036 0C20     		movs	r0, #12
 171 0038 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 172              	.LVL3:
 554:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 173              		.loc 1 554 3 view .LVU37
 174 003c 2246     		mov	r2, r4
 175 003e 2146     		mov	r1, r4
 176 0040 1120     		movs	r0, #17
 177 0042 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 178              	.LVL4:
 555:Core/Src/main.c **** 
 179              		.loc 1 555 3 view .LVU38
 180 0046 1120     		movs	r0, #17
 181 0048 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 182              	.LVL5:
 557:Core/Src/main.c **** 
 183              		.loc 1 557 1 is_stmt 0 view .LVU39
 184 004c 02B0     		add	sp, sp, #8
 185              	.LCFI4:
 186              		.cfi_def_cfa_offset 8
 187              		@ sp needed
 188 004e 10BD     		pop	{r4, pc}
 189              	.L8:
 190              		.align	2
 191              	.L7:
 192 0050 00380240 		.word	1073887232
 193              		.cfi_endproc
 194              	.LFE140:
 196              		.global	__aeabi_dsub
 197              		.global	__aeabi_d2iz
 198              		.global	__aeabi_f2d
 199              		.section	.text.PID_Control,"ax",%progbits
 200              		.align	1
 201              		.global	PID_Control
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 206              	PID_Control:
 207              	.LVL6:
 208              	.LFB130:
 131:Core/Src/main.c ****   /* PID calculation */
 209              		.loc 1 131 1 is_stmt 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccFuSgnh.s 			page 15


 212              		@ frame_needed = 0, uses_anonymous_args = 0
 131:Core/Src/main.c ****   /* PID calculation */
 213              		.loc 1 131 1 is_stmt 0 view .LVU41
 214 0000 00B5     		push	{lr}
 215              	.LCFI5:
 216              		.cfi_def_cfa_offset 4
 217              		.cfi_offset 14, -4
 218 0002 2DED028B 		vpush.64	{d8}
 219              	.LCFI6:
 220              		.cfi_def_cfa_offset 12
 221              		.cfi_offset 80, -12
 222              		.cfi_offset 81, -8
 223 0006 83B0     		sub	sp, sp, #12
 224              	.LCFI7:
 225              		.cfi_def_cfa_offset 24
 226 0008 51EC100B 		vmov	r0, r1, d0
 227 000c 53EC112B 		vmov	r2, r3, d1
 228 0010 B0EE428A 		vmov.f32	s16, s4
 133:Core/Src/main.c ****   motor.P =  motor.Error;
 229              		.loc 1 133 3 is_stmt 1 view .LVU42
 133:Core/Src/main.c ****   motor.P =  motor.Error;
 230              		.loc 1 133 31 is_stmt 0 view .LVU43
 231 0014 FFF7FEFF 		bl	__aeabi_dsub
 232              	.LVL7:
 133:Core/Src/main.c ****   motor.P =  motor.Error;
 233              		.loc 1 133 15 view .LVU44
 234 0018 FFF7FEFF 		bl	__aeabi_d2iz
 235              	.LVL8:
 236 001c 40B2     		sxtb	r0, r0
 237 001e 264B     		ldr	r3, .L11
 238 0020 1870     		strb	r0, [r3]
 134:Core/Src/main.c ****   motor.I += (motor.Error*dt);
 239              		.loc 1 134 3 is_stmt 1 view .LVU45
 134:Core/Src/main.c ****   motor.I += (motor.Error*dt);
 240              		.loc 1 134 11 is_stmt 0 view .LVU46
 241 0022 9870     		strb	r0, [r3, #2]
 135:Core/Src/main.c ****   /* prevent I term saturation*/
 242              		.loc 1 135 3 is_stmt 1 view .LVU47
 135:Core/Src/main.c ****   /* prevent I term saturation*/
 243              		.loc 1 135 26 is_stmt 0 view .LVU48
 244 0024 07EE900A 		vmov	s15, r0	@ int
 245 0028 F8EEE77A 		vcvt.f32.s32	s15, s15
 246 002c 67EE886A 		vmul.f32	s13, s15, s16
 135:Core/Src/main.c ****   /* prevent I term saturation*/
 247              		.loc 1 135 11 view .LVU49
 248 0030 93F90320 		ldrsb	r2, [r3, #3]
 249 0034 07EE102A 		vmov	s14, r2	@ int
 250 0038 B8EEC77A 		vcvt.f32.s32	s14, s14
 251 003c 37EE267A 		vadd.f32	s14, s14, s13
 252 0040 BDEEC77A 		vcvt.s32.f32	s14, s14
 253 0044 8DED017A 		vstr.32	s14, [sp, #4]	@ int
 254 0048 9DF90410 		ldrsb	r1, [sp, #4]
 255 004c D970     		strb	r1, [r3, #3]
 137:Core/Src/main.c ****   else if(motor.I < -400) motor.I = -400;
 256              		.loc 1 137 3 is_stmt 1 view .LVU50
 138:Core/Src/main.c ****   motor.D = ((motor.PreviousError - motor.Error)/dt);
 257              		.loc 1 138 8 view .LVU51
ARM GAS  /tmp/ccFuSgnh.s 			page 16


 139:Core/Src/main.c ****   motor.PID = motor.Kp*motor.P + motor.Ki*motor.I + motor.Kd*motor.D;
 258              		.loc 1 139 3 view .LVU52
 139:Core/Src/main.c ****   motor.PID = motor.Kp*motor.P + motor.Ki*motor.I + motor.Kd*motor.D;
 259              		.loc 1 139 20 is_stmt 0 view .LVU53
 260 004e 93F90120 		ldrsb	r2, [r3, #1]
 139:Core/Src/main.c ****   motor.PID = motor.Kp*motor.P + motor.Ki*motor.I + motor.Kd*motor.D;
 261              		.loc 1 139 35 view .LVU54
 262 0052 101A     		subs	r0, r2, r0
 139:Core/Src/main.c ****   motor.PID = motor.Kp*motor.P + motor.Ki*motor.I + motor.Kd*motor.D;
 263              		.loc 1 139 49 view .LVU55
 264 0054 07EE100A 		vmov	s14, r0	@ int
 265 0058 B8EEC77A 		vcvt.f32.s32	s14, s14
 266 005c C7EE086A 		vdiv.f32	s13, s14, s16
 139:Core/Src/main.c ****   motor.PID = motor.Kp*motor.P + motor.Ki*motor.I + motor.Kd*motor.D;
 267              		.loc 1 139 11 view .LVU56
 268 0060 BDEEE67A 		vcvt.s32.f32	s14, s13
 269 0064 8DED017A 		vstr.32	s14, [sp, #4]	@ int
 270 0068 9DF90420 		ldrsb	r2, [sp, #4]
 271 006c 1A71     		strb	r2, [r3, #4]
 140:Core/Src/main.c **** 
 272              		.loc 1 140 3 is_stmt 1 view .LVU57
 140:Core/Src/main.c **** 
 273              		.loc 1 140 20 is_stmt 0 view .LVU58
 274 006e 93ED027A 		vldr.32	s14, [r3, #8]
 140:Core/Src/main.c **** 
 275              		.loc 1 140 23 view .LVU59
 276 0072 67EE877A 		vmul.f32	s15, s15, s14
 140:Core/Src/main.c **** 
 277              		.loc 1 140 39 view .LVU60
 278 0076 D3ED036A 		vldr.32	s13, [r3, #12]
 140:Core/Src/main.c **** 
 279              		.loc 1 140 42 view .LVU61
 280 007a 07EE101A 		vmov	s14, r1	@ int
 281 007e B8EEC77A 		vcvt.f32.s32	s14, s14
 282 0082 27EE267A 		vmul.f32	s14, s14, s13
 140:Core/Src/main.c **** 
 283              		.loc 1 140 32 view .LVU62
 284 0086 77EE877A 		vadd.f32	s15, s15, s14
 140:Core/Src/main.c **** 
 285              		.loc 1 140 58 view .LVU63
 286 008a D3ED046A 		vldr.32	s13, [r3, #16]
 140:Core/Src/main.c **** 
 287              		.loc 1 140 61 view .LVU64
 288 008e 07EE102A 		vmov	s14, r2	@ int
 289 0092 B8EEC77A 		vcvt.f32.s32	s14, s14
 290 0096 27EE267A 		vmul.f32	s14, s14, s13
 140:Core/Src/main.c **** 
 291              		.loc 1 140 51 view .LVU65
 292 009a 77EE877A 		vadd.f32	s15, s15, s14
 140:Core/Src/main.c **** 
 293              		.loc 1 140 13 view .LVU66
 294 009e C3ED057A 		vstr.32	s15, [r3, #20]
 142:Core/Src/main.c **** }
 295              		.loc 1 142 3 is_stmt 1 view .LVU67
 142:Core/Src/main.c **** }
 296              		.loc 1 142 15 is_stmt 0 view .LVU68
 297 00a2 17EE900A 		vmov	r0, s15
ARM GAS  /tmp/ccFuSgnh.s 			page 17


 298 00a6 FFF7FEFF 		bl	__aeabi_f2d
 299              	.LVL9:
 143:Core/Src/main.c **** 
 300              		.loc 1 143 1 view .LVU69
 301 00aa 41EC100B 		vmov	d0, r0, r1
 302 00ae 03B0     		add	sp, sp, #12
 303              	.LCFI8:
 304              		.cfi_def_cfa_offset 12
 305              		@ sp needed
 306 00b0 BDEC028B 		vldm	sp!, {d8}
 307              	.LCFI9:
 308              		.cfi_restore 80
 309              		.cfi_restore 81
 310              		.cfi_def_cfa_offset 4
 311              	.LVL10:
 143:Core/Src/main.c **** 
 312              		.loc 1 143 1 view .LVU70
 313 00b4 5DF804FB 		ldr	pc, [sp], #4
 314              	.L12:
 315              		.align	2
 316              	.L11:
 317 00b8 00000000 		.word	.LANCHOR0
 318              		.cfi_endproc
 319              	.LFE130:
 321              		.global	__aeabi_i2d
 322              		.global	__aeabi_dadd
 323              		.global	__aeabi_d2uiz
 324              		.section	.text.motorControl,"ax",%progbits
 325              		.align	1
 326              		.global	motorControl
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 331              	motorControl:
 332              	.LVL11:
 333              	.LFB131:
 146:Core/Src/main.c ****   motor.M1 = 1100 + Throttle - Roll - Pitch + Yaw; // CCW - Front left   - D3 
 334              		.loc 1 146 1 is_stmt 1 view -0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 8
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 146:Core/Src/main.c ****   motor.M1 = 1100 + Throttle - Roll - Pitch + Yaw; // CCW - Front left   - D3 
 338              		.loc 1 146 1 is_stmt 0 view .LVU72
 339 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 340              	.LCFI10:
 341              		.cfi_def_cfa_offset 36
 342              		.cfi_offset 4, -36
 343              		.cfi_offset 5, -32
 344              		.cfi_offset 6, -28
 345              		.cfi_offset 7, -24
 346              		.cfi_offset 8, -20
 347              		.cfi_offset 9, -16
 348              		.cfi_offset 10, -12
 349              		.cfi_offset 11, -8
 350              		.cfi_offset 14, -4
 351 0004 83B0     		sub	sp, sp, #12
 352              	.LCFI11:
ARM GAS  /tmp/ccFuSgnh.s 			page 18


 353              		.cfi_def_cfa_offset 48
 354 0006 59EC108B 		vmov	r8, r9, d0
 355 000a 57EC116B 		vmov	r6, r7, d1
 356 000e 55EC124B 		vmov	r4, r5, d2
 147:Core/Src/main.c ****   motor.M2 = 1100 + Throttle + Roll - Pitch - Yaw; // CW  - Back right   - D6 
 357              		.loc 1 147 3 is_stmt 1 view .LVU73
 147:Core/Src/main.c ****   motor.M2 = 1100 + Throttle + Roll - Pitch - Yaw; // CW  - Back right   - D6 
 358              		.loc 1 147 30 is_stmt 0 view .LVU74
 359 0012 00F24C40 		addw	r0, r0, #1100
 360              	.LVL12:
 147:Core/Src/main.c ****   motor.M2 = 1100 + Throttle + Roll - Pitch - Yaw; // CW  - Back right   - D6 
 361              		.loc 1 147 30 view .LVU75
 362 0016 FFF7FEFF 		bl	__aeabi_i2d
 363              	.LVL13:
 147:Core/Src/main.c ****   motor.M2 = 1100 + Throttle + Roll - Pitch - Yaw; // CW  - Back right   - D6 
 364              		.loc 1 147 30 view .LVU76
 365 001a 0246     		mov	r2, r0
 366 001c 0B46     		mov	r3, r1
 367 001e CDE90023 		strd	r2, [sp]
 368 0022 4246     		mov	r2, r8
 369 0024 4B46     		mov	r3, r9
 370 0026 FFF7FEFF 		bl	__aeabi_dsub
 371              	.LVL14:
 147:Core/Src/main.c ****   motor.M2 = 1100 + Throttle + Roll - Pitch - Yaw; // CW  - Back right   - D6 
 372              		.loc 1 147 37 view .LVU77
 373 002a 3246     		mov	r2, r6
 374 002c 3B46     		mov	r3, r7
 375 002e FFF7FEFF 		bl	__aeabi_dsub
 376              	.LVL15:
 147:Core/Src/main.c ****   motor.M2 = 1100 + Throttle + Roll - Pitch - Yaw; // CW  - Back right   - D6 
 377              		.loc 1 147 45 view .LVU78
 378 0032 2246     		mov	r2, r4
 379 0034 2B46     		mov	r3, r5
 380 0036 FFF7FEFF 		bl	__aeabi_dadd
 381              	.LVL16:
 147:Core/Src/main.c ****   motor.M2 = 1100 + Throttle + Roll - Pitch - Yaw; // CW  - Back right   - D6 
 382              		.loc 1 147 12 view .LVU79
 383 003a FFF7FEFF 		bl	__aeabi_d2uiz
 384              	.LVL17:
 385 003e 1FFA80FA 		uxth	r10, r0
 386 0042 DFF82CB1 		ldr	fp, .L23
 387 0046 ABF81CA0 		strh	r10, [fp, #28]	@ movhi
 148:Core/Src/main.c ****   motor.M3 = 1100 + Throttle + Roll + Pitch + Yaw; // CCW - Front right  - D5 
 388              		.loc 1 148 3 is_stmt 1 view .LVU80
 148:Core/Src/main.c ****   motor.M3 = 1100 + Throttle + Roll + Pitch + Yaw; // CCW - Front right  - D5 
 389              		.loc 1 148 30 is_stmt 0 view .LVU81
 390 004a 4246     		mov	r2, r8
 391 004c 4B46     		mov	r3, r9
 392 004e DDE90001 		ldrd	r0, [sp]
 393 0052 FFF7FEFF 		bl	__aeabi_dadd
 394              	.LVL18:
 395 0056 0246     		mov	r2, r0
 396 0058 0B46     		mov	r3, r1
 397 005a CDE90023 		strd	r2, [sp]
 148:Core/Src/main.c ****   motor.M3 = 1100 + Throttle + Roll + Pitch + Yaw; // CCW - Front right  - D5 
 398              		.loc 1 148 37 view .LVU82
 399 005e 3246     		mov	r2, r6
ARM GAS  /tmp/ccFuSgnh.s 			page 19


 400 0060 3B46     		mov	r3, r7
 401 0062 FFF7FEFF 		bl	__aeabi_dsub
 402              	.LVL19:
 148:Core/Src/main.c ****   motor.M3 = 1100 + Throttle + Roll + Pitch + Yaw; // CCW - Front right  - D5 
 403              		.loc 1 148 45 view .LVU83
 404 0066 2246     		mov	r2, r4
 405 0068 2B46     		mov	r3, r5
 406 006a FFF7FEFF 		bl	__aeabi_dsub
 407              	.LVL20:
 148:Core/Src/main.c ****   motor.M3 = 1100 + Throttle + Roll + Pitch + Yaw; // CCW - Front right  - D5 
 408              		.loc 1 148 12 view .LVU84
 409 006e FFF7FEFF 		bl	__aeabi_d2uiz
 410              	.LVL21:
 411 0072 1FFA80F8 		uxth	r8, r0
 412              	.LVL22:
 148:Core/Src/main.c ****   motor.M3 = 1100 + Throttle + Roll + Pitch + Yaw; // CCW - Front right  - D5 
 413              		.loc 1 148 12 view .LVU85
 414 0076 ABF81E80 		strh	r8, [fp, #30]	@ movhi
 149:Core/Src/main.c ****   motor.M4 = 1100 + Throttle + Roll - Pitch - Yaw; // CW  - Back left    - D4  
 415              		.loc 1 149 3 is_stmt 1 view .LVU86
 149:Core/Src/main.c ****   motor.M4 = 1100 + Throttle + Roll - Pitch - Yaw; // CW  - Back left    - D4  
 416              		.loc 1 149 37 is_stmt 0 view .LVU87
 417 007a 3246     		mov	r2, r6
 418 007c 3B46     		mov	r3, r7
 419 007e DDE90001 		ldrd	r0, [sp]
 420 0082 FFF7FEFF 		bl	__aeabi_dadd
 421              	.LVL23:
 149:Core/Src/main.c ****   motor.M4 = 1100 + Throttle + Roll - Pitch - Yaw; // CW  - Back left    - D4  
 422              		.loc 1 149 45 view .LVU88
 423 0086 2246     		mov	r2, r4
 424 0088 2B46     		mov	r3, r5
 425 008a FFF7FEFF 		bl	__aeabi_dadd
 426              	.LVL24:
 149:Core/Src/main.c ****   motor.M4 = 1100 + Throttle + Roll - Pitch - Yaw; // CW  - Back left    - D4  
 427              		.loc 1 149 12 view .LVU89
 428 008e FFF7FEFF 		bl	__aeabi_d2uiz
 429              	.LVL25:
 430 0092 80B2     		uxth	r0, r0
 431 0094 ABF82000 		strh	r0, [fp, #32]	@ movhi
 150:Core/Src/main.c ****  
 432              		.loc 1 150 3 is_stmt 1 view .LVU90
 150:Core/Src/main.c ****  
 433              		.loc 1 150 12 is_stmt 0 view .LVU91
 434 0098 ABF82280 		strh	r8, [fp, #34]	@ movhi
 152:Core/Src/main.c ****   if (motor.M2 > 1500) motor.M2 = 1500;
 435              		.loc 1 152 3 is_stmt 1 view .LVU92
 152:Core/Src/main.c ****   if (motor.M2 > 1500) motor.M2 = 1500;
 436              		.loc 1 152 6 is_stmt 0 view .LVU93
 437 009c 40F2DC53 		movw	r3, #1500
 438 00a0 9A45     		cmp	r10, r3
 439 00a2 03D9     		bls	.L14
 152:Core/Src/main.c ****   if (motor.M2 > 1500) motor.M2 = 1500;
 440              		.loc 1 152 24 is_stmt 1 discriminator 1 view .LVU94
 152:Core/Src/main.c ****   if (motor.M2 > 1500) motor.M2 = 1500;
 441              		.loc 1 152 33 is_stmt 0 discriminator 1 view .LVU95
 442 00a4 40F2DC52 		movw	r2, #1500
 443 00a8 ABF81C20 		strh	r2, [fp, #28]	@ movhi
ARM GAS  /tmp/ccFuSgnh.s 			page 20


 444              	.L14:
 153:Core/Src/main.c ****   if (motor.M3 > 1500) motor.M3 = 1500;
 445              		.loc 1 153 3 is_stmt 1 view .LVU96
 153:Core/Src/main.c ****   if (motor.M3 > 1500) motor.M3 = 1500;
 446              		.loc 1 153 6 is_stmt 0 view .LVU97
 447 00ac 40F2DC53 		movw	r3, #1500
 448 00b0 9845     		cmp	r8, r3
 449 00b2 03D9     		bls	.L15
 153:Core/Src/main.c ****   if (motor.M3 > 1500) motor.M3 = 1500;
 450              		.loc 1 153 24 is_stmt 1 discriminator 1 view .LVU98
 153:Core/Src/main.c ****   if (motor.M3 > 1500) motor.M3 = 1500;
 451              		.loc 1 153 33 is_stmt 0 discriminator 1 view .LVU99
 452 00b4 2E4B     		ldr	r3, .L23
 453 00b6 40F2DC52 		movw	r2, #1500
 454 00ba DA83     		strh	r2, [r3, #30]	@ movhi
 455              	.L15:
 154:Core/Src/main.c ****   if (motor.M4 > 1500) motor.M4 = 1500;
 456              		.loc 1 154 3 is_stmt 1 view .LVU100
 154:Core/Src/main.c ****   if (motor.M4 > 1500) motor.M4 = 1500;
 457              		.loc 1 154 6 is_stmt 0 view .LVU101
 458 00bc 40F2DC53 		movw	r3, #1500
 459 00c0 9842     		cmp	r0, r3
 460 00c2 03D9     		bls	.L16
 154:Core/Src/main.c ****   if (motor.M4 > 1500) motor.M4 = 1500;
 461              		.loc 1 154 24 is_stmt 1 discriminator 1 view .LVU102
 154:Core/Src/main.c ****   if (motor.M4 > 1500) motor.M4 = 1500;
 462              		.loc 1 154 33 is_stmt 0 discriminator 1 view .LVU103
 463 00c4 2A4B     		ldr	r3, .L23
 464 00c6 40F2DC52 		movw	r2, #1500
 465 00ca 1A84     		strh	r2, [r3, #32]	@ movhi
 466              	.L16:
 155:Core/Src/main.c **** 
 467              		.loc 1 155 3 is_stmt 1 view .LVU104
 155:Core/Src/main.c **** 
 468              		.loc 1 155 6 is_stmt 0 view .LVU105
 469 00cc 40F2DC53 		movw	r3, #1500
 470 00d0 9845     		cmp	r8, r3
 471 00d2 03D9     		bls	.L17
 155:Core/Src/main.c **** 
 472              		.loc 1 155 24 is_stmt 1 discriminator 1 view .LVU106
 155:Core/Src/main.c **** 
 473              		.loc 1 155 33 is_stmt 0 discriminator 1 view .LVU107
 474 00d4 264B     		ldr	r3, .L23
 475 00d6 40F2DC52 		movw	r2, #1500
 476 00da 5A84     		strh	r2, [r3, #34]	@ movhi
 477              	.L17:
 158:Core/Src/main.c ****   if (motor.M2 < 1150) motor.M2 = 1150;
 478              		.loc 1 158 3 is_stmt 1 view .LVU108
 158:Core/Src/main.c ****   if (motor.M2 < 1150) motor.M2 = 1150;
 479              		.loc 1 158 12 is_stmt 0 view .LVU109
 480 00dc 244B     		ldr	r3, .L23
 481 00de 9A8B     		ldrh	r2, [r3, #28]
 158:Core/Src/main.c ****   if (motor.M2 < 1150) motor.M2 = 1150;
 482              		.loc 1 158 6 view .LVU110
 483 00e0 40F27D43 		movw	r3, #1149
 484 00e4 9A42     		cmp	r2, r3
 485 00e6 03D8     		bhi	.L18
ARM GAS  /tmp/ccFuSgnh.s 			page 21


 158:Core/Src/main.c ****   if (motor.M2 < 1150) motor.M2 = 1150;
 486              		.loc 1 158 24 is_stmt 1 discriminator 1 view .LVU111
 158:Core/Src/main.c ****   if (motor.M2 < 1150) motor.M2 = 1150;
 487              		.loc 1 158 33 is_stmt 0 discriminator 1 view .LVU112
 488 00e8 214B     		ldr	r3, .L23
 489 00ea 40F27E42 		movw	r2, #1150
 490 00ee 9A83     		strh	r2, [r3, #28]	@ movhi
 491              	.L18:
 159:Core/Src/main.c ****   if (motor.M3 < 1150) motor.M3 = 1150;
 492              		.loc 1 159 3 is_stmt 1 view .LVU113
 159:Core/Src/main.c ****   if (motor.M3 < 1150) motor.M3 = 1150;
 493              		.loc 1 159 12 is_stmt 0 view .LVU114
 494 00f0 1F4B     		ldr	r3, .L23
 495 00f2 DA8B     		ldrh	r2, [r3, #30]
 159:Core/Src/main.c ****   if (motor.M3 < 1150) motor.M3 = 1150;
 496              		.loc 1 159 6 view .LVU115
 497 00f4 40F27D43 		movw	r3, #1149
 498 00f8 9A42     		cmp	r2, r3
 499 00fa 03D8     		bhi	.L19
 159:Core/Src/main.c ****   if (motor.M3 < 1150) motor.M3 = 1150;
 500              		.loc 1 159 24 is_stmt 1 discriminator 1 view .LVU116
 159:Core/Src/main.c ****   if (motor.M3 < 1150) motor.M3 = 1150;
 501              		.loc 1 159 33 is_stmt 0 discriminator 1 view .LVU117
 502 00fc 1C4B     		ldr	r3, .L23
 503 00fe 40F27E42 		movw	r2, #1150
 504 0102 DA83     		strh	r2, [r3, #30]	@ movhi
 505              	.L19:
 160:Core/Src/main.c ****   if (motor.M4 < 1150) motor.M4 = 1150;
 506              		.loc 1 160 3 is_stmt 1 view .LVU118
 160:Core/Src/main.c ****   if (motor.M4 < 1150) motor.M4 = 1150;
 507              		.loc 1 160 12 is_stmt 0 view .LVU119
 508 0104 1A4B     		ldr	r3, .L23
 509 0106 1A8C     		ldrh	r2, [r3, #32]
 160:Core/Src/main.c ****   if (motor.M4 < 1150) motor.M4 = 1150;
 510              		.loc 1 160 6 view .LVU120
 511 0108 40F27D43 		movw	r3, #1149
 512 010c 9A42     		cmp	r2, r3
 513 010e 03D8     		bhi	.L20
 160:Core/Src/main.c ****   if (motor.M4 < 1150) motor.M4 = 1150;
 514              		.loc 1 160 24 is_stmt 1 discriminator 1 view .LVU121
 160:Core/Src/main.c ****   if (motor.M4 < 1150) motor.M4 = 1150;
 515              		.loc 1 160 33 is_stmt 0 discriminator 1 view .LVU122
 516 0110 174B     		ldr	r3, .L23
 517 0112 40F27E42 		movw	r2, #1150
 518 0116 1A84     		strh	r2, [r3, #32]	@ movhi
 519              	.L20:
 161:Core/Src/main.c **** 
 520              		.loc 1 161 3 is_stmt 1 view .LVU123
 161:Core/Src/main.c **** 
 521              		.loc 1 161 12 is_stmt 0 view .LVU124
 522 0118 154B     		ldr	r3, .L23
 523 011a 5A8C     		ldrh	r2, [r3, #34]
 161:Core/Src/main.c **** 
 524              		.loc 1 161 6 view .LVU125
 525 011c 40F27D43 		movw	r3, #1149
 526 0120 9A42     		cmp	r2, r3
 527 0122 03D8     		bhi	.L21
ARM GAS  /tmp/ccFuSgnh.s 			page 22


 161:Core/Src/main.c **** 
 528              		.loc 1 161 24 is_stmt 1 discriminator 1 view .LVU126
 161:Core/Src/main.c **** 
 529              		.loc 1 161 33 is_stmt 0 discriminator 1 view .LVU127
 530 0124 124B     		ldr	r3, .L23
 531 0126 40F27E42 		movw	r2, #1150
 532 012a 5A84     		strh	r2, [r3, #34]	@ movhi
 533              	.L21:
 163:Core/Src/main.c ****   TIM2->CCR3 = motor.M2; // PB10 - D6
 534              		.loc 1 163 3 is_stmt 1 view .LVU128
 163:Core/Src/main.c ****   TIM2->CCR3 = motor.M2; // PB10 - D6
 535              		.loc 1 163 21 is_stmt 0 view .LVU129
 536 012c 104B     		ldr	r3, .L23
 537 012e 998B     		ldrh	r1, [r3, #28]
 163:Core/Src/main.c ****   TIM2->CCR3 = motor.M2; // PB10 - D6
 538              		.loc 1 163 14 view .LVU130
 539 0130 4FF08042 		mov	r2, #1073741824
 540 0134 9163     		str	r1, [r2, #56]
 164:Core/Src/main.c ****   TIM3->CCR1 = motor.M3; // PB4  - D5  
 541              		.loc 1 164 3 is_stmt 1 view .LVU131
 164:Core/Src/main.c ****   TIM3->CCR1 = motor.M3; // PB4  - D5  
 542              		.loc 1 164 21 is_stmt 0 view .LVU132
 543 0136 D98B     		ldrh	r1, [r3, #30]
 164:Core/Src/main.c ****   TIM3->CCR1 = motor.M3; // PB4  - D5  
 544              		.loc 1 164 14 view .LVU133
 545 0138 D163     		str	r1, [r2, #60]
 165:Core/Src/main.c ****   TIM3->CCR2 = motor.M4; // PB5  - D4 
 546              		.loc 1 165 3 is_stmt 1 view .LVU134
 165:Core/Src/main.c ****   TIM3->CCR2 = motor.M4; // PB5  - D4 
 547              		.loc 1 165 21 is_stmt 0 view .LVU135
 548 013a 198C     		ldrh	r1, [r3, #32]
 165:Core/Src/main.c ****   TIM3->CCR2 = motor.M4; // PB5  - D4 
 549              		.loc 1 165 14 view .LVU136
 550 013c 02F58062 		add	r2, r2, #1024
 551 0140 5163     		str	r1, [r2, #52]
 166:Core/Src/main.c **** 
 552              		.loc 1 166 3 is_stmt 1 view .LVU137
 166:Core/Src/main.c **** 
 553              		.loc 1 166 21 is_stmt 0 view .LVU138
 554 0142 5B8C     		ldrh	r3, [r3, #34]
 166:Core/Src/main.c **** 
 555              		.loc 1 166 14 view .LVU139
 556 0144 9363     		str	r3, [r2, #56]
 168:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_3);
 557              		.loc 1 168 3 is_stmt 1 view .LVU140
 558 0146 0B4C     		ldr	r4, .L23+4
 559              	.LVL26:
 168:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_3);
 560              		.loc 1 168 3 is_stmt 0 view .LVU141
 561 0148 0421     		movs	r1, #4
 562 014a 2046     		mov	r0, r4
 563 014c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 564              	.LVL27:
 169:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_1);
 565              		.loc 1 169 3 is_stmt 1 view .LVU142
 566 0150 0821     		movs	r1, #8
 567 0152 2046     		mov	r0, r4
ARM GAS  /tmp/ccFuSgnh.s 			page 23


 568 0154 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 569              	.LVL28:
 170:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_2);
 570              		.loc 1 170 3 view .LVU143
 571 0158 074C     		ldr	r4, .L23+8
 572 015a 0021     		movs	r1, #0
 573 015c 2046     		mov	r0, r4
 574 015e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 575              	.LVL29:
 171:Core/Src/main.c **** }
 576              		.loc 1 171 3 view .LVU144
 577 0162 0421     		movs	r1, #4
 578 0164 2046     		mov	r0, r4
 579 0166 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 580              	.LVL30:
 172:Core/Src/main.c **** 
 581              		.loc 1 172 1 is_stmt 0 view .LVU145
 582 016a 03B0     		add	sp, sp, #12
 583              	.LCFI12:
 584              		.cfi_def_cfa_offset 36
 585              		@ sp needed
 586 016c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 587              	.LVL31:
 588              	.L24:
 172:Core/Src/main.c **** 
 589              		.loc 1 172 1 view .LVU146
 590              		.align	2
 591              	.L23:
 592 0170 00000000 		.word	.LANCHOR0
 593 0174 00000000 		.word	.LANCHOR1
 594 0178 00000000 		.word	.LANCHOR2
 595              		.cfi_endproc
 596              	.LFE131:
 598              		.section	.rodata.HAL_I2C_MemRxCpltCallback.str1.4,"aMS",%progbits,1
 599              		.align	2
 600              	.LC0:
 601 0000 526F6C6C 		.ascii	"Roll_Input: %.2f\012\015\000"
 601      5F496E70 
 601      75743A20 
 601      252E3266 
 601      0A0D00
 602 0013 00       		.align	2
 603              	.LC1:
 604 0014 50697463 		.ascii	"Pitch_Input: %.2f\012\015\000"
 604      685F496E 
 604      7075743A 
 604      20252E32 
 604      660A0D00 
 605              		.section	.text.HAL_I2C_MemRxCpltCallback,"ax",%progbits
 606              		.align	1
 607              		.global	HAL_I2C_MemRxCpltCallback
 608              		.syntax unified
 609              		.thumb
 610              		.thumb_func
 612              	HAL_I2C_MemRxCpltCallback:
 613              	.LVL32:
 614              	.LFB132:
ARM GAS  /tmp/ccFuSgnh.s 			page 24


 175:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
 615              		.loc 1 175 1 is_stmt 1 view -0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 177:Core/Src/main.c ****   if(hi2c->Instance == I2C1)
 619              		.loc 1 177 3 view .LVU148
 178:Core/Src/main.c ****   {
 620              		.loc 1 178 3 view .LVU149
 178:Core/Src/main.c ****   {
 621              		.loc 1 178 10 is_stmt 0 view .LVU150
 622 0000 0268     		ldr	r2, [r0]
 178:Core/Src/main.c ****   {
 623              		.loc 1 178 5 view .LVU151
 624 0002 134B     		ldr	r3, .L32
 625 0004 9A42     		cmp	r2, r3
 626 0006 00D0     		beq	.L31
 627 0008 7047     		bx	lr
 628              	.L31:
 175:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
 629              		.loc 1 175 1 view .LVU152
 630 000a 70B5     		push	{r4, r5, r6, lr}
 631              	.LCFI13:
 632              		.cfi_def_cfa_offset 16
 633              		.cfi_offset 4, -16
 634              		.cfi_offset 5, -12
 635              		.cfi_offset 6, -8
 636              		.cfi_offset 14, -4
 637              	.LBB9:
 180:Core/Src/main.c ****     sprintf(Roll,"Roll_Input: %.2f\n\r",KalmanY);
 638              		.loc 1 180 5 is_stmt 1 view .LVU153
 639 000c 1148     		ldr	r0, .L32+4
 640              	.LVL33:
 180:Core/Src/main.c ****     sprintf(Roll,"Roll_Input: %.2f\n\r",KalmanY);
 641              		.loc 1 180 5 is_stmt 0 view .LVU154
 642 000e FFF7FEFF 		bl	MPU6050_Calculate
 643              	.LVL34:
 181:Core/Src/main.c ****     sprintf(Pitch,"Pitch_Input: %.2f\n\r",KalmanX);
 644              		.loc 1 181 5 is_stmt 1 view .LVU155
 645 0012 114E     		ldr	r6, .L32+8
 646 0014 114B     		ldr	r3, .L32+12
 647 0016 D3E90023 		ldrd	r2, [r3]
 648 001a 1149     		ldr	r1, .L32+16
 649 001c 3046     		mov	r0, r6
 650 001e FFF7FEFF 		bl	sprintf
 651              	.LVL35:
 182:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, Roll, sizeof(Roll),100);
 652              		.loc 1 182 5 view .LVU156
 653 0022 104D     		ldr	r5, .L32+20
 654 0024 104B     		ldr	r3, .L32+24
 655 0026 D3E90023 		ldrd	r2, [r3]
 656 002a 1049     		ldr	r1, .L32+28
 657 002c 2846     		mov	r0, r5
 658 002e FFF7FEFF 		bl	sprintf
 659              	.LVL36:
 183:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, Pitch, sizeof(Pitch),100);
 660              		.loc 1 183 5 view .LVU157
ARM GAS  /tmp/ccFuSgnh.s 			page 25


 661 0032 0F4C     		ldr	r4, .L32+32
 662 0034 6423     		movs	r3, #100
 663 0036 1E22     		movs	r2, #30
 664 0038 3146     		mov	r1, r6
 665 003a 2046     		mov	r0, r4
 666 003c FFF7FEFF 		bl	HAL_UART_Transmit
 667              	.LVL37:
 184:Core/Src/main.c ****   }
 668              		.loc 1 184 5 view .LVU158
 669 0040 6423     		movs	r3, #100
 670 0042 1E22     		movs	r2, #30
 671 0044 2946     		mov	r1, r5
 672 0046 2046     		mov	r0, r4
 673 0048 FFF7FEFF 		bl	HAL_UART_Transmit
 674              	.LVL38:
 675              	.LBE9:
 187:Core/Src/main.c **** 
 676              		.loc 1 187 1 is_stmt 0 view .LVU159
 677 004c 70BD     		pop	{r4, r5, r6, pc}
 678              	.L33:
 679 004e 00BF     		.align	2
 680              	.L32:
 681 0050 00540040 		.word	1073763328
 682 0054 00000000 		.word	.LANCHOR3
 683 0058 00000000 		.word	.LANCHOR5
 684 005c 00000000 		.word	.LANCHOR4
 685 0060 00000000 		.word	.LC0
 686 0064 00000000 		.word	.LANCHOR7
 687 0068 00000000 		.word	.LANCHOR6
 688 006c 14000000 		.word	.LC1
 689 0070 00000000 		.word	.LANCHOR8
 690              		.cfi_endproc
 691              	.LFE132:
 693              		.section	.text.Error_Handler,"ax",%progbits
 694              		.align	1
 695              		.global	Error_Handler
 696              		.syntax unified
 697              		.thumb
 698              		.thumb_func
 700              	Error_Handler:
 701              	.LFB142:
 578:Core/Src/main.c **** 
 579:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 580:Core/Src/main.c **** 
 581:Core/Src/main.c **** /* USER CODE END 4 */
 582:Core/Src/main.c **** 
 583:Core/Src/main.c **** /**
 584:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 585:Core/Src/main.c ****   * @retval None
 586:Core/Src/main.c ****   */
 587:Core/Src/main.c **** void Error_Handler(void)
 588:Core/Src/main.c **** {
 702              		.loc 1 588 1 is_stmt 1 view -0
 703              		.cfi_startproc
 704              		@ Volatile: function does not return.
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccFuSgnh.s 			page 26


 707              		@ link register save eliminated.
 589:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 590:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 591:Core/Src/main.c ****   __disable_irq();
 708              		.loc 1 591 3 view .LVU161
 709              	.LBB10:
 710              	.LBI10:
 711              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
ARM GAS  /tmp/ccFuSgnh.s 			page 27


  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
ARM GAS  /tmp/ccFuSgnh.s 			page 28


 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 712              		.loc 2 140 27 view .LVU162
 713              	.LBB11:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 714              		.loc 2 142 3 view .LVU163
 715              		.syntax unified
 716              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 717 0000 72B6     		cpsid i
 718              	@ 0 "" 2
 719              		.thumb
 720              		.syntax unified
 721              	.L35:
 722              	.LBE11:
 723              	.LBE10:
 592:Core/Src/main.c ****   while (1)
 724              		.loc 1 592 3 discriminator 1 view .LVU164
 593:Core/Src/main.c ****   {
 594:Core/Src/main.c ****   }
 725              		.loc 1 594 3 discriminator 1 view .LVU165
 592:Core/Src/main.c ****   while (1)
 726              		.loc 1 592 9 discriminator 1 view .LVU166
 727 0002 FEE7     		b	.L35
 728              		.cfi_endproc
ARM GAS  /tmp/ccFuSgnh.s 			page 29


 729              	.LFE142:
 731              		.section	.text.MX_I2C1_Init,"ax",%progbits
 732              		.align	1
 733              		.syntax unified
 734              		.thumb
 735              		.thumb_func
 737              	MX_I2C1_Init:
 738              	.LFB135:
 339:Core/Src/main.c **** 
 739              		.loc 1 339 1 view -0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743 0000 08B5     		push	{r3, lr}
 744              	.LCFI14:
 745              		.cfi_def_cfa_offset 8
 746              		.cfi_offset 3, -8
 747              		.cfi_offset 14, -4
 348:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 748              		.loc 1 348 3 view .LVU168
 348:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 749              		.loc 1 348 18 is_stmt 0 view .LVU169
 750 0002 0A48     		ldr	r0, .L40
 751 0004 0A4B     		ldr	r3, .L40+4
 752 0006 0360     		str	r3, [r0]
 349:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 753              		.loc 1 349 3 is_stmt 1 view .LVU170
 349:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 754              		.loc 1 349 25 is_stmt 0 view .LVU171
 755 0008 0A4B     		ldr	r3, .L40+8
 756 000a 4360     		str	r3, [r0, #4]
 350:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 757              		.loc 1 350 3 is_stmt 1 view .LVU172
 350:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 758              		.loc 1 350 24 is_stmt 0 view .LVU173
 759 000c 0023     		movs	r3, #0
 760 000e 8360     		str	r3, [r0, #8]
 351:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 761              		.loc 1 351 3 is_stmt 1 view .LVU174
 351:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 762              		.loc 1 351 26 is_stmt 0 view .LVU175
 763 0010 C360     		str	r3, [r0, #12]
 352:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 764              		.loc 1 352 3 is_stmt 1 view .LVU176
 352:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 765              		.loc 1 352 29 is_stmt 0 view .LVU177
 766 0012 4FF48042 		mov	r2, #16384
 767 0016 0261     		str	r2, [r0, #16]
 353:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 768              		.loc 1 353 3 is_stmt 1 view .LVU178
 353:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 769              		.loc 1 353 30 is_stmt 0 view .LVU179
 770 0018 4361     		str	r3, [r0, #20]
 354:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 771              		.loc 1 354 3 is_stmt 1 view .LVU180
 354:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 772              		.loc 1 354 26 is_stmt 0 view .LVU181
ARM GAS  /tmp/ccFuSgnh.s 			page 30


 773 001a 8361     		str	r3, [r0, #24]
 355:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 774              		.loc 1 355 3 is_stmt 1 view .LVU182
 355:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 775              		.loc 1 355 30 is_stmt 0 view .LVU183
 776 001c C361     		str	r3, [r0, #28]
 356:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 777              		.loc 1 356 3 is_stmt 1 view .LVU184
 356:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 778              		.loc 1 356 28 is_stmt 0 view .LVU185
 779 001e 0362     		str	r3, [r0, #32]
 357:Core/Src/main.c ****   {
 780              		.loc 1 357 3 is_stmt 1 view .LVU186
 357:Core/Src/main.c ****   {
 781              		.loc 1 357 7 is_stmt 0 view .LVU187
 782 0020 FFF7FEFF 		bl	HAL_I2C_Init
 783              	.LVL39:
 357:Core/Src/main.c ****   {
 784              		.loc 1 357 6 view .LVU188
 785 0024 00B9     		cbnz	r0, .L39
 365:Core/Src/main.c **** 
 786              		.loc 1 365 1 view .LVU189
 787 0026 08BD     		pop	{r3, pc}
 788              	.L39:
 359:Core/Src/main.c ****   }
 789              		.loc 1 359 5 is_stmt 1 view .LVU190
 790 0028 FFF7FEFF 		bl	Error_Handler
 791              	.LVL40:
 792              	.L41:
 793              		.align	2
 794              	.L40:
 795 002c 00000000 		.word	.LANCHOR9
 796 0030 00540040 		.word	1073763328
 797 0034 A0860100 		.word	100000
 798              		.cfi_endproc
 799              	.LFE135:
 801              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 802              		.align	1
 803              		.syntax unified
 804              		.thumb
 805              		.thumb_func
 807              	MX_USART1_UART_Init:
 808              	.LFB138:
 477:Core/Src/main.c **** 
 809              		.loc 1 477 1 view -0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813 0000 08B5     		push	{r3, lr}
 814              	.LCFI15:
 815              		.cfi_def_cfa_offset 8
 816              		.cfi_offset 3, -8
 817              		.cfi_offset 14, -4
 486:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 818              		.loc 1 486 3 view .LVU192
 486:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 819              		.loc 1 486 19 is_stmt 0 view .LVU193
ARM GAS  /tmp/ccFuSgnh.s 			page 31


 820 0002 0A48     		ldr	r0, .L46
 821 0004 0A4B     		ldr	r3, .L46+4
 822 0006 0360     		str	r3, [r0]
 487:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 823              		.loc 1 487 3 is_stmt 1 view .LVU194
 487:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 824              		.loc 1 487 24 is_stmt 0 view .LVU195
 825 0008 4FF4E133 		mov	r3, #115200
 826 000c 4360     		str	r3, [r0, #4]
 488:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 827              		.loc 1 488 3 is_stmt 1 view .LVU196
 488:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 828              		.loc 1 488 26 is_stmt 0 view .LVU197
 829 000e 0023     		movs	r3, #0
 830 0010 8360     		str	r3, [r0, #8]
 489:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 831              		.loc 1 489 3 is_stmt 1 view .LVU198
 489:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 832              		.loc 1 489 24 is_stmt 0 view .LVU199
 833 0012 C360     		str	r3, [r0, #12]
 490:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 834              		.loc 1 490 3 is_stmt 1 view .LVU200
 490:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 835              		.loc 1 490 22 is_stmt 0 view .LVU201
 836 0014 0361     		str	r3, [r0, #16]
 491:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 837              		.loc 1 491 3 is_stmt 1 view .LVU202
 491:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 838              		.loc 1 491 20 is_stmt 0 view .LVU203
 839 0016 0C22     		movs	r2, #12
 840 0018 4261     		str	r2, [r0, #20]
 492:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 841              		.loc 1 492 3 is_stmt 1 view .LVU204
 492:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 842              		.loc 1 492 25 is_stmt 0 view .LVU205
 843 001a 8361     		str	r3, [r0, #24]
 493:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 844              		.loc 1 493 3 is_stmt 1 view .LVU206
 493:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 845              		.loc 1 493 28 is_stmt 0 view .LVU207
 846 001c C361     		str	r3, [r0, #28]
 494:Core/Src/main.c ****   {
 847              		.loc 1 494 3 is_stmt 1 view .LVU208
 494:Core/Src/main.c ****   {
 848              		.loc 1 494 7 is_stmt 0 view .LVU209
 849 001e FFF7FEFF 		bl	HAL_UART_Init
 850              	.LVL41:
 494:Core/Src/main.c ****   {
 851              		.loc 1 494 6 view .LVU210
 852 0022 00B9     		cbnz	r0, .L45
 502:Core/Src/main.c **** 
 853              		.loc 1 502 1 view .LVU211
 854 0024 08BD     		pop	{r3, pc}
 855              	.L45:
 496:Core/Src/main.c ****   }
 856              		.loc 1 496 5 is_stmt 1 view .LVU212
 857 0026 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccFuSgnh.s 			page 32


 858              	.LVL42:
 859              	.L47:
 860 002a 00BF     		.align	2
 861              	.L46:
 862 002c 00000000 		.word	.LANCHOR10
 863 0030 00100140 		.word	1073811456
 864              		.cfi_endproc
 865              	.LFE138:
 867              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 868              		.align	1
 869              		.syntax unified
 870              		.thumb
 871              		.thumb_func
 873              	MX_USART2_UART_Init:
 874              	.LFB139:
 510:Core/Src/main.c **** 
 875              		.loc 1 510 1 view -0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 0, uses_anonymous_args = 0
 879 0000 08B5     		push	{r3, lr}
 880              	.LCFI16:
 881              		.cfi_def_cfa_offset 8
 882              		.cfi_offset 3, -8
 883              		.cfi_offset 14, -4
 519:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 884              		.loc 1 519 3 view .LVU214
 519:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 885              		.loc 1 519 19 is_stmt 0 view .LVU215
 886 0002 0A48     		ldr	r0, .L52
 887 0004 0A4B     		ldr	r3, .L52+4
 888 0006 0360     		str	r3, [r0]
 520:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 889              		.loc 1 520 3 is_stmt 1 view .LVU216
 520:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 890              		.loc 1 520 24 is_stmt 0 view .LVU217
 891 0008 4FF4E133 		mov	r3, #115200
 892 000c 4360     		str	r3, [r0, #4]
 521:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 893              		.loc 1 521 3 is_stmt 1 view .LVU218
 521:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 894              		.loc 1 521 26 is_stmt 0 view .LVU219
 895 000e 0023     		movs	r3, #0
 896 0010 8360     		str	r3, [r0, #8]
 522:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 897              		.loc 1 522 3 is_stmt 1 view .LVU220
 522:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 898              		.loc 1 522 24 is_stmt 0 view .LVU221
 899 0012 C360     		str	r3, [r0, #12]
 523:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 900              		.loc 1 523 3 is_stmt 1 view .LVU222
 523:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 901              		.loc 1 523 22 is_stmt 0 view .LVU223
 902 0014 0361     		str	r3, [r0, #16]
 524:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 903              		.loc 1 524 3 is_stmt 1 view .LVU224
 524:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
ARM GAS  /tmp/ccFuSgnh.s 			page 33


 904              		.loc 1 524 20 is_stmt 0 view .LVU225
 905 0016 0C22     		movs	r2, #12
 906 0018 4261     		str	r2, [r0, #20]
 525:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 907              		.loc 1 525 3 is_stmt 1 view .LVU226
 525:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 908              		.loc 1 525 25 is_stmt 0 view .LVU227
 909 001a 8361     		str	r3, [r0, #24]
 526:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 910              		.loc 1 526 3 is_stmt 1 view .LVU228
 526:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 911              		.loc 1 526 28 is_stmt 0 view .LVU229
 912 001c C361     		str	r3, [r0, #28]
 527:Core/Src/main.c ****   {
 913              		.loc 1 527 3 is_stmt 1 view .LVU230
 527:Core/Src/main.c ****   {
 914              		.loc 1 527 7 is_stmt 0 view .LVU231
 915 001e FFF7FEFF 		bl	HAL_UART_Init
 916              	.LVL43:
 527:Core/Src/main.c ****   {
 917              		.loc 1 527 6 view .LVU232
 918 0022 00B9     		cbnz	r0, .L51
 535:Core/Src/main.c **** 
 919              		.loc 1 535 1 view .LVU233
 920 0024 08BD     		pop	{r3, pc}
 921              	.L51:
 529:Core/Src/main.c ****   }
 922              		.loc 1 529 5 is_stmt 1 view .LVU234
 923 0026 FFF7FEFF 		bl	Error_Handler
 924              	.LVL44:
 925              	.L53:
 926 002a 00BF     		.align	2
 927              	.L52:
 928 002c 00000000 		.word	.LANCHOR8
 929 0030 00440040 		.word	1073759232
 930              		.cfi_endproc
 931              	.LFE139:
 933              		.section	.text.MX_TIM2_Init,"ax",%progbits
 934              		.align	1
 935              		.syntax unified
 936              		.thumb
 937              		.thumb_func
 939              	MX_TIM2_Init:
 940              	.LFB136:
 373:Core/Src/main.c **** 
 941              		.loc 1 373 1 view -0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 56
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 945 0000 00B5     		push	{lr}
 946              	.LCFI17:
 947              		.cfi_def_cfa_offset 4
 948              		.cfi_offset 14, -4
 949 0002 8FB0     		sub	sp, sp, #60
 950              	.LCFI18:
 951              		.cfi_def_cfa_offset 64
 379:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
ARM GAS  /tmp/ccFuSgnh.s 			page 34


 952              		.loc 1 379 3 view .LVU236
 379:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 953              		.loc 1 379 26 is_stmt 0 view .LVU237
 954 0004 0023     		movs	r3, #0
 955 0006 0A93     		str	r3, [sp, #40]
 956 0008 0B93     		str	r3, [sp, #44]
 957 000a 0C93     		str	r3, [sp, #48]
 958 000c 0D93     		str	r3, [sp, #52]
 380:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 959              		.loc 1 380 3 is_stmt 1 view .LVU238
 380:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 960              		.loc 1 380 27 is_stmt 0 view .LVU239
 961 000e 0893     		str	r3, [sp, #32]
 962 0010 0993     		str	r3, [sp, #36]
 381:Core/Src/main.c **** 
 963              		.loc 1 381 3 is_stmt 1 view .LVU240
 381:Core/Src/main.c **** 
 964              		.loc 1 381 22 is_stmt 0 view .LVU241
 965 0012 0193     		str	r3, [sp, #4]
 966 0014 0293     		str	r3, [sp, #8]
 967 0016 0393     		str	r3, [sp, #12]
 968 0018 0493     		str	r3, [sp, #16]
 969 001a 0593     		str	r3, [sp, #20]
 970 001c 0693     		str	r3, [sp, #24]
 971 001e 0793     		str	r3, [sp, #28]
 386:Core/Src/main.c ****   htim2.Init.Prescaler = 90-1;
 972              		.loc 1 386 3 is_stmt 1 view .LVU242
 386:Core/Src/main.c ****   htim2.Init.Prescaler = 90-1;
 973              		.loc 1 386 18 is_stmt 0 view .LVU243
 974 0020 1F48     		ldr	r0, .L66
 975 0022 4FF08042 		mov	r2, #1073741824
 976 0026 0260     		str	r2, [r0]
 387:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 977              		.loc 1 387 3 is_stmt 1 view .LVU244
 387:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 978              		.loc 1 387 24 is_stmt 0 view .LVU245
 979 0028 5922     		movs	r2, #89
 980 002a 4260     		str	r2, [r0, #4]
 388:Core/Src/main.c ****   htim2.Init.Period = 20000-1;
 981              		.loc 1 388 3 is_stmt 1 view .LVU246
 388:Core/Src/main.c ****   htim2.Init.Period = 20000-1;
 982              		.loc 1 388 26 is_stmt 0 view .LVU247
 983 002c 8360     		str	r3, [r0, #8]
 389:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 984              		.loc 1 389 3 is_stmt 1 view .LVU248
 389:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 985              		.loc 1 389 21 is_stmt 0 view .LVU249
 986 002e 44F61F62 		movw	r2, #19999
 987 0032 C260     		str	r2, [r0, #12]
 390:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 988              		.loc 1 390 3 is_stmt 1 view .LVU250
 390:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 989              		.loc 1 390 28 is_stmt 0 view .LVU251
 990 0034 0361     		str	r3, [r0, #16]
 391:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 991              		.loc 1 391 3 is_stmt 1 view .LVU252
 391:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
ARM GAS  /tmp/ccFuSgnh.s 			page 35


 992              		.loc 1 391 32 is_stmt 0 view .LVU253
 993 0036 8361     		str	r3, [r0, #24]
 392:Core/Src/main.c ****   {
 994              		.loc 1 392 3 is_stmt 1 view .LVU254
 392:Core/Src/main.c ****   {
 995              		.loc 1 392 7 is_stmt 0 view .LVU255
 996 0038 FFF7FEFF 		bl	HAL_TIM_Base_Init
 997              	.LVL45:
 392:Core/Src/main.c ****   {
 998              		.loc 1 392 6 view .LVU256
 999 003c 28BB     		cbnz	r0, .L61
 396:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1000              		.loc 1 396 3 is_stmt 1 view .LVU257
 396:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1001              		.loc 1 396 34 is_stmt 0 view .LVU258
 1002 003e 4FF48053 		mov	r3, #4096
 1003 0042 0A93     		str	r3, [sp, #40]
 397:Core/Src/main.c ****   {
 1004              		.loc 1 397 3 is_stmt 1 view .LVU259
 397:Core/Src/main.c ****   {
 1005              		.loc 1 397 7 is_stmt 0 view .LVU260
 1006 0044 0AA9     		add	r1, sp, #40
 1007 0046 1648     		ldr	r0, .L66
 1008 0048 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1009              	.LVL46:
 397:Core/Src/main.c ****   {
 1010              		.loc 1 397 6 view .LVU261
 1011 004c F8B9     		cbnz	r0, .L62
 401:Core/Src/main.c ****   {
 1012              		.loc 1 401 3 is_stmt 1 view .LVU262
 401:Core/Src/main.c ****   {
 1013              		.loc 1 401 7 is_stmt 0 view .LVU263
 1014 004e 1448     		ldr	r0, .L66
 1015 0050 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1016              	.LVL47:
 401:Core/Src/main.c ****   {
 1017              		.loc 1 401 6 view .LVU264
 1018 0054 E8B9     		cbnz	r0, .L63
 405:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1019              		.loc 1 405 3 is_stmt 1 view .LVU265
 405:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1020              		.loc 1 405 37 is_stmt 0 view .LVU266
 1021 0056 0023     		movs	r3, #0
 1022 0058 0893     		str	r3, [sp, #32]
 406:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1023              		.loc 1 406 3 is_stmt 1 view .LVU267
 406:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1024              		.loc 1 406 33 is_stmt 0 view .LVU268
 1025 005a 0993     		str	r3, [sp, #36]
 407:Core/Src/main.c ****   {
 1026              		.loc 1 407 3 is_stmt 1 view .LVU269
 407:Core/Src/main.c ****   {
 1027              		.loc 1 407 7 is_stmt 0 view .LVU270
 1028 005c 08A9     		add	r1, sp, #32
 1029 005e 1048     		ldr	r0, .L66
 1030 0060 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1031              	.LVL48:
ARM GAS  /tmp/ccFuSgnh.s 			page 36


 407:Core/Src/main.c ****   {
 1032              		.loc 1 407 6 view .LVU271
 1033 0064 B8B9     		cbnz	r0, .L64
 411:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1034              		.loc 1 411 3 is_stmt 1 view .LVU272
 411:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1035              		.loc 1 411 20 is_stmt 0 view .LVU273
 1036 0066 6023     		movs	r3, #96
 1037 0068 0193     		str	r3, [sp, #4]
 412:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1038              		.loc 1 412 3 is_stmt 1 view .LVU274
 412:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1039              		.loc 1 412 19 is_stmt 0 view .LVU275
 1040 006a 0023     		movs	r3, #0
 1041 006c 0293     		str	r3, [sp, #8]
 413:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1042              		.loc 1 413 3 is_stmt 1 view .LVU276
 413:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1043              		.loc 1 413 24 is_stmt 0 view .LVU277
 1044 006e 0393     		str	r3, [sp, #12]
 414:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 1045              		.loc 1 414 3 is_stmt 1 view .LVU278
 414:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 1046              		.loc 1 414 24 is_stmt 0 view .LVU279
 1047 0070 0593     		str	r3, [sp, #20]
 415:Core/Src/main.c ****   {
 1048              		.loc 1 415 3 is_stmt 1 view .LVU280
 415:Core/Src/main.c ****   {
 1049              		.loc 1 415 7 is_stmt 0 view .LVU281
 1050 0072 0822     		movs	r2, #8
 1051 0074 01A9     		add	r1, sp, #4
 1052 0076 0A48     		ldr	r0, .L66
 1053 0078 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1054              	.LVL49:
 415:Core/Src/main.c ****   {
 1055              		.loc 1 415 6 view .LVU282
 1056 007c 68B9     		cbnz	r0, .L65
 422:Core/Src/main.c **** 
 1057              		.loc 1 422 3 is_stmt 1 view .LVU283
 1058 007e 0848     		ldr	r0, .L66
 1059 0080 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1060              	.LVL50:
 424:Core/Src/main.c **** 
 1061              		.loc 1 424 1 is_stmt 0 view .LVU284
 1062 0084 0FB0     		add	sp, sp, #60
 1063              	.LCFI19:
 1064              		.cfi_remember_state
 1065              		.cfi_def_cfa_offset 4
 1066              		@ sp needed
 1067 0086 5DF804FB 		ldr	pc, [sp], #4
 1068              	.L61:
 1069              	.LCFI20:
 1070              		.cfi_restore_state
 394:Core/Src/main.c ****   }
 1071              		.loc 1 394 5 is_stmt 1 view .LVU285
 1072 008a FFF7FEFF 		bl	Error_Handler
 1073              	.LVL51:
ARM GAS  /tmp/ccFuSgnh.s 			page 37


 1074              	.L62:
 399:Core/Src/main.c ****   }
 1075              		.loc 1 399 5 view .LVU286
 1076 008e FFF7FEFF 		bl	Error_Handler
 1077              	.LVL52:
 1078              	.L63:
 403:Core/Src/main.c ****   }
 1079              		.loc 1 403 5 view .LVU287
 1080 0092 FFF7FEFF 		bl	Error_Handler
 1081              	.LVL53:
 1082              	.L64:
 409:Core/Src/main.c ****   }
 1083              		.loc 1 409 5 view .LVU288
 1084 0096 FFF7FEFF 		bl	Error_Handler
 1085              	.LVL54:
 1086              	.L65:
 417:Core/Src/main.c ****   }
 1087              		.loc 1 417 5 view .LVU289
 1088 009a FFF7FEFF 		bl	Error_Handler
 1089              	.LVL55:
 1090              	.L67:
 1091 009e 00BF     		.align	2
 1092              	.L66:
 1093 00a0 00000000 		.word	.LANCHOR1
 1094              		.cfi_endproc
 1095              	.LFE136:
 1097              		.section	.text.MX_TIM3_Init,"ax",%progbits
 1098              		.align	1
 1099              		.syntax unified
 1100              		.thumb
 1101              		.thumb_func
 1103              	MX_TIM3_Init:
 1104              	.LFB137:
 432:Core/Src/main.c **** 
 1105              		.loc 1 432 1 view -0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 24
 1108              		@ frame_needed = 0, uses_anonymous_args = 0
 1109 0000 00B5     		push	{lr}
 1110              	.LCFI21:
 1111              		.cfi_def_cfa_offset 4
 1112              		.cfi_offset 14, -4
 1113 0002 87B0     		sub	sp, sp, #28
 1114              	.LCFI22:
 1115              		.cfi_def_cfa_offset 32
 438:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1116              		.loc 1 438 3 view .LVU291
 438:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1117              		.loc 1 438 26 is_stmt 0 view .LVU292
 1118 0004 0023     		movs	r3, #0
 1119 0006 0293     		str	r3, [sp, #8]
 1120 0008 0393     		str	r3, [sp, #12]
 1121 000a 0493     		str	r3, [sp, #16]
 1122 000c 0593     		str	r3, [sp, #20]
 439:Core/Src/main.c **** 
 1123              		.loc 1 439 3 is_stmt 1 view .LVU293
 439:Core/Src/main.c **** 
ARM GAS  /tmp/ccFuSgnh.s 			page 38


 1124              		.loc 1 439 27 is_stmt 0 view .LVU294
 1125 000e 0093     		str	r3, [sp]
 1126 0010 0193     		str	r3, [sp, #4]
 444:Core/Src/main.c ****   htim3.Init.Prescaler = 90-1;
 1127              		.loc 1 444 3 is_stmt 1 view .LVU295
 444:Core/Src/main.c ****   htim3.Init.Prescaler = 90-1;
 1128              		.loc 1 444 18 is_stmt 0 view .LVU296
 1129 0012 1348     		ldr	r0, .L76
 1130 0014 134A     		ldr	r2, .L76+4
 1131 0016 0260     		str	r2, [r0]
 445:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1132              		.loc 1 445 3 is_stmt 1 view .LVU297
 445:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1133              		.loc 1 445 24 is_stmt 0 view .LVU298
 1134 0018 5922     		movs	r2, #89
 1135 001a 4260     		str	r2, [r0, #4]
 446:Core/Src/main.c ****   htim3.Init.Period = 20000-1;
 1136              		.loc 1 446 3 is_stmt 1 view .LVU299
 446:Core/Src/main.c ****   htim3.Init.Period = 20000-1;
 1137              		.loc 1 446 26 is_stmt 0 view .LVU300
 1138 001c 8360     		str	r3, [r0, #8]
 447:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1139              		.loc 1 447 3 is_stmt 1 view .LVU301
 447:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1140              		.loc 1 447 21 is_stmt 0 view .LVU302
 1141 001e 44F61F62 		movw	r2, #19999
 1142 0022 C260     		str	r2, [r0, #12]
 448:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1143              		.loc 1 448 3 is_stmt 1 view .LVU303
 448:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1144              		.loc 1 448 28 is_stmt 0 view .LVU304
 1145 0024 0361     		str	r3, [r0, #16]
 449:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1146              		.loc 1 449 3 is_stmt 1 view .LVU305
 449:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1147              		.loc 1 449 32 is_stmt 0 view .LVU306
 1148 0026 8361     		str	r3, [r0, #24]
 450:Core/Src/main.c ****   {
 1149              		.loc 1 450 3 is_stmt 1 view .LVU307
 450:Core/Src/main.c ****   {
 1150              		.loc 1 450 7 is_stmt 0 view .LVU308
 1151 0028 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1152              	.LVL56:
 450:Core/Src/main.c ****   {
 1153              		.loc 1 450 6 view .LVU309
 1154 002c 90B9     		cbnz	r0, .L73
 454:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1155              		.loc 1 454 3 is_stmt 1 view .LVU310
 454:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1156              		.loc 1 454 34 is_stmt 0 view .LVU311
 1157 002e 4FF48053 		mov	r3, #4096
 1158 0032 0293     		str	r3, [sp, #8]
 455:Core/Src/main.c ****   {
 1159              		.loc 1 455 3 is_stmt 1 view .LVU312
 455:Core/Src/main.c ****   {
 1160              		.loc 1 455 7 is_stmt 0 view .LVU313
 1161 0034 02A9     		add	r1, sp, #8
ARM GAS  /tmp/ccFuSgnh.s 			page 39


 1162 0036 0A48     		ldr	r0, .L76
 1163 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1164              	.LVL57:
 455:Core/Src/main.c ****   {
 1165              		.loc 1 455 6 view .LVU314
 1166 003c 60B9     		cbnz	r0, .L74
 459:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1167              		.loc 1 459 3 is_stmt 1 view .LVU315
 459:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1168              		.loc 1 459 37 is_stmt 0 view .LVU316
 1169 003e 0023     		movs	r3, #0
 1170 0040 0093     		str	r3, [sp]
 460:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1171              		.loc 1 460 3 is_stmt 1 view .LVU317
 460:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1172              		.loc 1 460 33 is_stmt 0 view .LVU318
 1173 0042 0193     		str	r3, [sp, #4]
 461:Core/Src/main.c ****   {
 1174              		.loc 1 461 3 is_stmt 1 view .LVU319
 461:Core/Src/main.c ****   {
 1175              		.loc 1 461 7 is_stmt 0 view .LVU320
 1176 0044 6946     		mov	r1, sp
 1177 0046 0648     		ldr	r0, .L76
 1178 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1179              	.LVL58:
 461:Core/Src/main.c ****   {
 1180              		.loc 1 461 6 view .LVU321
 1181 004c 30B9     		cbnz	r0, .L75
 469:Core/Src/main.c **** 
 1182              		.loc 1 469 1 view .LVU322
 1183 004e 07B0     		add	sp, sp, #28
 1184              	.LCFI23:
 1185              		.cfi_remember_state
 1186              		.cfi_def_cfa_offset 4
 1187              		@ sp needed
 1188 0050 5DF804FB 		ldr	pc, [sp], #4
 1189              	.L73:
 1190              	.LCFI24:
 1191              		.cfi_restore_state
 452:Core/Src/main.c ****   }
 1192              		.loc 1 452 5 is_stmt 1 view .LVU323
 1193 0054 FFF7FEFF 		bl	Error_Handler
 1194              	.LVL59:
 1195              	.L74:
 457:Core/Src/main.c ****   }
 1196              		.loc 1 457 5 view .LVU324
 1197 0058 FFF7FEFF 		bl	Error_Handler
 1198              	.LVL60:
 1199              	.L75:
 463:Core/Src/main.c ****   }
 1200              		.loc 1 463 5 view .LVU325
 1201 005c FFF7FEFF 		bl	Error_Handler
 1202              	.LVL61:
 1203              	.L77:
 1204              		.align	2
 1205              	.L76:
 1206 0060 00000000 		.word	.LANCHOR2
ARM GAS  /tmp/ccFuSgnh.s 			page 40


 1207 0064 00040040 		.word	1073742848
 1208              		.cfi_endproc
 1209              	.LFE137:
 1211              		.section	.text.SystemClock_Config,"ax",%progbits
 1212              		.align	1
 1213              		.global	SystemClock_Config
 1214              		.syntax unified
 1215              		.thumb
 1216              		.thumb_func
 1218              	SystemClock_Config:
 1219              	.LFB134:
 285:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1220              		.loc 1 285 1 view -0
 1221              		.cfi_startproc
 1222              		@ args = 0, pretend = 0, frame = 80
 1223              		@ frame_needed = 0, uses_anonymous_args = 0
 1224 0000 00B5     		push	{lr}
 1225              	.LCFI25:
 1226              		.cfi_def_cfa_offset 4
 1227              		.cfi_offset 14, -4
 1228 0002 95B0     		sub	sp, sp, #84
 1229              	.LCFI26:
 1230              		.cfi_def_cfa_offset 88
 286:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1231              		.loc 1 286 3 view .LVU327
 286:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1232              		.loc 1 286 22 is_stmt 0 view .LVU328
 1233 0004 3422     		movs	r2, #52
 1234 0006 0021     		movs	r1, #0
 1235 0008 07A8     		add	r0, sp, #28
 1236 000a FFF7FEFF 		bl	memset
 1237              	.LVL62:
 287:Core/Src/main.c **** 
 1238              		.loc 1 287 3 is_stmt 1 view .LVU329
 287:Core/Src/main.c **** 
 1239              		.loc 1 287 22 is_stmt 0 view .LVU330
 1240 000e 0023     		movs	r3, #0
 1241 0010 0293     		str	r3, [sp, #8]
 1242 0012 0393     		str	r3, [sp, #12]
 1243 0014 0493     		str	r3, [sp, #16]
 1244 0016 0593     		str	r3, [sp, #20]
 1245 0018 0693     		str	r3, [sp, #24]
 291:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1246              		.loc 1 291 3 is_stmt 1 view .LVU331
 1247              	.LBB12:
 291:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1248              		.loc 1 291 3 view .LVU332
 1249 001a 0093     		str	r3, [sp]
 291:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1250              		.loc 1 291 3 view .LVU333
 1251 001c 234A     		ldr	r2, .L86
 1252 001e 116C     		ldr	r1, [r2, #64]
 1253 0020 41F08051 		orr	r1, r1, #268435456
 1254 0024 1164     		str	r1, [r2, #64]
 291:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1255              		.loc 1 291 3 view .LVU334
 1256 0026 126C     		ldr	r2, [r2, #64]
ARM GAS  /tmp/ccFuSgnh.s 			page 41


 1257 0028 02F08052 		and	r2, r2, #268435456
 1258 002c 0092     		str	r2, [sp]
 291:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1259              		.loc 1 291 3 view .LVU335
 1260 002e 009A     		ldr	r2, [sp]
 1261              	.LBE12:
 291:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1262              		.loc 1 291 3 view .LVU336
 292:Core/Src/main.c **** 
 1263              		.loc 1 292 3 view .LVU337
 1264              	.LBB13:
 292:Core/Src/main.c **** 
 1265              		.loc 1 292 3 view .LVU338
 1266 0030 0193     		str	r3, [sp, #4]
 292:Core/Src/main.c **** 
 1267              		.loc 1 292 3 view .LVU339
 1268 0032 1F4B     		ldr	r3, .L86+4
 1269 0034 1A68     		ldr	r2, [r3]
 1270 0036 42F44042 		orr	r2, r2, #49152
 1271 003a 1A60     		str	r2, [r3]
 292:Core/Src/main.c **** 
 1272              		.loc 1 292 3 view .LVU340
 1273 003c 1B68     		ldr	r3, [r3]
 1274 003e 03F44043 		and	r3, r3, #49152
 1275 0042 0193     		str	r3, [sp, #4]
 292:Core/Src/main.c **** 
 1276              		.loc 1 292 3 view .LVU341
 1277 0044 019B     		ldr	r3, [sp, #4]
 1278              	.LBE13:
 292:Core/Src/main.c **** 
 1279              		.loc 1 292 3 view .LVU342
 297:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1280              		.loc 1 297 3 view .LVU343
 297:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1281              		.loc 1 297 36 is_stmt 0 view .LVU344
 1282 0046 0123     		movs	r3, #1
 1283 0048 0793     		str	r3, [sp, #28]
 298:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1284              		.loc 1 298 3 is_stmt 1 view .LVU345
 298:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1285              		.loc 1 298 30 is_stmt 0 view .LVU346
 1286 004a 4FF48033 		mov	r3, #65536
 1287 004e 0893     		str	r3, [sp, #32]
 299:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1288              		.loc 1 299 3 is_stmt 1 view .LVU347
 299:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1289              		.loc 1 299 34 is_stmt 0 view .LVU348
 1290 0050 0223     		movs	r3, #2
 1291 0052 0D93     		str	r3, [sp, #52]
 300:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1292              		.loc 1 300 3 is_stmt 1 view .LVU349
 300:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1293              		.loc 1 300 35 is_stmt 0 view .LVU350
 1294 0054 4FF48002 		mov	r2, #4194304
 1295 0058 0E92     		str	r2, [sp, #56]
 301:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 180;
 1296              		.loc 1 301 3 is_stmt 1 view .LVU351
ARM GAS  /tmp/ccFuSgnh.s 			page 42


 301:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 180;
 1297              		.loc 1 301 30 is_stmt 0 view .LVU352
 1298 005a 0422     		movs	r2, #4
 1299 005c 0F92     		str	r2, [sp, #60]
 302:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1300              		.loc 1 302 3 is_stmt 1 view .LVU353
 302:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1301              		.loc 1 302 30 is_stmt 0 view .LVU354
 1302 005e B422     		movs	r2, #180
 1303 0060 1092     		str	r2, [sp, #64]
 303:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1304              		.loc 1 303 3 is_stmt 1 view .LVU355
 303:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1305              		.loc 1 303 30 is_stmt 0 view .LVU356
 1306 0062 1193     		str	r3, [sp, #68]
 304:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1307              		.loc 1 304 3 is_stmt 1 view .LVU357
 304:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1308              		.loc 1 304 30 is_stmt 0 view .LVU358
 1309 0064 1293     		str	r3, [sp, #72]
 305:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1310              		.loc 1 305 3 is_stmt 1 view .LVU359
 305:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1311              		.loc 1 305 30 is_stmt 0 view .LVU360
 1312 0066 1393     		str	r3, [sp, #76]
 306:Core/Src/main.c ****   {
 1313              		.loc 1 306 3 is_stmt 1 view .LVU361
 306:Core/Src/main.c ****   {
 1314              		.loc 1 306 7 is_stmt 0 view .LVU362
 1315 0068 07A8     		add	r0, sp, #28
 1316 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 1317              	.LVL63:
 306:Core/Src/main.c ****   {
 1318              		.loc 1 306 6 view .LVU363
 1319 006e B0B9     		cbnz	r0, .L83
 313:Core/Src/main.c ****   {
 1320              		.loc 1 313 3 is_stmt 1 view .LVU364
 313:Core/Src/main.c ****   {
 1321              		.loc 1 313 7 is_stmt 0 view .LVU365
 1322 0070 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 1323              	.LVL64:
 313:Core/Src/main.c ****   {
 1324              		.loc 1 313 6 view .LVU366
 1325 0074 A8B9     		cbnz	r0, .L84
 320:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1326              		.loc 1 320 3 is_stmt 1 view .LVU367
 320:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1327              		.loc 1 320 31 is_stmt 0 view .LVU368
 1328 0076 0F23     		movs	r3, #15
 1329 0078 0293     		str	r3, [sp, #8]
 322:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1330              		.loc 1 322 3 is_stmt 1 view .LVU369
 322:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1331              		.loc 1 322 34 is_stmt 0 view .LVU370
 1332 007a 0223     		movs	r3, #2
 1333 007c 0393     		str	r3, [sp, #12]
 323:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
ARM GAS  /tmp/ccFuSgnh.s 			page 43


 1334              		.loc 1 323 3 is_stmt 1 view .LVU371
 323:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1335              		.loc 1 323 35 is_stmt 0 view .LVU372
 1336 007e 0023     		movs	r3, #0
 1337 0080 0493     		str	r3, [sp, #16]
 324:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1338              		.loc 1 324 3 is_stmt 1 view .LVU373
 324:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1339              		.loc 1 324 36 is_stmt 0 view .LVU374
 1340 0082 4FF4A053 		mov	r3, #5120
 1341 0086 0593     		str	r3, [sp, #20]
 325:Core/Src/main.c **** 
 1342              		.loc 1 325 3 is_stmt 1 view .LVU375
 325:Core/Src/main.c **** 
 1343              		.loc 1 325 36 is_stmt 0 view .LVU376
 1344 0088 4FF48053 		mov	r3, #4096
 1345 008c 0693     		str	r3, [sp, #24]
 327:Core/Src/main.c ****   {
 1346              		.loc 1 327 3 is_stmt 1 view .LVU377
 327:Core/Src/main.c ****   {
 1347              		.loc 1 327 7 is_stmt 0 view .LVU378
 1348 008e 0521     		movs	r1, #5
 1349 0090 02A8     		add	r0, sp, #8
 1350 0092 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1351              	.LVL65:
 327:Core/Src/main.c ****   {
 1352              		.loc 1 327 6 view .LVU379
 1353 0096 30B9     		cbnz	r0, .L85
 331:Core/Src/main.c **** 
 1354              		.loc 1 331 1 view .LVU380
 1355 0098 15B0     		add	sp, sp, #84
 1356              	.LCFI27:
 1357              		.cfi_remember_state
 1358              		.cfi_def_cfa_offset 4
 1359              		@ sp needed
 1360 009a 5DF804FB 		ldr	pc, [sp], #4
 1361              	.L83:
 1362              	.LCFI28:
 1363              		.cfi_restore_state
 308:Core/Src/main.c ****   }
 1364              		.loc 1 308 5 is_stmt 1 view .LVU381
 1365 009e FFF7FEFF 		bl	Error_Handler
 1366              	.LVL66:
 1367              	.L84:
 315:Core/Src/main.c ****   }
 1368              		.loc 1 315 5 view .LVU382
 1369 00a2 FFF7FEFF 		bl	Error_Handler
 1370              	.LVL67:
 1371              	.L85:
 329:Core/Src/main.c ****   }
 1372              		.loc 1 329 5 view .LVU383
 1373 00a6 FFF7FEFF 		bl	Error_Handler
 1374              	.LVL68:
 1375              	.L87:
 1376 00aa 00BF     		.align	2
 1377              	.L86:
 1378 00ac 00380240 		.word	1073887232
ARM GAS  /tmp/ccFuSgnh.s 			page 44


 1379 00b0 00700040 		.word	1073770496
 1380              		.cfi_endproc
 1381              	.LFE134:
 1383              		.section	.text.main,"ax",%progbits
 1384              		.align	1
 1385              		.global	main
 1386              		.syntax unified
 1387              		.thumb
 1388              		.thumb_func
 1390              	main:
 1391              	.LFB133:
 196:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1392              		.loc 1 196 1 view -0
 1393              		.cfi_startproc
 1394              		@ args = 0, pretend = 0, frame = 0
 1395              		@ frame_needed = 0, uses_anonymous_args = 0
 1396 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1397              	.LCFI29:
 1398              		.cfi_def_cfa_offset 24
 1399              		.cfi_offset 4, -24
 1400              		.cfi_offset 5, -20
 1401              		.cfi_offset 6, -16
 1402              		.cfi_offset 7, -12
 1403              		.cfi_offset 8, -8
 1404              		.cfi_offset 14, -4
 1405 0004 2DED048B 		vpush.64	{d8, d9}
 1406              	.LCFI30:
 1407              		.cfi_def_cfa_offset 40
 1408              		.cfi_offset 80, -40
 1409              		.cfi_offset 81, -36
 1410              		.cfi_offset 82, -32
 1411              		.cfi_offset 83, -28
 204:Core/Src/main.c **** 
 1412              		.loc 1 204 3 view .LVU385
 1413 0008 FFF7FEFF 		bl	HAL_Init
 1414              	.LVL69:
 211:Core/Src/main.c **** 
 1415              		.loc 1 211 3 view .LVU386
 1416 000c FFF7FEFF 		bl	SystemClock_Config
 1417              	.LVL70:
 218:Core/Src/main.c ****   MX_DMA_Init();
 1418              		.loc 1 218 3 view .LVU387
 1419 0010 FFF7FEFF 		bl	MX_GPIO_Init
 1420              	.LVL71:
 219:Core/Src/main.c ****   MX_I2C1_Init();
 1421              		.loc 1 219 3 view .LVU388
 1422 0014 FFF7FEFF 		bl	MX_DMA_Init
 1423              	.LVL72:
 220:Core/Src/main.c ****   MX_USART1_UART_Init();
 1424              		.loc 1 220 3 view .LVU389
 1425 0018 FFF7FEFF 		bl	MX_I2C1_Init
 1426              	.LVL73:
 221:Core/Src/main.c ****   MX_USART2_UART_Init();
 1427              		.loc 1 221 3 view .LVU390
 1428 001c FFF7FEFF 		bl	MX_USART1_UART_Init
 1429              	.LVL74:
 222:Core/Src/main.c ****   MX_TIM2_Init();
ARM GAS  /tmp/ccFuSgnh.s 			page 45


 1430              		.loc 1 222 3 view .LVU391
 1431 0020 FFF7FEFF 		bl	MX_USART2_UART_Init
 1432              	.LVL75:
 223:Core/Src/main.c ****   MX_TIM3_Init();
 1433              		.loc 1 223 3 view .LVU392
 1434 0024 FFF7FEFF 		bl	MX_TIM2_Init
 1435              	.LVL76:
 224:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1436              		.loc 1 224 3 view .LVU393
 1437 0028 FFF7FEFF 		bl	MX_TIM3_Init
 1438              	.LVL77:
 226:Core/Src/main.c ****   BMP180_Init(&hi2c1);
 1439              		.loc 1 226 3 view .LVU394
 1440 002c FFF7FEFF 		bl	MPU6050_Init
 1441              	.LVL78:
 227:Core/Src/main.c **** 	BMP180_SetOversampling(BMP180_ULTRA);
 1442              		.loc 1 227 3 view .LVU395
 1443 0030 4E48     		ldr	r0, .L93
 1444 0032 FFF7FEFF 		bl	BMP180_Init
 1445              	.LVL79:
 228:Core/Src/main.c ****   BMP180_UpdateCalibrationData();
 1446              		.loc 1 228 2 view .LVU396
 1447 0036 0320     		movs	r0, #3
 1448 0038 FFF7FEFF 		bl	BMP180_SetOversampling
 1449              	.LVL80:
 229:Core/Src/main.c ****   
 1450              		.loc 1 229 3 view .LVU397
 1451 003c FFF7FEFF 		bl	BMP180_UpdateCalibrationData
 1452              	.LVL81:
 231:Core/Src/main.c ****   {
 1453              		.loc 1 231 3 view .LVU398
 1454              	.LBB14:
 231:Core/Src/main.c ****   {
 1455              		.loc 1 231 7 view .LVU399
 231:Core/Src/main.c ****   {
 1456              		.loc 1 231 11 is_stmt 0 view .LVU400
 1457 0040 0025     		movs	r5, #0
 231:Core/Src/main.c ****   {
 1458              		.loc 1 231 3 view .LVU401
 1459 0042 1FE0     		b	.L89
 1460              	.LVL82:
 1461              	.L90:
 233:Core/Src/main.c ****       IMU.Gx_Callib+=IMU.Gx;
 1462              		.loc 1 233 7 is_stmt 1 discriminator 3 view .LVU402
 1463 0044 4A4C     		ldr	r4, .L93+4
 1464 0046 2046     		mov	r0, r4
 1465 0048 FFF7FEFF 		bl	MPU6050_Read
 1466              	.LVL83:
 234:Core/Src/main.c ****       IMU.Gy_Callib+=IMU.Gy;
 1467              		.loc 1 234 7 discriminator 3 view .LVU403
 234:Core/Src/main.c ****       IMU.Gy_Callib+=IMU.Gy;
 1468              		.loc 1 234 25 is_stmt 0 discriminator 3 view .LVU404
 1469 004c 94ED007A 		vldr.32	s14, [r4]
 234:Core/Src/main.c ****       IMU.Gy_Callib+=IMU.Gy;
 1470              		.loc 1 234 20 discriminator 3 view .LVU405
 1471 0050 D4ED037A 		vldr.32	s15, [r4, #12]
 1472 0054 77EE877A 		vadd.f32	s15, s15, s14
ARM GAS  /tmp/ccFuSgnh.s 			page 46


 1473 0058 C4ED037A 		vstr.32	s15, [r4, #12]
 235:Core/Src/main.c ****       IMU.Gz_Callib+=IMU.Gz;
 1474              		.loc 1 235 7 is_stmt 1 discriminator 3 view .LVU406
 235:Core/Src/main.c ****       IMU.Gz_Callib+=IMU.Gz;
 1475              		.loc 1 235 25 is_stmt 0 discriminator 3 view .LVU407
 1476 005c 94ED017A 		vldr.32	s14, [r4, #4]
 235:Core/Src/main.c ****       IMU.Gz_Callib+=IMU.Gz;
 1477              		.loc 1 235 20 discriminator 3 view .LVU408
 1478 0060 D4ED047A 		vldr.32	s15, [r4, #16]
 1479 0064 77EE877A 		vadd.f32	s15, s15, s14
 1480 0068 C4ED047A 		vstr.32	s15, [r4, #16]
 236:Core/Src/main.c ****       HAL_Delay(1);
 1481              		.loc 1 236 7 is_stmt 1 discriminator 3 view .LVU409
 236:Core/Src/main.c ****       HAL_Delay(1);
 1482              		.loc 1 236 25 is_stmt 0 discriminator 3 view .LVU410
 1483 006c 94ED027A 		vldr.32	s14, [r4, #8]
 236:Core/Src/main.c ****       HAL_Delay(1);
 1484              		.loc 1 236 20 discriminator 3 view .LVU411
 1485 0070 D4ED057A 		vldr.32	s15, [r4, #20]
 1486 0074 77EE877A 		vadd.f32	s15, s15, s14
 1487 0078 C4ED057A 		vstr.32	s15, [r4, #20]
 237:Core/Src/main.c ****   }
 1488              		.loc 1 237 7 is_stmt 1 discriminator 3 view .LVU412
 1489 007c 0120     		movs	r0, #1
 1490 007e FFF7FEFF 		bl	HAL_Delay
 1491              	.LVL84:
 231:Core/Src/main.c ****   {
 1492              		.loc 1 231 36 discriminator 3 view .LVU413
 231:Core/Src/main.c ****   {
 1493              		.loc 1 231 42 is_stmt 0 discriminator 3 view .LVU414
 1494 0082 0135     		adds	r5, r5, #1
 1495              	.LVL85:
 1496              	.L89:
 231:Core/Src/main.c ****   {
 1497              		.loc 1 231 21 is_stmt 1 discriminator 1 view .LVU415
 231:Core/Src/main.c ****   {
 1498              		.loc 1 231 3 is_stmt 0 discriminator 1 view .LVU416
 1499 0084 B5F5FA6F 		cmp	r5, #2000
 1500 0088 DCDB     		blt	.L90
 1501              	.LBE14:
 240:Core/Src/main.c ****   IMU.Gy_Callib/=2000;
 1502              		.loc 1 240 3 is_stmt 1 view .LVU417
 240:Core/Src/main.c ****   IMU.Gy_Callib/=2000;
 1503              		.loc 1 240 16 is_stmt 0 view .LVU418
 1504 008a 394B     		ldr	r3, .L93+4
 1505 008c D3ED036A 		vldr.32	s13, [r3, #12]
 1506 0090 DFED387A 		vldr.32	s15, .L93+8
 1507 0094 86EEA77A 		vdiv.f32	s14, s13, s15
 1508 0098 83ED037A 		vstr.32	s14, [r3, #12]
 241:Core/Src/main.c ****   IMU.Gz_Callib/=2000;
 1509              		.loc 1 241 3 is_stmt 1 view .LVU419
 241:Core/Src/main.c ****   IMU.Gz_Callib/=2000;
 1510              		.loc 1 241 16 is_stmt 0 view .LVU420
 1511 009c D3ED046A 		vldr.32	s13, [r3, #16]
 1512 00a0 86EEA77A 		vdiv.f32	s14, s13, s15
 1513 00a4 83ED047A 		vstr.32	s14, [r3, #16]
 242:Core/Src/main.c **** 
ARM GAS  /tmp/ccFuSgnh.s 			page 47


 1514              		.loc 1 242 3 is_stmt 1 view .LVU421
 242:Core/Src/main.c **** 
 1515              		.loc 1 242 16 is_stmt 0 view .LVU422
 1516 00a8 D3ED056A 		vldr.32	s13, [r3, #20]
 1517 00ac 86EEA77A 		vdiv.f32	s14, s13, s15
 1518 00b0 83ED057A 		vstr.32	s14, [r3, #20]
 1519              	.LVL86:
 1520              	.L91:
 249:Core/Src/main.c ****   {
 1521              		.loc 1 249 3 is_stmt 1 discriminator 1 view .LVU423
 1522              	.LBB15:
 251:Core/Src/main.c ****     float dt =(float)(current_time - last_time) / 1.0;
 1523              		.loc 1 251 5 discriminator 1 view .LVU424
 251:Core/Src/main.c ****     float dt =(float)(current_time - last_time) / 1.0;
 1524              		.loc 1 251 29 is_stmt 0 discriminator 1 view .LVU425
 1525 00b4 FFF7FEFF 		bl	HAL_GetTick
 1526              	.LVL87:
 1527 00b8 0546     		mov	r5, r0
 1528              	.LVL88:
 252:Core/Src/main.c ****     MPU6050_Read(&IMU);
 1529              		.loc 1 252 5 is_stmt 1 discriminator 1 view .LVU426
 252:Core/Src/main.c ****     MPU6050_Read(&IMU);
 1530              		.loc 1 252 36 is_stmt 0 discriminator 1 view .LVU427
 1531 00ba 2F4E     		ldr	r6, .L93+12
 1532 00bc 3368     		ldr	r3, [r6]
 1533 00be C31A     		subs	r3, r0, r3
 252:Core/Src/main.c ****     MPU6050_Read(&IMU);
 1534              		.loc 1 252 11 discriminator 1 view .LVU428
 1535 00c0 07EE903A 		vmov	s15, r3	@ int
 1536 00c4 B8EE678A 		vcvt.f32.u32	s16, s15
 1537              	.LVL89:
 253:Core/Src/main.c ****     IMU.Gx -= IMU.Gx_Callib;
 1538              		.loc 1 253 5 is_stmt 1 discriminator 1 view .LVU429
 1539 00c8 294C     		ldr	r4, .L93+4
 1540 00ca 2046     		mov	r0, r4
 1541              	.LVL90:
 253:Core/Src/main.c ****     IMU.Gx -= IMU.Gx_Callib;
 1542              		.loc 1 253 5 is_stmt 0 discriminator 1 view .LVU430
 1543 00cc FFF7FEFF 		bl	MPU6050_Read
 1544              	.LVL91:
 254:Core/Src/main.c ****     IMU.Gy -= IMU.Gy_Callib;
 1545              		.loc 1 254 5 is_stmt 1 discriminator 1 view .LVU431
 254:Core/Src/main.c ****     IMU.Gy -= IMU.Gy_Callib;
 1546              		.loc 1 254 18 is_stmt 0 discriminator 1 view .LVU432
 1547 00d0 D4ED037A 		vldr.32	s15, [r4, #12]
 254:Core/Src/main.c ****     IMU.Gy -= IMU.Gy_Callib;
 1548              		.loc 1 254 12 discriminator 1 view .LVU433
 1549 00d4 D4ED008A 		vldr.32	s17, [r4]
 1550 00d8 78EEE78A 		vsub.f32	s17, s17, s15
 1551 00dc C4ED008A 		vstr.32	s17, [r4]
 255:Core/Src/main.c ****     IMU.Gz -= IMU.Gz_Callib;
 1552              		.loc 1 255 5 is_stmt 1 discriminator 1 view .LVU434
 255:Core/Src/main.c ****     IMU.Gz -= IMU.Gz_Callib;
 1553              		.loc 1 255 18 is_stmt 0 discriminator 1 view .LVU435
 1554 00e0 94ED047A 		vldr.32	s14, [r4, #16]
 255:Core/Src/main.c ****     IMU.Gz -= IMU.Gz_Callib;
 1555              		.loc 1 255 12 discriminator 1 view .LVU436
ARM GAS  /tmp/ccFuSgnh.s 			page 48


 1556 00e4 D4ED017A 		vldr.32	s15, [r4, #4]
 1557 00e8 77EEC77A 		vsub.f32	s15, s15, s14
 1558 00ec C4ED017A 		vstr.32	s15, [r4, #4]
 256:Core/Src/main.c ****     /* USER CODE END WHILE */
 1559              		.loc 1 256 5 is_stmt 1 discriminator 1 view .LVU437
 256:Core/Src/main.c ****     /* USER CODE END WHILE */
 1560              		.loc 1 256 18 is_stmt 0 discriminator 1 view .LVU438
 1561 00f0 94ED057A 		vldr.32	s14, [r4, #20]
 256:Core/Src/main.c ****     /* USER CODE END WHILE */
 1562              		.loc 1 256 12 discriminator 1 view .LVU439
 1563 00f4 D4ED027A 		vldr.32	s15, [r4, #8]
 1564 00f8 77EEC77A 		vsub.f32	s15, s15, s14
 1565 00fc C4ED027A 		vstr.32	s15, [r4, #8]
 260:Core/Src/main.c ****     KalmanX = Kalman_Filter(&Kalman, IMU.Gy, IMU.Pitch, dt);
 1566              		.loc 1 260 5 is_stmt 1 discriminator 1 view .LVU440
 260:Core/Src/main.c ****     KalmanX = Kalman_Filter(&Kalman, IMU.Gy, IMU.Pitch, dt);
 1567              		.loc 1 260 16 is_stmt 0 discriminator 1 view .LVU441
 1568 0100 206B     		ldr	r0, [r4, #48]	@ float
 1569 0102 FFF7FEFF 		bl	__aeabi_f2d
 1570              	.LVL92:
 1571 0106 41EC190B 		vmov	d9, r0, r1
 1572 010a 18EE900A 		vmov	r0, s17
 1573 010e FFF7FEFF 		bl	__aeabi_f2d
 1574              	.LVL93:
 1575 0112 1A4F     		ldr	r7, .L93+16
 1576 0114 B0EE482A 		vmov.f32	s4, s16
 1577 0118 B0EE491A 		vmov.f32	s2, s18
 1578 011c F0EE691A 		vmov.f32	s3, s19
 1579 0120 41EC100B 		vmov	d0, r0, r1
 1580 0124 3846     		mov	r0, r7
 1581 0126 FFF7FEFF 		bl	Kalman_Filter
 1582              	.LVL94:
 260:Core/Src/main.c ****     KalmanX = Kalman_Filter(&Kalman, IMU.Gy, IMU.Pitch, dt);
 1583              		.loc 1 260 14 discriminator 1 view .LVU442
 1584 012a 154B     		ldr	r3, .L93+20
 1585 012c 83ED000B 		vstr.64	d0, [r3]
 261:Core/Src/main.c **** 
 1586              		.loc 1 261 5 is_stmt 1 discriminator 1 view .LVU443
 261:Core/Src/main.c **** 
 1587              		.loc 1 261 41 is_stmt 0 discriminator 1 view .LVU444
 1588 0130 D4F80480 		ldr	r8, [r4, #4]	@ float
 261:Core/Src/main.c **** 
 1589              		.loc 1 261 15 discriminator 1 view .LVU445
 1590 0134 606B     		ldr	r0, [r4, #52]	@ float
 1591 0136 FFF7FEFF 		bl	__aeabi_f2d
 1592              	.LVL95:
 1593 013a 41EC190B 		vmov	d9, r0, r1
 1594 013e 4046     		mov	r0, r8	@ float
 1595 0140 FFF7FEFF 		bl	__aeabi_f2d
 1596              	.LVL96:
 1597 0144 B0EE482A 		vmov.f32	s4, s16
 1598 0148 B0EE491A 		vmov.f32	s2, s18
 1599 014c F0EE691A 		vmov.f32	s3, s19
 1600 0150 41EC100B 		vmov	d0, r0, r1
 1601 0154 3846     		mov	r0, r7
 1602 0156 FFF7FEFF 		bl	Kalman_Filter
 1603              	.LVL97:
ARM GAS  /tmp/ccFuSgnh.s 			page 49


 261:Core/Src/main.c **** 
 1604              		.loc 1 261 13 discriminator 1 view .LVU446
 1605 015a 0A4B     		ldr	r3, .L93+24
 1606 015c 83ED000B 		vstr.64	d0, [r3]
 267:Core/Src/main.c ****     /**
 1607              		.loc 1 267 5 is_stmt 1 discriminator 1 view .LVU447
 267:Core/Src/main.c ****     /**
 1608              		.loc 1 267 15 is_stmt 0 discriminator 1 view .LVU448
 1609 0160 3560     		str	r5, [r6]
 275:Core/Src/main.c ****   }
 1610              		.loc 1 275 5 is_stmt 1 discriminator 1 view .LVU449
 1611 0162 4FF49670 		mov	r0, #300
 1612 0166 FFF7FEFF 		bl	HAL_Delay
 1613              	.LVL98:
 1614              	.LBE15:
 249:Core/Src/main.c ****   {
 1615              		.loc 1 249 9 discriminator 1 view .LVU450
 1616 016a A3E7     		b	.L91
 1617              	.L94:
 1618              		.align	2
 1619              	.L93:
 1620 016c 00000000 		.word	.LANCHOR9
 1621 0170 00000000 		.word	.LANCHOR3
 1622 0174 0000FA44 		.word	1157234688
 1623 0178 00000000 		.word	.LANCHOR11
 1624 017c 00000000 		.word	.LANCHOR12
 1625 0180 00000000 		.word	.LANCHOR4
 1626 0184 00000000 		.word	.LANCHOR6
 1627              		.cfi_endproc
 1628              	.LFE133:
 1630              		.global	last_time
 1631              		.global	elapsedTimer
 1632              		.global	Pitch
 1633              		.global	Roll
 1634              		.global	Yaw_Input
 1635              		.global	Throttle_Input
 1636              		.global	Pitch_Input
 1637              		.global	Roll_Input
 1638              		.global	KalmanY
 1639              		.global	KalmanX
 1640              		.global	Kalman
 1641              		.global	motor
 1642              		.global	IMU
 1643              		.global	huart2
 1644              		.global	huart1
 1645              		.global	hdma_tim2_up_ch3
 1646              		.global	htim3
 1647              		.global	htim2
 1648              		.global	hdma_i2c1_tx
 1649              		.global	hdma_i2c1_rx
 1650              		.global	hi2c1
 1651              		.section	.bss.IMU,"aw",%nobits
 1652              		.align	2
 1653              		.set	.LANCHOR3,. + 0
 1656              	IMU:
 1657 0000 00000000 		.space	64
 1657      00000000 
ARM GAS  /tmp/ccFuSgnh.s 			page 50


 1657      00000000 
 1657      00000000 
 1657      00000000 
 1658              		.section	.bss.KalmanX,"aw",%nobits
 1659              		.align	3
 1660              		.set	.LANCHOR6,. + 0
 1663              	KalmanX:
 1664 0000 00000000 		.space	8
 1664      00000000 
 1665              		.section	.bss.KalmanY,"aw",%nobits
 1666              		.align	3
 1667              		.set	.LANCHOR4,. + 0
 1670              	KalmanY:
 1671 0000 00000000 		.space	8
 1671      00000000 
 1672              		.section	.bss.Pitch,"aw",%nobits
 1673              		.align	2
 1674              		.set	.LANCHOR7,. + 0
 1677              	Pitch:
 1678 0000 00000000 		.space	30
 1678      00000000 
 1678      00000000 
 1678      00000000 
 1678      00000000 
 1679              		.section	.bss.Pitch_Input,"aw",%nobits
 1680              		.align	2
 1683              	Pitch_Input:
 1684 0000 00000000 		.space	4
 1685              		.section	.bss.Roll,"aw",%nobits
 1686              		.align	2
 1687              		.set	.LANCHOR5,. + 0
 1690              	Roll:
 1691 0000 00000000 		.space	30
 1691      00000000 
 1691      00000000 
 1691      00000000 
 1691      00000000 
 1692              		.section	.bss.Roll_Input,"aw",%nobits
 1693              		.align	2
 1696              	Roll_Input:
 1697 0000 00000000 		.space	4
 1698              		.section	.bss.Yaw_Input,"aw",%nobits
 1699              		.align	2
 1702              	Yaw_Input:
 1703 0000 00000000 		.space	4
 1704              		.section	.bss.elapsedTimer,"aw",%nobits
 1705              		.align	2
 1708              	elapsedTimer:
 1709 0000 00000000 		.space	30
 1709      00000000 
 1709      00000000 
 1709      00000000 
 1709      00000000 
 1710              		.section	.bss.hdma_i2c1_rx,"aw",%nobits
 1711              		.align	2
 1714              	hdma_i2c1_rx:
 1715 0000 00000000 		.space	96
ARM GAS  /tmp/ccFuSgnh.s 			page 51


 1715      00000000 
 1715      00000000 
 1715      00000000 
 1715      00000000 
 1716              		.section	.bss.hdma_i2c1_tx,"aw",%nobits
 1717              		.align	2
 1720              	hdma_i2c1_tx:
 1721 0000 00000000 		.space	96
 1721      00000000 
 1721      00000000 
 1721      00000000 
 1721      00000000 
 1722              		.section	.bss.hdma_tim2_up_ch3,"aw",%nobits
 1723              		.align	2
 1726              	hdma_tim2_up_ch3:
 1727 0000 00000000 		.space	96
 1727      00000000 
 1727      00000000 
 1727      00000000 
 1727      00000000 
 1728              		.section	.bss.hi2c1,"aw",%nobits
 1729              		.align	2
 1730              		.set	.LANCHOR9,. + 0
 1733              	hi2c1:
 1734 0000 00000000 		.space	84
 1734      00000000 
 1734      00000000 
 1734      00000000 
 1734      00000000 
 1735              		.section	.bss.htim2,"aw",%nobits
 1736              		.align	2
 1737              		.set	.LANCHOR1,. + 0
 1740              	htim2:
 1741 0000 00000000 		.space	72
 1741      00000000 
 1741      00000000 
 1741      00000000 
 1741      00000000 
 1742              		.section	.bss.htim3,"aw",%nobits
 1743              		.align	2
 1744              		.set	.LANCHOR2,. + 0
 1747              	htim3:
 1748 0000 00000000 		.space	72
 1748      00000000 
 1748      00000000 
 1748      00000000 
 1748      00000000 
 1749              		.section	.bss.huart1,"aw",%nobits
 1750              		.align	2
 1751              		.set	.LANCHOR10,. + 0
 1754              	huart1:
 1755 0000 00000000 		.space	68
 1755      00000000 
 1755      00000000 
 1755      00000000 
 1755      00000000 
 1756              		.section	.bss.huart2,"aw",%nobits
ARM GAS  /tmp/ccFuSgnh.s 			page 52


 1757              		.align	2
 1758              		.set	.LANCHOR8,. + 0
 1761              	huart2:
 1762 0000 00000000 		.space	68
 1762      00000000 
 1762      00000000 
 1762      00000000 
 1762      00000000 
 1763              		.section	.bss.last_time,"aw",%nobits
 1764              		.align	2
 1765              		.set	.LANCHOR11,. + 0
 1768              	last_time:
 1769 0000 00000000 		.space	4
 1770              		.section	.data.Kalman,"aw"
 1771              		.align	2
 1772              		.set	.LANCHOR12,. + 0
 1775              	Kalman:
 1776 0000 00000000 		.space	32
 1776      00000000 
 1776      00000000 
 1776      00000000 
 1776      00000000 
 1777 0020 6F12833A 		.word	981668463
 1778 0024 A69B443B 		.word	994352038
 1779 0028 0AD7233C 		.word	1008981770
 1780              		.section	.data.Throttle_Input,"aw"
 1781              		.align	1
 1784              	Throttle_Input:
 1785 0000 6400     		.short	100
 1786              		.section	.data.motor,"aw"
 1787              		.align	2
 1788              		.set	.LANCHOR0,. + 0
 1791              	motor:
 1792 0000 00000000 		.space	8
 1792      00000000 
 1793 0008 00000041 		.word	1090519040
 1794 000c 00007041 		.word	1097859072
 1795 0010 0000803F 		.word	1065353216
 1796 0014 00000000 		.space	16
 1796      00000000 
 1796      00000000 
 1796      00000000 
 1797              		.text
 1798              	.Letext0:
 1799              		.file 3 "/home/triet/Documents/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux/gcc-arm-none-eabi-10.3-
 1800              		.file 4 "/home/triet/Documents/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux/gcc-arm-none-eabi-10.3-
 1801              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1802              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1803              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1804              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1805              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1806              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1807              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1808              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1809              		.file 13 "Core/Inc/mpu6050.h"
 1810              		.file 14 "Core/Inc/kalman_filter.h"
 1811              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccFuSgnh.s 			page 53


 1812              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1813              		.file 17 "Core/Inc/main.h"
 1814              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h"
 1815              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1816              		.file 20 "Core/Inc/bmp180_for_stm32_hal.h"
 1817              		.file 21 "<built-in>"
ARM GAS  /tmp/ccFuSgnh.s 			page 54


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccFuSgnh.s:20     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccFuSgnh.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccFuSgnh.s:111    .text.MX_GPIO_Init:000000000000005c $d
     /tmp/ccFuSgnh.s:116    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccFuSgnh.s:121    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccFuSgnh.s:192    .text.MX_DMA_Init:0000000000000050 $d
     /tmp/ccFuSgnh.s:200    .text.PID_Control:0000000000000000 $t
     /tmp/ccFuSgnh.s:206    .text.PID_Control:0000000000000000 PID_Control
     /tmp/ccFuSgnh.s:317    .text.PID_Control:00000000000000b8 $d
     /tmp/ccFuSgnh.s:325    .text.motorControl:0000000000000000 $t
     /tmp/ccFuSgnh.s:331    .text.motorControl:0000000000000000 motorControl
     /tmp/ccFuSgnh.s:592    .text.motorControl:0000000000000170 $d
     /tmp/ccFuSgnh.s:599    .rodata.HAL_I2C_MemRxCpltCallback.str1.4:0000000000000000 $d
     /tmp/ccFuSgnh.s:606    .text.HAL_I2C_MemRxCpltCallback:0000000000000000 $t
     /tmp/ccFuSgnh.s:612    .text.HAL_I2C_MemRxCpltCallback:0000000000000000 HAL_I2C_MemRxCpltCallback
     /tmp/ccFuSgnh.s:681    .text.HAL_I2C_MemRxCpltCallback:0000000000000050 $d
     /tmp/ccFuSgnh.s:694    .text.Error_Handler:0000000000000000 $t
     /tmp/ccFuSgnh.s:700    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccFuSgnh.s:732    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccFuSgnh.s:737    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccFuSgnh.s:795    .text.MX_I2C1_Init:000000000000002c $d
     /tmp/ccFuSgnh.s:802    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccFuSgnh.s:807    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccFuSgnh.s:862    .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/ccFuSgnh.s:868    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccFuSgnh.s:873    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccFuSgnh.s:928    .text.MX_USART2_UART_Init:000000000000002c $d
     /tmp/ccFuSgnh.s:934    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccFuSgnh.s:939    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccFuSgnh.s:1093   .text.MX_TIM2_Init:00000000000000a0 $d
     /tmp/ccFuSgnh.s:1098   .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccFuSgnh.s:1103   .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccFuSgnh.s:1206   .text.MX_TIM3_Init:0000000000000060 $d
     /tmp/ccFuSgnh.s:1212   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccFuSgnh.s:1218   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccFuSgnh.s:1378   .text.SystemClock_Config:00000000000000ac $d
     /tmp/ccFuSgnh.s:1384   .text.main:0000000000000000 $t
     /tmp/ccFuSgnh.s:1390   .text.main:0000000000000000 main
     /tmp/ccFuSgnh.s:1620   .text.main:000000000000016c $d
     /tmp/ccFuSgnh.s:1768   .bss.last_time:0000000000000000 last_time
     /tmp/ccFuSgnh.s:1708   .bss.elapsedTimer:0000000000000000 elapsedTimer
     /tmp/ccFuSgnh.s:1677   .bss.Pitch:0000000000000000 Pitch
     /tmp/ccFuSgnh.s:1690   .bss.Roll:0000000000000000 Roll
     /tmp/ccFuSgnh.s:1702   .bss.Yaw_Input:0000000000000000 Yaw_Input
     /tmp/ccFuSgnh.s:1784   .data.Throttle_Input:0000000000000000 Throttle_Input
     /tmp/ccFuSgnh.s:1683   .bss.Pitch_Input:0000000000000000 Pitch_Input
     /tmp/ccFuSgnh.s:1696   .bss.Roll_Input:0000000000000000 Roll_Input
     /tmp/ccFuSgnh.s:1670   .bss.KalmanY:0000000000000000 KalmanY
     /tmp/ccFuSgnh.s:1663   .bss.KalmanX:0000000000000000 KalmanX
     /tmp/ccFuSgnh.s:1775   .data.Kalman:0000000000000000 Kalman
     /tmp/ccFuSgnh.s:1791   .data.motor:0000000000000000 motor
     /tmp/ccFuSgnh.s:1656   .bss.IMU:0000000000000000 IMU
     /tmp/ccFuSgnh.s:1761   .bss.huart2:0000000000000000 huart2
     /tmp/ccFuSgnh.s:1754   .bss.huart1:0000000000000000 huart1
     /tmp/ccFuSgnh.s:1726   .bss.hdma_tim2_up_ch3:0000000000000000 hdma_tim2_up_ch3
ARM GAS  /tmp/ccFuSgnh.s 			page 55


     /tmp/ccFuSgnh.s:1747   .bss.htim3:0000000000000000 htim3
     /tmp/ccFuSgnh.s:1740   .bss.htim2:0000000000000000 htim2
     /tmp/ccFuSgnh.s:1720   .bss.hdma_i2c1_tx:0000000000000000 hdma_i2c1_tx
     /tmp/ccFuSgnh.s:1714   .bss.hdma_i2c1_rx:0000000000000000 hdma_i2c1_rx
     /tmp/ccFuSgnh.s:1733   .bss.hi2c1:0000000000000000 hi2c1
     /tmp/ccFuSgnh.s:1652   .bss.IMU:0000000000000000 $d
     /tmp/ccFuSgnh.s:1659   .bss.KalmanX:0000000000000000 $d
     /tmp/ccFuSgnh.s:1666   .bss.KalmanY:0000000000000000 $d
     /tmp/ccFuSgnh.s:1673   .bss.Pitch:0000000000000000 $d
     /tmp/ccFuSgnh.s:1680   .bss.Pitch_Input:0000000000000000 $d
     /tmp/ccFuSgnh.s:1686   .bss.Roll:0000000000000000 $d
     /tmp/ccFuSgnh.s:1693   .bss.Roll_Input:0000000000000000 $d
     /tmp/ccFuSgnh.s:1699   .bss.Yaw_Input:0000000000000000 $d
     /tmp/ccFuSgnh.s:1705   .bss.elapsedTimer:0000000000000000 $d
     /tmp/ccFuSgnh.s:1711   .bss.hdma_i2c1_rx:0000000000000000 $d
     /tmp/ccFuSgnh.s:1717   .bss.hdma_i2c1_tx:0000000000000000 $d
     /tmp/ccFuSgnh.s:1723   .bss.hdma_tim2_up_ch3:0000000000000000 $d
     /tmp/ccFuSgnh.s:1729   .bss.hi2c1:0000000000000000 $d
     /tmp/ccFuSgnh.s:1736   .bss.htim2:0000000000000000 $d
     /tmp/ccFuSgnh.s:1743   .bss.htim3:0000000000000000 $d
     /tmp/ccFuSgnh.s:1750   .bss.huart1:0000000000000000 $d
     /tmp/ccFuSgnh.s:1757   .bss.huart2:0000000000000000 $d
     /tmp/ccFuSgnh.s:1764   .bss.last_time:0000000000000000 $d
     /tmp/ccFuSgnh.s:1771   .data.Kalman:0000000000000000 $d
     /tmp/ccFuSgnh.s:1781   .data.Throttle_Input:0000000000000000 $d
     /tmp/ccFuSgnh.s:1787   .data.motor:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_dsub
__aeabi_d2iz
__aeabi_f2d
__aeabi_i2d
__aeabi_dadd
__aeabi_d2uiz
HAL_TIM_PWM_Start
MPU6050_Calculate
sprintf
HAL_UART_Transmit
HAL_I2C_Init
HAL_UART_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
MPU6050_Init
BMP180_Init
BMP180_SetOversampling
BMP180_UpdateCalibrationData
ARM GAS  /tmp/ccFuSgnh.s 			page 56


MPU6050_Read
HAL_Delay
HAL_GetTick
Kalman_Filter
